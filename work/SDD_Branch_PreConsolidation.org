#+PAGEID: 1852751018
#+VERSION: 5
#+STARTUP: align
#+OPTIONS: toc:1
#+TITLE: SDD-Branch Pre-Consolidation Report
** General Information
*** Stakeholders and Roles
| Role                  | Name          |
|-----------------------+---------------|
| Author(s)             | Vincent Zhang |
| Architect             | Vincent Zhang |
| Product Owner         | Shi Ying      |
| Information Developer |               |
| Quality Responsible   |               |
| Developers            |               |

*** References
|                        |                  |              | <30>                           |
| Document Title         | Date             | Link         | Comments                       |
|------------------------+------------------+--------------+--------------------------------|
| Branch Accounting      | <2017-06-12 Mon> | [[http://www.investopedia.com/terms/b/branch-accounting.asp][investopedia]] | Branch accounting is an accounting system in which separate accounts are maintained for each branch of a corporate entity or organization. |
| Accounting Posting API | <2016-10-07 Fri> |              |                                |

** Concept
The report is used for branch consolidation, or a very simple preview of consolidated financial statements.
Each branch is represented as a company code in SAP accounting system. The company codes share the same chart of accounts, and fiscal year variant. 

As the report only targets with a special requirement(for SwissRE), there are boundary conditions must be met. 

*** Boundary Conditions
1. All company codes share the same Chart-of-Accounts and FYV.
2. Company code and Company should have a one-on-one map.
3. At least one currency amount field in ACDOCA can be chosen as the elimination amount, for sure, this amount should have the same currency key for all involved company codes(branches).
4. There is no specific currency translation logic for the report, currency should be translated before hand by external means.
5. Elimination runs based on the offset accounts assigned on each relevant account where intra-company transactions are posted to.
6. The amounts on those intra-company accounts should be eliminated, and be recorded on the offset accounts.
7. In case of non-matching intra-company balance, a difference amount would remain on the offset account.
8. Branch structures are not required, as the report only takes a flat range of branches by parameter inputs.
9. Every branch(company code) is treated as fully(100%) consolidated.

*** Key Requirements and Design Goals
The report can be developed using ABAP ALV technology. It first finds and aggregates journal entries in ACDOCA, run elimination based on offset accounts, and posts the results to an extension ledger in ACDOCA. By doing that, one can re-use existing FI reporting tools to view the elimination result, so that no additional group level reports need to be developed. 

**** Following Design Goals *MUST* be Met:
1. A minimal configuration to assign offset accounts to operational accounts.
2. A report can show transient elimination result before posting.
3. When decide posting, one can choose to which extension ledger he/she wants to post.
4. When repeat posting, only delta amounts are posted.
5. Error should be correctly handled during posting.
6. The elimination result can be reported using existing Fiori APPS only company code level, like: Display Financial Statement, Display G/L Account Balances and so on.  

**** Following Design Goals *SHOULD* be Met:
1. The posted elimination documents can be reversed.

*** Example
1. Original lines in ACDOCA (The offset account is read from the account master data)
| GL Account | Offset Account | Company | Trading Partner | Amount in Selected Currency |
|------------+----------------+---------+-----------------+-----------------------------|
|    1001001 |        1001999 |  100000 |          200000 |                        5000 |
|    2001001 |        1001999 |  200000 |          100000 |                       -5100 |
|    3001001 |           NONE |  100000 |          200000 |                        3000 |

2. Result after elimination run. The difference will be posted to the lower value side by default.
In following case company 100000 has the amount 5000, which is lower than -5100(in absolute value), so the difference will be posted to company 100000.
| GL Account | Company  | Trading Partner | Amount in Selected Currency |
|------------+----------+-----------------+-----------------------------|
| 1001001    | 100000   | 200000          | 5000                        |
| _1001001_  | _100000_ | _200000_        | _-5000_                     |
| ~1001999~  | ~100000~ | ~200000~        | ~5000~                      |
| 2001001    | 200000   | 100000          | -5100                       |
| _2001001_  | _200000_ | _100000_        | _5100_                      |
| ~1001999~  | ~100000~ | ~200000~        | ~-5100~                     |
| 3001001    | 100000   | 200000          | 3000                        |

3. Result after aggregation
| GL Account |  Company | Trading Partner | Amount in Selected Currency |
|------------+----------+-----------------+-----------------------------|
|    1001001 |   100000 |          200000 |                           0 |
|    2001001 |   200000 |          100000 |                           0 |
|  ~1001999~ | ~100000~ |        ~200000~ |                      ~-100~ |
|    3001001 |   100000 |          200000 |                        3000 |

4. Journal entries posted to the extension ledger
| Ledger | GL Account | Company  | Trading Partner | Amount in Selected Currency |
|--------+------------+----------+-----------------+-----------------------------|
| E1     | _1001001_  | _100000_ | _200000_        | _-5000_                     |
| E1     | ~1001999~  | ~100000~ | ~200000~        | ~5000~                      |
| E1     | _2001001_  | _200000_ | _100000_        | _5100_                      |
| E1     | ~1001999~  | ~100000~ | ~200000~        | ~-5100~                     |

*** Major Building Blocks
#+Caption: Elimination Overall Context
[[../image/EliminationOverall.png]] 

 Elimination runs after currency translation. Because each entity can be assigned with a dedicate CT method, to converted all the data, CT methods should be run sequentially entity by entity. Local data is read from ACDOCA or ACDOCC, converted, and then saved into the global temporal table GT_ACDOCC, which has the similar structure with ACDOCC. 

The On-The-Fly CT runables and Reconciliation Runables can read the translated data and produce On-The-Fly CT Report and Reconciliation Report directly. 

Elimination runables read the translated data and produce auto-adjustment lines, which will then inserted into GT_ACDOCC. During elimination, group hierarchy information is read, so that the system know which entities belong to the same group(or super group). Till now, GT_ACDOCC contains the eliminated data for group reporting.

On-The-Fly elimination runables converts the data in GT_ACDOCC to structured group reporting format. Besides, posting method read the data from GT_ACDOCC and then persist into ACDOCC. It Can be chosen to only post the currency translated result or also the elimination result. 

User can also define their own reporting, as all the data needed are either in the global temporary table, or persisted in ACDOCC. 

Based on the diagram, following building blocks should be given:

** Detail Design
*** Elimination Method


*** Examples & Deduction
