#+PAGEID: 1852751018
#+VERSION: 5
#+STARTUP: align
#+OPTIONS: toc:1
#+TITLE: SDD-Branch Pre-Consolidation Report
** General Information
*** Stakeholders and Roles
| Role                  | Name          |
|-----------------------+---------------|
| Author(s)             | Vincent Zhang |
| Architect             | Vincent Zhang |
| Product Owner         | Shi Ying      |
| Information Developer |               |
| Quality Responsible   |               |
| Developers            |               |

*** References
|                        |                  |              | <30>                           |
| Document Title         | Date             | Link         | Comments                       |
|------------------------+------------------+--------------+--------------------------------|
| Branch Accounting      | <2017-06-12 Mon> | [[http://www.investopedia.com/terms/b/branch-accounting.asp][investopedia]] | Branch accounting is an accounting system in which separate accounts are maintained for each branch of a corporate entity or organization. |
| Accounting Posting API | <2016-10-07 Fri> |              |                                |

** Concept
The report is used for branch consolidation, or a very simple preview of consolidated financial statements.
Each branch is represented as a company code in SAP accounting system. The company codes share the same chart of accounts, and fiscal year variant. 

As the report only targets with a special requirement(for SwissRE), there are boundary conditions must be met. 

*** Boundary Conditions
1. All company codes share the same Chart-of-Accounts and FYV.
2. Company code and Company should have a one-on-one map.
3. At least one currency amount field in ACDOCA can be chosen as the elimination amount, for sure, this amount should have the same currency key for all involved company codes(branches).
4. There is no specific currency translation logic for the report, currency should be translated before hand by external means.
5. Elimination runs based on the offset accounts assigned on each relevant account where intra-company transactions are posted to.
6. The amounts on those intra-company accounts should be eliminated, and be recorded on the offset accounts.
7. In case of non-matching intra-company balance, a difference amount would remain on the offset account.
8. Branch structures are not required, as the report only takes a flat range of branches by parameter inputs.
9. Every branch(company code) is treated as fully(100%) consolidated.

*** Key Requirements and Design Goals
The report can be developed using ABAP ALV technology. It first finds and aggregates journal entries in ACDOCA, then run elimination based on the offset accounts settings. At last, decide to post the results to an extension ledger in ACDOCA. By doing that, one can re-use existing FI reporting tools to view the elimination result, so that no additional group level reports need to be developed. 

*The assumption of existing Fiori Reports fulfill the requirement must be met.* Or if additional group level reports need to be developed, then the total cost would be very high. 

**** Following Design Goals *MUST* be Met:
1. A minimal configuration to assign offset accounts to operational accounts.
2. A report can show transient elimination result before posting.
3. When decide posting, one can choose to which extension ledger he/she wants to post.
4. When repeat posting, only delta amounts are posted.
5. Error should be correctly handled during posting.
6. The elimination result can be reported using existing Fiori APPS, like: Display Financial Statement, Display G/L Account Balances and so on.  

**** Following Design Goals *SHOULD* be Met:
1. The posted elimination documents can be reversed.
2. Backgroud run mode should be supported in case  periodically schedules are necessary or dialog run takes too much time.
3. Performance should be garanteed when executing on handerds of companys.

*** Example
1. Original lines in ACDOCA (The offset account is read from the account master data)
| Company | Trading Partner | GL Account | Offset Account | Amount in Selected Currency |
|---------+-----------------+------------+----------------+-----------------------------|
|  100000 |          200000 |    1001001 |        1001999 |                        5000 |
|  200000 |          100000 |    2001001 |        1001999 |                       -5100 |
|  100000 |          200000 |    3001001 |           NONE |                        3000 |

2. Result after elimination run. The difference will be posted to the side: lower/higher, negative/postive?
| Company  | Trading Partner | GL Account | Amount in Selected Currency |
|----------+-----------------+------------+-----------------------------|
| 100000   | 200000          | 1001001    | 5000                        |
| _100000_ | _200000_        | _1001001_  | _-5000_                     |
| ~100000~ | ~200000~        | ~1001999~  | ~5000~                      |
| 200000   | 100000          | 2001001    | -5100                       |
| _200000_ | _100000_        | _2001001_  | _5100_                      |
| ~100000~ | ~200000~        | ~1001999~  | ~-5100~                     |
| 100000   | 200000          | 3001001    | 3000                        |

3. Result after aggregation
|  Company | Trading Partner | GL Account | Amount in Selected Currency |
|----------+-----------------+------------+-----------------------------|
|   100000 |          200000 |    1001001 |                           0 |
|   200000 |          100000 |    2001001 |                           0 |
| ~100000~ |        ~200000~ |  ~1001999~ |                      ~-100~ |
|   100000 |          200000 |    3001001 |                        3000 |

4. Journal entries posted to the extension ledger
| Ledger | Company  | Trading Partner | GL Account | Amount in Selected Currency |
|--------+----------+-----------------+------------+-----------------------------|
| E1     | _100000_ | _200000_        | _1001001_  | _-5000_                     |
| E1     | ~100000~ | ~200000~        | ~1001999~  | ~5000~                      |
| E1     | _200000_ | _100000_        | _2001001_  | _5100_                      |
| E1     | ~100000~ | ~200000~        | ~1001999~  | ~-5100~                     |

** Detail Design

*** Offset Accounting Customization 
The offset accounting customization can re-use existing RTCGLA.

#+Caption: Elimination Overall Context
[[../image/EliminationOverall.png]] 

*** Elimination Report

**** SQL Logic

#+CAPTION: Read Data with Trading Partner is Not Empty
#+BEGIN_SRC sql
create view P_SOURCE as 
  select * from ACDOCA as A
           join T883 as B
             on A.RBUKRS = B.BUKRS
          where B.RCOMP in [100000, 200000]
            and RLDNR = '0L' 
            and RASSC != ''; 
#+END_SRC

We must join ledger configuration table to know which amount field and which ledgers should be filterred in. 

#+CAPTION: Eliminate Amounts of Accounts which have offset Accounts
#+BEGIN_SRC sql
create view P_ELIMINATE as 
  select ...
         0 - Amount as Amount,
         ...
    from P_SOURCE AS A
    join RTC_ACCT_EXT as B
      on A.RACCT = B.RACCT
   where B.ELIMACCT != ''; 
#+END_SRC

#+CAPTION: Record Differences to The Offset Account
#+BEGIN_SRC sql
create view P_DIFF as 
  select ...
         (case when Amount > 0 then RCOMP else RASSC) as RCOMP,
         (case when Amount < 0 then RCOMP else RASSC) as RASSC,
         ELIMACCT as RACCT,
         Amount,
         ...
    from P_SOURCE AS A
    join RTC_ACCT_EXT as B
      on A.RACCT = B.RACCT
   where B.ELIMACCT != ''; 
#+END_SRC

#+CAPTION: Union of All the Sets
#+BEGIN_SRC sql
create view P_UNION as 
  select * from P_SOURCE
    union all
  select * from P_ELIMINATE
    union all
  select * from P_DIFF
#+END_SRC
*** Posting
