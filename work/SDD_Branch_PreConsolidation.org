#+PAGEID: 
#+VERSION: 1
#+STARTUP: align
#+OPTIONS: toc:1
#+TITLE: SDD-Branch Pre-Consolidation Report
** General Information
*** Stakeholders and Roles
| Role                  | Name          |
|-----------------------+---------------|
| Author(s)             | Vincent Zhang |
| Architect             | Vincent Zhang |
| Product Owner         | Shi Ying      |
| Information Developer |               |
| Quality Responsible   |               |
| Developers            |               |

*** References
|                        |                  |              | <30>                           |
| Document Title         | Date             | Link         | Comments                       |
|------------------------+------------------+--------------+--------------------------------|
| Branch Accounting      | <2017-06-12 Mon> | [[http://www.investopedia.com/terms/b/branch-accounting.asp][investopedia]] | Branch accounting is an accounting system in which separate accounts are maintained for each branch of a corporate entity or organization. |
| Accounting Posting API | <2016-10-07 Fri> |              |                                |
| Fiori Analytical Table | <2017-06-13 Tue> | [[https://experience.sap.com/fiori-design-web/analytical-table-alv/][Fiori-Design]] | An analytical table contains a set of data that is structured in rows and columns. It provides several powerful possibilities for working with the data, including advanced grouping and aggregations. |

** Concept
The report is used for branch consolidation, or a very simple preview of consolidated financial statements. Each branch is represented as a company code in SAP accounting system. The company codes share the same chart of accounts, and fiscal year variant. 

As the report only targets with a special requirement(for Swiss-RE), there are boundary conditions must be met.

*** Boundary Conditions
1. All company codes share the same Chart-of-Accounts and FYV.
2. Company code and Company should have a one-on-one map.
3. At least one currency amount field in ACDOCA can be chosen as the elimination amount, for sure, this amount should have the same currency key for all involved company codes(branches).
4. There is no specific currency translation logic for the report, currency should be translated before hand by external means.
5. Elimination runs based on the offset accounts assigned on each relevant account where intra-company transactions are posted to.
6. The amounts on those intra-company accounts should be eliminated, and be recorded on the offset accounts.
7. In case of non-matching intra-company balance, a difference amount would remain on the offset account.
8. Branch structures are not required, as the report only takes a flat range of branches by parameter inputs.
9. Every branch(company code) is treated as fully(100%) consolidated.

*** Key Requirements and Design Goals
The report can be developed using ABAP ALV technology. It first finds and aggregates journal entries in ACDOCA, then run elimination based on the offset accounts settings. At last, decide to post the results to an extension ledger in ACDOCA. By doing that, one can re-use existing FI reporting tools to view the elimination result, so that no additional group level reports need to be developed. 

*The assumption of existing Fiori Reports fulfill the requirement must be met.* Or if additional group level reports need to be developed, then the total cost would be very high. 

**** Following Design Goals *MUST* be Met:
1. A minimal configuration to assign offset accounts to operational accounts.
2. A report can show transient elimination result before posting.
3. When decide posting, one can choose to which extension ledger he/she wants to post.
4. When repeat posting, previous document should be reversed.
5. Error should be correctly handled during posting.
6. The elimination result can be reported using existing Fiori APPS, like: Display Financial Statement, Display G/L Account Balances and so on.  

**** Following Design Goals *SHOULD* be Met:
1. The posted elimination documents can be reversed manually.
2. Background run mode should be supported in case  periodically schedules are necessary or dialog run takes too much time.
3. Performance should be guaranteed when executing on hundreds of companies.

*** Example
1. Original lines in ACDOCA (The offset account is read from the account master data)
| Company | Trading Partner | GL Account | Offset Account | Amount in Selected Currency |
|---------+-----------------+------------+----------------+-----------------------------|
|  100000 |          200000 |    1001001 |        1001999 |                        5000 |
|  200000 |          100000 |    2001001 |        1001999 |                       -5100 |
|  100000 |          200000 |    3001001 |           NONE |                        3000 |

2. Result after elimination run. The difference will be posted to the side: lower/higher, negative/positive?
| Company  | Trading Partner | GL Account | Amount in Selected Currency |
|----------+-----------------+------------+-----------------------------|
| 100000   | 200000          | 1001001    | 5000                        |
| _100000_ | _200000_        | _1001001_  | _-5000_                     |
| ~100000~ | ~200000~        | ~1001999~  | ~5000~                      |
| 200000   | 100000          | 2001001    | -5100                       |
| _200000_ | _100000_        | _2001001_  | _5100_                      |
| ~100000~ | ~200000~        | ~1001999~  | ~-5100~                     |
| 100000   | 200000          | 3001001    | 3000                        |

3. Result after aggregation
|  Company | Trading Partner | GL Account | Amount in Selected Currency |
|----------+-----------------+------------+-----------------------------|
|   100000 |          200000 |    1001001 |                           0 |
|   200000 |          100000 |    2001001 |                           0 |
| ~100000~ |        ~200000~ |  ~1001999~ |                      ~-100~ |
|   100000 |          200000 |    3001001 |                        3000 |

4. Journal entries posted to the extension ledger
| Ledger | Company  | Trading Partner | GL Account | Amount in Selected Currency |
|--------+----------+-----------------+------------+-----------------------------|
| E1     | _100000_ | _200000_        | _1001001_  | _-5000_                     |
| E1     | ~100000~ | ~200000~        | ~1001999~  | ~5000~                      |
| E1     | _200000_ | _100000_        | _2001001_  | _5100_                      |
| E1     | ~100000~ | ~200000~        | ~1001999~  | ~-5100~                     |

** Detail Design

*** Offset Account Customization 
The offset accounting customization can re-use existing RTCGLA.

#+Caption: Offset Account Customization
[[../image/OffsetAcctCust.png]] 

*** Elimination Report
The elimination report is used for a pre-check before posting. So it only displays the relevant account(with elimination account set) in a flat format. It has little ability to do analyzing, and analyzing should be done in G/L Accounting's existing report tools. 

The report is better to be developed using ABAP ALV. Fiori is not recommended considering the cost and limitations on its table control.

#+Caption: Selection Screen
[[../image/BranchEliminationReport01.png]] 
1. Source Ledger is mandatory, it shouldn't be an extension ledger because if source data is combined with an extension ledger and a leading ledger, then you just can't combine another extension ledger using existing report tools.
2. Fiscal Year Period is mandatory. Each time the report only deal with one fiscal year period.
3. Company is a select-option, if it is not entered, it means all.
4. A currency field must be chosen, to tell the report on which currency amount field the elimination logic would run.
5. If the checkbox of "Post Directly to" is checked, then the "Extension Ledger" will be shown. And user has to give an extension ledger so that the elimination result can be posted to. This is mainly used in background mode.

#+Caption: List Screen
[[../image/BranchEliminationReport02.png]] 
1. The list header display the selections. The involved companies are listed separated by comma.
2. The list is sorted and grouped by Company, Trading Partner, Offset Account.
3. The field "Elim Amount" is dynamically decided based on the currency field chosen in the selection screen.
4. The red lines are eliminated lines, the green lines are differences posted to the offset account, the source lines are displayed in normal colors.
5. The field "Posting Status" indicates whether the elimination result lines are posted or not. It has following status: Initial(no posting has ever been done), Posted(The latest document is posted successfully), Reversed(The latest document is reversed), Error(The latest post fails), Empty(The line doesn't require posting).
6. "Doc Number" always display the latest successful document number.
7. When the button "Post" is clicked, a dialog popup to allow user enter an extension ledger. If the extension ledger is given in the selection screen, the dialog can be omitted. In case posting is repeatedly clicked, the previous document will be reversed first, then new document will be posted. 
8. When the button "Reverse" is clicked, all the companies listed will be reversed by posting a reverse document. If some companies' posting status are already reversed or initial, then they will be omitted.
9. "Refresh" button gives out the latest result.
10. "Posting Log" navigates to a dialog which display the posting history for the selected companies, grouped by Source Ledger, Fiscal Year Period, Target Extension Ledger, and Company.
    
**** SQL Logic to Read and Calculate Data
*It would be difficult or impossible to use CDS or pure select statements to describe the elimination logic.* This is mainly because the G/L Leger customization is complicate, and hard to represent using SQL scripts. This needs further investigation and testing. 

However, combined with ABAP logic, the read and calculation can be easily achieved.

#+CAPTION: Read Data with Trading Partner is Not Empty
#+BEGIN_SRC sql
create view P_SOURCE as 
  select * from ACDOCA as A
           join T880 as B
             on A.RBUKRS = B.BUKRS
          where B.RCOMP in [100000, 200000]
            and RLDNR = '0L' 
            and RASSC != ''; 
#+END_SRC

We must join ledger configuration tables(FINSC_LEDGER and FINSC_LD_CMP) to know which amount field and which ledgers should be filterred in. 

#+CAPTION: Eliminate Amounts of Accounts which have offset Accounts
#+BEGIN_SRC sql
create view P_ELIMINATE as 
  select ...
         0 - Amount as Amount,
         ...
    from P_SOURCE AS A
    join RTC_ACCT_EXT as B
      on A.RACCT = B.RACCT
   where B.ELIMACCT != ''; 
#+END_SRC

#+CAPTION: Record Differences to The Offset Account
#+BEGIN_SRC sql
create view P_DIFF as 
  select ...
         (case when Amount > 0 then RCOMP else RASSC) as RCOMP,
         (case when Amount < 0 then RCOMP else RASSC) as RASSC,
         ELIMACCT as RACCT,
         Amount,
         ...
    from P_SOURCE AS A
    join RTC_ACCT_EXT as B
      on A.RACCT = B.RACCT
   where B.ELIMACCT != ''; 
#+END_SRC

#+CAPTION: Union of All the Sets
#+BEGIN_SRC sql
create view P_UNION as 
  select * from P_SOURCE
    union all
  select * from P_ELIMINATE
    union all
  select * from P_DIFF
#+END_SRC

**** Existing Report Tool in G/L Accounting
#+Caption: Display Financial Statement
[[../image/DisplayFinancialStatement.png]] 

This report supports multiple company codes. The ledger also supports extension ledger. It supposes we can leverage it to report both company and group level eliminated result. 

*** Posting
Posting and reverse should be supported. If posting to an extension ledger, which currency amount fields are filled should be consistent with the source ledger. For example, OSL is used as the elimination amount field in source ledger 0L. The extension ledger E1 must also be configured to use OSL as the target posting amount with same currency key.   

Processing the extension ledger behaves like a standard ledger. You can use the same BAPIs which can be used for a ledger specific posting eg. BAPI_ACC_DOCUMENT_CHECK / POST.  A ledger specific posting can be triggered if you specific  an  accounting principle in the header structure of the BAPI (BAPIACHE09-ACC_PRINCIPLE) which is assigned to ledger group ((extension-)ledger). 

Reversal can be triggered using bapi bapi_acc_document_rev_post .

