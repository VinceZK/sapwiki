#+PAGEID: 1821717599
#+VERSION: 15
#+STARTUP: align
#+OPTIONS: toc:1
#+TITLE: SDD-Modeling
** General Information
*** Stakeholders and Roles
| Role                  | Name                |
|-----------------------+---------------------|
| Author(s)             | Vincent Zhang       |
| Architect             | Vincent Zhang       |
| Product Owner         | Shi Ying, Carol Pan |
| Information Developer |                     |
| Quality Responsible   | Yao Cen             |
| Developers            | Lynn, Sam, Frank    |

*** References
|                   |                  |               | <30>                           |
| Document Title    | Date             | Link          | Comments                       |
|-------------------+------------------+---------------+--------------------------------|
| EC-CS Modeling    | <2015-12-25 Fri> | [[http://help.sap.com/saphelp_470/helpdata/en/ab/cae87873fc11d2996b0000e8a5999a/content.htm?frameset=/en/05/b0a3c88a8b11d299830000e8a5999a/frameset.htm&current_toc=/en/5c/c1c25f445f11d189f00000e81ddfac/plain.htm&node_id=9&show_children=false][online help]]   | Modeling in EC-CS is actually configurations on consolidation master data and controlling. As EC-CS already has data container ECMCA & EMMCT. Modeling tasks could include definition of: Dimension, Cons Unit, Cons Group, Cons Chart of Account, Subassigment, Version, and Ledger. |
| BCS Modeling      | <2015-12-25 Fri> | [[https://help.sap.com/saphelp_sem40bw/helpdata/en/25/dd833b36b0980fe10000000a11402f/content.htm?frameset=/en/9d/f4783b5fed4834e10000000a114084/frameset.htm&current_toc=/en/67/f7e73ac6e7ec28e10000000a114084/plain.htm&node_id=12&show_children=false][online help]]   | Modeling in BCS differs from EC-CS is the requirement to define =Data Basis=. Data basis is a bw cube (combine data sources as data streams), which consists of characteristics and key figures with their respective roles for consolidation. base on data basis, consolidation areas can be defined which are subsets of characteristics and key figures. besides, all the master data and configuration are quite same with EC-CS. |
| BPC Modeling      | <2015-12-23 Wed> | [[http://help.sap.com/saphelp_bopacnw101/helpdata/en/61/4248fcbed34a32b4e0637185fda206/content.htm?frameset=/en/99/3b45ce7bd64133ac81afd1698d93c5/frameset.htm&current_toc=/en/82/f51cf12cfc48c58975b9b5e6fba9aa/plain.htm&node_id=126][online help]]   | BPC has 2 versions: Standard and Embedded. There are differences on modeling of the 2 products versions. RTC refers much more to its embedded version. In its embedded version, modeling means tie a BW virtual-provider and define fields role. |
| Cons. Versions    | <2016-03-08 Tue> | [[http://help.sap.com/saphelp_470/helpdata/en/8c/cf7d7888f711d299810000e8a5999a/content.htm?frameset=/en/dc/f18b884efb11d39a350000e8a5999a/frameset.htm&current_toc=/en/5c/c1c25f445f11d189f00000e81ddfac/plain.htm&node_id=19][online help]]   | Version is rather a complicate concept in consolidation. As a lot of settings are based on version. There are also differences between EC-CS and BCS. In EC-CS, version is only a 3-char long code, while in BCS, the same 3-char long code is assigned with a combination of multiple characteristics. |
| SAP SET           | <2016-02-21 Sun> | [[http://help.sap.com/saphelp_46c/helpdata/en/c1/fcdf390ab90b35e10000000a11402f/content.htm?frameset=/en/c1/fcdf390ab90b35e10000000a11402f/frameset.htm&current_toc=/en/c4/74da3889432f48e10000000a114084/plain.htm&node_id=3&show_children=true#jump3][online help]]   | Introduce what is SAP SET, different types of SET, and how it is used in SAP environment. |
| SAP Appl Log      | <2016-03-08 Tue> | [[http://help.sap.com/saphelp_sem40bw/helpdata/en/2a/fa0216493111d182b70000e829fbfe/content.htm?frameset=/en/2a/fa0230493111d182b70000e829fbfe/frameset.htm&current_toc=/en/2a/fa0b1a493111d182b70000e829fbfe/plain.htm&node_id=51&show_children=false][online help]]   | How to use SAP application log framework. Also refer the demo reports: SBAL_DEMO* and example class: ZCL_BG_LOG |
| Maint.View Gene   | <2016-03-10 Thu> | [[http://help.sap.com/saphelp_sem40bw/helpdata/en/a1/e45217a2f511d1a5630000e82deaaa/content.htm?frameset=/en/a7/5134f9407a11d1893b0000e8323c4f/frameset.htm&current_toc=/en/a7/5139ef407a11d1893b0000e8323c4f/plain.htm&node_id=3&show_children=false][online help]]   | How to generate maintenance views |
| Chart of Accounts | <2016-02-21 Sun> | [[http://help.sap.com/saphelp_46c/helpdata/en/c7/a88ab243dd11d182b30000e829fbfe/content.htm?frameset=/en/e5/077a8a4acd11d182b90000e829fbfe/frameset.htm&current_toc=/en/e5/078d0b4acd11d182b90000e829fbfe/plain.htm&node_id=9][online help]]   | Chart of Accounts in SAP means a list of all G/L accounts used by one or several company codes. But in other FI/Accounting software it may have different meanings. |
| BCS Configuration | <2015-12-26 Sat> | [[http://wiki.scn.sap.com/wiki/display/ERPFI/1.1.1+SEM-BCS+Configuration+in+BW+and+ECC][scnwiki]]       | It is scnwiki page that contains all the practical knowledge regarding SAP BCS and EC-CS. I guess it is a private note book by a SAP finance consultant:-) |
| HANA Script       | <2016-02-21 Sun> | [[http://help.sap.com/saphelp_hanaplatform/helpdata/en/92/11209e54ab48959c83a7ac3b4ef877/content.htm?frameset=/en/60/088457716e46889c78662700737118/frameset.htm&current_toc=/en/ed/4f384562ce4861b48e22a8be3171e5/plain.htm&node_id=3][online help]]   | Online help of HANA SQL scripts. You can find all your want about how to write in HANA SQL scripts. |
| AMDP Guide        | <2016-02-21 Sun> | [[http://help.sap.com/abapdocu_740/en/index.htm?file=abenamdp.htm][ABAP Keywords]] | All about AMDP: Keywords and Syntax. |


** Design
*** Key Requirements and Design Goals
Data Modeling is the prerequisite for consolidation. It defines the master data, customizing data, and transactional data that consolidation tasks are running on. 

To be more specifically, data modeling can be characterized by:
1. Define Currencies;
2. Define Versions;
3. Define Data Foundations and Consolidation Area;
4. Consolidation Tasks, Document Type, and Consolidation Methods;
5. Financial Statement Items, and Consolidation Chart of Accounts(Hierarchy);
6. Subassigments and Breakdown Categories;
7. Consolidation Units and Groups;

**** Following Design Goals *MUST* be Met:
1. Fully take advantages of HANA and S/4 architecture;
2. Modeling artifacts can be consumed by BPC;
3. Performance must be guarantee for the generated modeling artifacts.

**** Following Design Goals *SHOULD* be Met:
1. Modeling tools should be intuitive and fulfill most of the consolidation requirements;
2. Modeling tools should provide error-proof features to avoid data inconsistency.


*** Context
As mentioned, Modeling is the prerequisite for consolidation. There are lots of master data, customizations, settings, and even system configurations should be prepared before consolidation tasks actually run.

It is a heavy task that could be done by different roles includes: system administrators for connectivities, consultants, developers, and accountants. But after modelings perfectly set, consolidation tasks can be run smoothly and recursively.  

Most terminologies and concepts of financial consolidation appears during modeling. Some of them are vital and should be carefully chosen among BCS, EC-CS, BPC, and G/L Accounting. We try to make Real-time Consolidation be more simpler and straight forward. 
 
**** G/L Account or Financial Statement Item
RTC can use G/L Accounts to do consolidation, thus sharing the same set of account master data. But we still have doubts on why LC and EC-CS added FS item into their context? If there is good reasons to have an additional set of account master data for consolidation other than G/L Account?

**** Consolidation Chart of Account
Chart of Accounts is optional in BCS. Because you can use multiple hierarchies of account in an info-object. EC-CS has its own consolidation COA, but you can map cons COA to a G/L COA.

EC-CS COA is assigned with FS item hierarchies which contains has FS items represented in a hierarchy view. G/L COA has FSV instead. Table bellow describes the correspondences between EC-CS and G/L Accounting.

| *EC-CS*          | EC-CS COA | FS Item Hierarchy | FS Item | FS Item Set |
| *G/L Accounting* | G/L COA   | FSV               | Account | Account Set |

 Should verify if FS item hierarchy has something to do with SET and HRRP. 

**** Ledger
Reuse G/L ledger or EC-CS ledger? It seems BCS doesn't have the ledger concept.

The G/L ledger contains =Company Codes=. All the configurations are maintained on each company code. While in EC-CS, the ledger doesn't contain any company code, and all the configurations are globally maintained on ledger. 

Considering if I want to do profit center consolidation, then what's meaning of ledger of profit centers? 

**** Version
In G/L Accounting, =Version= (or field RVERS) is absolute and remained only for the reason of compatibility. IBPF uses the combination of  =Ledger= and  =Category= for its version dimension. 

Do we need the field =RVERS= or not? If yes, do we reuse BCS' or EC-CS'?

**** Flow or Accounting Types Combination
BPC uses =Flow= to distinguish different journal items that are generated during different consolidation tasks. User then use the =Flow= dimension to filter the data he wants for different reporting purposes. 

In Accounting, we have =Document Type=, =Transaction Type=, and  =Business Transaction= to differentiate types of journal items that are generated by different components and different purposes.

The question is: does RTC need BPC's =Flow= concept, or we still use accounting types combination? =Flow= is a more generic concept that although it is very abstract, but once you understand it, you can do everything with it. The accounting types combination may be more useful for FI applications, but they are even inexplicable for people outside SAP FI.

We need keep this in mind during development.
 
**** Consolidation Unit/Dimension and Group 
BCS defines its cons unit by assigning ~Cons Unit~ role to info-objects, like: company, profit center, cost center, and so on. And cons group is an attribute of a cons unit info-object.

EC-CS has both maintenance views for cons unit and cons group. Additionally, EC-CS has the concept =Dimension=. The consolidation unit depends on the dimension in which it was created. This means that the master record you create for a consolidation unit exists only in that dimension.

Despite the different representation, the basic idea of cons unit and cons group are rather same. No mater it is in BCS or EC-CS. And Even BPC has very similar concepts. 

RTC may reuse the tables and maintenance views of EC-CS to define its own =Unit & Group=. Then try to map and synchronize them to the corresponding objects in BPC.

**** Consolidation Area
Consolidation Area only appears in BCS. In BPC the similar concept is consolidation environment without completely match. Consolidation area is to define a subsets of characteristic fields and amount fields from data basis tables (like ACDOCA). Meanwhile, permanent values are defined for filtering and default values. 

Permanent values could include: Version, Fiscal Year, Period, and all possible fields you can define to boundary a consolidation campaign. 

Consolidation Methods and Tasks are also assigned to consolidation area.

In EC-CS, there is no such concept, instead it has =Global Parameter=. The global parameters includes dimension, Cons Unit/Group, Version, Fiscal Year, Period, and so on. These information can be accessed among all the consolidation tasks. The limitation is that EC-CS only allows single dimension consolidation, thus not such flexible as BCS.

**** Subitem and Subitem Category
Subitems mean =Sub Financial Statement Item=. They are used to further differentiate(breakdown) the values of a =Financial Statement Item=. 

For example, the financial statement for cash can have subitems of banks. It stands for the corp has multiple cash accounts of different banks. And in each bank, the subitem can be further breakdown by different currencies. The =Account Receivable= item can be breakdown by customers, then each customer number is a subitem. The advantage is saving namespaces of FS items, there is no need to create a FS item for each customer. 

=Subitem Category= is the total domain of subitems, or you can say a subitem contains a sub-domain of subitem category. Take sales region as an example, you can define a subitem with 3 regions of "Europe, Asia, Africa". The subitem is belong to the subitem category "Region" which may stand for all the sale regions on the earth. 

=Subitem= and =Subitem Category= together is called =Subassignment=. In BCS, only =Subassignment= is used. And multiple Subassigments can be grouped by =Breakdown Category=. 

It's just too much concepts and layers here. Think if can be simplified during development.


*** Major Building Blocks  
Modeling can contain many things, in this SDD, we only talk about master/customization data and schema(meta) definition for a consolidation. Other topics like system connectivity, data collection, and so on may exceed the area of consolidation itself.

The master/customization data maintenance is quite straight forward once all the concepts are clear and defined. The tool can either be auto-generated maintenance views, or specifically developed UIs and APIs for both manual and batch input. 

Schema definition or what we call =Data Modeling= can be the main development stuff. Tools are developed to allow users easily define the schema of their consolidation data. All the consolidation tasks are running on this data schema and producing consolidated results.

#+Caption: Data Modeling Design Time
[[../image/DataModelingDesignTime.png]]

The first step is to create a foundation view on ACDOCA(and other tables are also possible in future). The foundation view projects fields from ACDOCA (could join other tables), apply filters(where conditions), do field mappings and alignments. This can be achieved using HANA Calculation View Graphic Modeling Tool.

~User should ensure the performance of the foundation view, because almost all the consolidation tasks access data through it.~ 

The foundation view is then assigned to a consolidation model which is defined using RTC's modeling tool. You should also assign a group =Chart of Accounts=, a group =Fiscal Year Variant=, 2 =Data Categories=,and other default values. These information is used when generating consolidation views. 

It is necessary to define fields mapping between foundation view and consolidation journal table. Because,it is supposed that user can freely define their own source data and result table. The step is in a  dotted rectangles because currently only ACDOCA and ACDOCC will be involved. It is not necessary to do fields mapping, as these 2 tables share most of the pre-defined field names. 

Before generating consolidation views, there could be quite a lot of validations and checks. To make sure the views are correctly generated, there should be no less than following rules be checked before generating views:
1. If all mandatory fields are projected in the foundation view?
2. If the CoA, Fiscal Year Variant, and some other master data exists?
3. If all involved local accounts are mapped to group accounts?
4. If all involved company codes are mapped to companies? (For other dimension,like profit center, cost-center, there would be a mapping table planed).
5. If all fields defined in foundation view have counterparts in ACDOCC?

There are quite a lot of consolidation views generated automatically. These views are for different consolidation and validation tasks. In general, these views are categorized into 2 sets: HANA calculation views for BPC's consumption, and CDS views for RTC's own consumption. 
The BPC consolidation views will be union-ed under a composite provider, together with a virtual provider for write-back(The cons. result view is assigned to the virtual provider). User could still need to prepare info-objects(virtual or physical) for the dimensions in the composite provider. 

You can then open BPC modeling workbench to define BPC environment and model. After that, you switch back to RTC's modeling tool to assign the name of BPC environment and model. Finally you can check and activate the Real-time Consolidation Model. Besides the check rules before generating consolidation views, following additional rules will be checked before the activating:
1. If entity definition is consistent between RTC and BPC?
2. If CoA and Fiscal Variant definition are consistent between RTC and BPC?
3. If document types for BPC write-back is defined?
4. If BPC categories and consolidation versions are correctly mapped?
5. If other master data dimensions are consistent? ~In case using physical info-objects, there is no permit that the master data is consistent between BPC and S/4. In RTC's documentation, we should suggest user using virtual info-objects whenever possible.~

Only after successful activation can consolidation tasks be run. Or user cannot raise pull requests. And BPC can not write-back any data.

Besides, there are also some configuration tasks like define consolidation document types, define selections, and define currency translation methods. These tasks can be done after the activation of the consolidation model. 

**** Real-time Consolidation Modeling Tool(UI)                          :Sam:
The RTC Modeling Tool is used to define a Real-time Consolidation model object, and generate necessary consolidation views. It also permits the consistency of a consolidation context that run across S/4 and BPC. The RTC Modeling tool contains following parts:
1. *Cons. Views* defines the consolidation data views, and journal table to persist consolidation result.
2. *Integration* contains options and controls of how S/4 provides data to BPC, and how BPC write-back to S/4.
3. *Version* defines the version fields combinations, and the mapping between BPC category.
4. *Assignment* assigns FI objects like consolidation unit, partner unit, CoA, and Fiscal Year Variant.
5. *Admin* additional settings control how the consolidation model is used. 

For how to read BPC model's meta data, please refer the class: CL_RSBPCO_APPL_ADAPTER

**** Category, Ledger, and Variant Master Data Maintenance UI          :Lynn:
*Version* in consolidation means different copies of consolidated results for different purposes under a same consolidation area. So that although there are some differences among these versions, but they share most of the common master data and settings. For example, based on the same actual financial data, chart of accounts, and organizational structure, you can do consolidation for US GAAP, or IFRS.

But "Version" has a board meanings, for example, a program has multiple versions. Consolidation versions stand for a combination of different characteristic fields, like: Actual/GAAP/Legal, Plan/IFRS/Management. How many characteristic fields are involved to form a version combination can be freely defined by customers. There comes confusion between version-related fields and version itself. 

For example, the last field in the tab2 mock UI names ~Version~ too. But actually, it stands for the VERSN field in COEP. Add this field is only for the data integration with CO. The right 3 fields combination is called a consolidation version which is assigned with a version ID of 001. They all call ~version~ in different context. 

You develop a customization table for version ID definition. Refer EC-CS' table: TF200 and TF201. 

~There are still some uncertainties about BCS' version combination. Actually, version ID and version combination are 2 redundant information.~   

*Ledger* in consolidation is combined with =Accounting Principle=. You can just regard them as the same thing at concept level. So =Ledger= is also a version-related field used in version combination. You develop a customization table to allow user store different ledgers and ledger level settings. Each consolidation ledger can be mapped to multiple operational ledgers. 

*Category* is used to specify the consolidation purpose for, take an example, plan or actual. Try to reuse IBPF's existing category maintenance view: FCOMV_CATEGORY
 
Version is the most complicate configurations in consolidation. You can refer EC-CS and BCS to see how they realize the consolidation version. Regarding with RTC, in its initial release, we should only pick the essential parts of them. 

**** Foundation View                                            :Frank:Blang:
Foundation view is the main source of consolidation data, based on what consolidation tasks are run to produce consolidated results. 

In the initial releases, the source data is mainly coming from ACDOCA. You need to create a HANA calculation view on ACDOCA and do necessary fields projections and data filtering. ~The reason why using HANA calculation view not CDS view for the foundation view definition is because BPC only supports HANA calculation view. You can even not use HANA calculation view on CDS view.~

There are also mappings and derivations need to be done at foundation view level:
1. Operational Account --> Group Account
2. Dimension Fields Assignment, like: Company Code --> Company
3. Fiscal Year Period Alignment. [[http://help.sap.com/saphelp_470/helpdata/en/dc/f18b884efb11d39a350000e8a5999a/content.htm?frameset=/en/58/8e6a3c32853960e10000000a11402f/frameset.htm&current_toc=/en/5c/c1c25f445f11d189f00000e81ddfac/plain.htm&node_id=86][Check in KM]]

~We need an additional ABAP program to generate fiscal calendar data on day level. The program will take the fiscal year variant as input parameter, and then generates day level granularity fiscal calendar data into a specific table.~ 

Text fields should be avoided to join here. And field names should keep unchanged. The foundation CDS view should also avoid to use parameters as BPC can not consume parameterized calc views. 

**** Modeling Validation Method                                        :Steve:
As described above, modeling validation happens before consolidation view generation and model activation. There would be no less that than following rules should be checked:

*These rules are before consolidation views generation:*
1. If all mandatory fields are projected in the foundation view?
2. If the CoA, Fiscal Year Variant, and some other master data exist?
3. If all involved company codes are mapped to companies? (For other dimension,like profit center, cost-center, there would be a mapping table planed).
4. If all fields defined in foundation view have counterparts in ACDOCC?

*These rules are before model activation:*
1. If entity definition is consistent between RTC and BPC?
2. If CoA and Fiscal Variant definition are consistent between RTC and BPC?
3. If document types for BPC write-back is defined?
4. If all involved local accounts are mapped to group accounts?
5. If BPC categories and consolidation versions are correctly mapped?
6. If other master data dimensions are consistent? 

~In case using physical info-objects, there is no permit that the master data is consistent between BPC and S/4. In RTC's documentation, we should suggest user using virtual info-objects whenever possible.~

To achieve this, you should read the meta data of the HANA Calculation View. Need API information here.

You should reuse SAP application log (SLG0&SLG1) to show the check result. You can also refer ABAP class: ZCL_BG_LOG in S4H.

**** Generate Consolidation Views                                     :Steve:
#+Caption: Data Modeling Design Time
[[../image/ConsViews02.png]]

Consolidation views are generated based on the foundation view and ACDOCC. There are 2 branches for the generated views:
1. HANA Calculation views for the BPC consumption;
2. CDS views for the RTC consumption.

The reason to use 2 different DB view technologies is to harmonize the BW and the S/4HANA. The situation is that BW doesn't support CDS; And S/4HANA only supports CDS. As the 2 branches share the same foundation view, which is made by HANA calculation view. To consume HANA calculation view, the only supported approach is to use AMDP table function to access it. Then based on the table function, CDS views can be created.  

For generating CDS view, there are existing APIs to allow ABAP generates CDS views.

The demo ABAP program is: WB_DDLS_API_EXAMPLE_PROG

More details can be found in: https://wiki.wdf.sap.corp/wiki/display/TIPABAPVB/CDS+DDL+API+Description

The generated artifacts(HANA Calculation Views, CDS views, and AMDP methods) are not transported. Only model data can be transported from DEV to QA, and PRD systems. It is at the target systems these artifacts can be regereated in local namespaces.

**** Selection on Accounts                                          :Vincent:
Not all the operational accounts need to be involved in a consolidation. There should be a place to allow user to define which operational account numbers should be involved in certain chart of accounts. 

This can be achieved using the general object: =Selection=. A special composite selection is reserved with the name "SELECTION001". Under the composite selection, user can add multiple single selections to compile his accounts selection.

When generate consolidation views in the RTC Modeling Tool, the above selection will be added into all the views. Then only the choose accounts is filtered in. 
  
**** +Field Projection and Role Assignment+
*Frozen*
Fields are projected from data foundation tables, like ACDOCA or ACDOCC. These fields are categorized into certain groups. Some groups are mandatory for consolidation, and even the number of fields is fixed. Based on existing knowledge from BCS and EC-CS, I category fields into following groups:

#+Caption: Field Projection & Role Assignment
[[../image/FieldRoleAssignment.png]]

User first assigns a foundation table/view, then the above screen is pop up to let user project fields, assigned roles, and set permanent parameters. Only certain groups are allowed to set permanent parameters, these parameters will be represented as ~where~ and ~group~ statement during CDS view generation.

Some groups are mandatory, for example ~Consolidation Unit/Dimension~, you must at least assign one field (at maximum two) for this group of fields. ~Financial Statement Item~ is also mandatory. 

This UI representation of field projection and role assignment is tailored to ACDOCA table. It should be flexible enough for other tables. So templates will be designed which allow user to using exist settings. For example, template for ACDOCA should already have some field assigned for those  mandatory field groups. User can also extend the view and save as their own templates.

*** Design Challenges resulting from Non-Functional Requirements                       
*** Used Components and Frameworks
| Name | Description                  | Software Component | Implications |
|------+------------------------------+--------------------+--------------|
| BRF+ | Business Rule Framework plus |                    |              |

*** Compliance to Standards and Guidelines
**** Applied Architecture/Design Guidelines
- [[https://wiki.wdf.sap.corp/wiki/display/SimplSuite/Architecture][S4H Architecture Guideline]]
- [[https://wiki.wdf.sap.corp/wiki/display/SuiteCDS/VDM+CDS+Development+Guideline][CDS Guideline]]
- [[https://wiki.wdf.sap.corp/wiki/display/fioritech/Development+Guideline+Portal][Fiori Overall Guideline]]
- [[https://ux.wdf.sap.corp/fiori-design/foundation/get-started/][Firoi Design Guideline]]
- [[https://wiki.wdf.sap.corp/wiki/display/ERPFINDEV/sFIN+UX+Fiori+Guidelines][sFIN UX Fiori Guideline]]

**** Approved deviations
| <8>      | <l40>                                    | <l20>                |
| Rule ID  | Deviation                                | Approval Status      |
|----------+------------------------------------------+----------------------|
| C-BRMS-2 | HRF must not be used directly but through the BRF-plus encapsulation only. In case BRF-plus encapsulation is not updated or enough, we may need bypass BRF+ APIs. |                      |


** Detail Design
*** RTC Modeling Tool UI
Real-time Consolidation Modeling Tool is used to generate consolidation views used for various consolidation tasks. 
**** Initial Screen & Basic Settings
#+Caption: RTC Modeling Tool: Basic Settings
[[../image/RTCModelingToolUI01.png]]

You can create a consolidation model in the initial screen by entering a model name (6 characters long). Existing check and lock check will be made to make sure the model name is available. You can also display or change an existing model. A model cannot be deleted once it is activated, but it can be de-activated to forbid use. You can also do checks on a model to make sure all the settings are consistent. The check results will be shown in a pop up dialog.

You must assign:
1. A *Consolidation Dimension* is to determine which field or fields combination is defined as the consolidation entity and partner entity. 
2. A *Consolidation Chart of Accounts* is used to present the group financial statements. 
3. A *Consolidation Fiscal Year Variant* is used to distribute journal entries into the right group fiscal year period.

In the "Integration Option", you set whether the model integrates with BPC. If yes, you have to give a "Default Flow Type" which is actually a transaction type. This is because transaction type in ACDOCA is mapped to BPC's flow dimension, and BPC requires every row have a flow type. In case lines in ACDOCA do not have the transaction type, then the default one is used.You can also decide whether currency translation happens in S/4HANA or in BPC. The integration options controls how the consolidation views are generated.  

There are others settings like "Default Translation Method", which is optional. You can assign a CT method as the default one for those entities who are not assigned with a dedicate CT method. "Model Name Abbreviation" is used as a prefix for the generated consolidation views. It is 2 characters long, and can be auto determined from the full model name. However, users can assign one by themselves. The Model Name Abbreviation should keep unique.
 
**** Data Source 
#+Caption: Real-time Consolidation Modeling Tool: Data Source
[[../image/RTCModelingToolUI02.png]]

You define consolidation data sources in this tab. Consolidation data sources are grouped by *Data Category*. Each data category contains a full set of source data for consolidation. Different types of source data are further differentiated using *Stream Type*. You assign each "Stream Type" a HANA view(either CDS or Calculation view) that protocolized. Stream Types and their protocols are pre-defined.
| <35>                                | <50>                                               |
| Stream Type                         | Protocol                                           |
|-------------------------------------+----------------------------------------------------|
| FI Journals                         | Mandatory fields: FISCYEARPRD,ENTITY,RACCT, HSL..  |
| FS Items or G/L Accounts            | Mandatory fields: KTOPL,RACCT,XBILK,KTOKS          |
| Inventory Data                      |                                                    |
| Supplier Share                      |                                                    |
| Assets/Liabilities                  |                                                    |
| Noncurrent Assets                   |                                                    |
| Noncurrent Assets - Consolidation   |                                                    |
| Transfer of Noncurrent Assets       |                                                    |
| Investment Data                     |                                                    |
| Equity Data                         |                                                    |
| Equity Holdings Adjustment Data     |                                                    |
| Goodwill Data                       |                                                    |
| Activity Numbers                    |                                                    |
| Sequence of Activities              |                                                    |
| Activity Sorting                    |                                                    |

The stream type "FI Journals" is the main data source, all other stream types are optional. If the model is set to integrate with BPC, then you can only assign a HANA calculation view to this stream type, CDS view is not allowed. This is also known as the foundation view.

~You must first enter the HANA package where the foundation view resides. To be in mind, the HANA DB user "SAP<SID>" must have the read/write access to the HANA package. As later on, it will generate HANA Calculation views into the package.~ 

**** Consolidation Version
Version is used to execute parallel consolidations according to different aspects. You can define multiple versions for a consolidation model. The consolidation result then will be isolated by by versions. Each version is defined as a combination of 3 version related fields: =Data Category=, =Account Principle=, and =Variant=. But in BPC side, there is only one dimension with the role "data category" has the similar usage. You have to create a mapping between =BPC Category= to the S/4 version combination if you model needs to integrate with BPC. 

#+Caption: Real-time Consolidation Modeling Tool: Version
[[../image/RTCModelingToolUI03.png]]

In this tab screen, you can create a consolidation version, which you just assign a unique value combination of =Data Category=, =Account Principle=, and =Variant=. In the scenario with BPC, you must also map a BPC Category to one of your version combinations. 

By default, there will be 2 BPC categories created: "FINAL" and "PRELIM" if integrates with BPC.And the version related value combination is also automatically generated in this way:
| BPC Category | Data Category | Acct. Principle | Variant |
|--------------+---------------+-----------------+---------|
| FINAL        | Actual        |                 |     100 |
| PRELIM       | Actual        |                 |     200 |
In BPC scenario, the data category "Actual" is also automatically created, so do the variant 100 and 200. The Account Principle field is optional, you can leave it empty.  

When you click the "Add", a pop-up dialog will allow you to add a new version. You give an unique BPC category. If it doesn't exist, it will create one.

~The master head table for BPC category is FCOMC_CATEGORY which belongs to the IBPF team. We share the category master data for future planning and consolidation integration. If you add a new BPC category, it will insert a new entry into table FCOMC_CATEGORY.~

**** Consolidation View
Consolidation views are generated under each data category. In other words, different data categories generate different sets of consolidation views.
#+Caption: Real-time Consolidation Modeling Tool: Consolidation Views
[[../image/RTCModelingToolUI04.png]]

You choose a data category in the dropdown box, it lists all the consolidation views that belong to the data category. Consolidation views are further grouped by different usages. If the model is a BPC integration model, then there will be a group "BPC Calc View" which contains all the HANA calculation views that are consumed by BPC. The naming rule of the calculation view is designed like this:

~C_<Model Abbrev>_<BPC Category>_<A or C>~

In the "Base CDS View" group, there lists the CDS views that are used by RTC applications like =Data Submit Cockpit=, =CT Method=, =Validation Method=, and so on. These applications either read data from the CDS views, or requires the meta definition of the view fields. All the generated CDS views have the namespace "/RTCART/", and the naming rule is designed like this:

~/RTCART/<Model Abbr><View Group><Sequential Number>~

*Not sure if we need to generate CDS views for validation and report.*  
  
**** BPC Integration
#+Caption: Real-time Consolidation Modeling Tool: BPC Integration
[[../image/RTCModelingToolUI05.png]]

In the =BPC Integration= tab, you give a BPC consolidation environment and a BPC model name. The BPC model's meta data is then read when you click the "Enter" key. Click the "Ownership Hierarchy" will navigate to BPC's entity hierarchy view page.

~BPC has exposed an interface to allow you read data in its ownership cube: CL_RSBPCO_APPL_ADAPTER!~

**** Admin Tab
#+Caption: Real-time Consolidation Modeling Tool: Admin
[[../image/RTCModelingToolUI06.png]]

=Admin= tab contains administrative data of the consolidation model. All these fields cannot be changed as it generates automatically along with other operations on the model. The last field =Current Active Version= indicates the version number of the model. It is used to check the consistency of the design time objects, and the consolidated data in ACDOCC. 

**** Modeling Validation Log
#+Caption: Real-time Consolidation Modeling Tool: Validation Log
[[../image/RTCModelingToolUI90.png]]

Before generating views or activating from the model definition, validation should be done to make sure the model definition is consistent. The validation result will be output as application log which is shown in a dialog box. 
Following criterias must be fulfilled before generating consolidation views:
1. Consolidation Dimension exists;
2. Consolidation Chart of Accounts exists;
3. Fiscal Year Variant exist;
4. Default Flow Type exists;
5. Model Name Abbreviation is unique;
6. You must at least add one data category so that foundation views can be assigned.;
7. A foundation view must be assigned to the stream type "FI Journals";
8. The foundation view comply with the protocol of "FI Journals";
9. If other stream types are assigned with CDS views, they must also comply with the corresponding protocol;
10. The foundation view must contain all the fields defined in the consolidation dimension;
11. You must at least create one consolidation version;
12. A consolidation version must at least has a data category and a variant, Accounting Principle can be optional, however, each combination must be unique;
13. If the model is BPC integrated, a BPC category must be mapped to a consolidation version;

Following criterias must be additionally fulfilled before activating the model:
1. You must assign a BPC environment and model to the RTC model;
2. The assigned BPC environment and model must not be assigned to other RTC model;
3. The settings between the BPC model and RTC model must be consistent, however, if the model is created using BPC integrated web client, the consistency is already permitted;
4. The posting API exists;
5. The global temporary table of ACDOCC exists;
6. The default number range interval '00' of RTCJOURN exists;

When activating the model, besides generating consolidation views, there are default document types generated.
 
*** Database Design
*** Data Flow & Design Time
Here describes how data is read, calculated, and write back during a consolidation. It is divided into 3 scenarios:
1. BPC read from ACDOCA, then write back to a cube/ADSO;
2. BPC read from union view of ACDOCA and ACDOCC, then write back to ACDOCC;
3. BPC read from ACDOCC, then write back to ACDOCC.

**** Read from ACDOCA, write to cube
*Aggregated result of ACDOCA*.
| Category | Unit  | Account | Amount | Currency |
|----------+-------+---------+--------+----------|
| Actual   | COMPA | 1000100 |    200 | USD      |
| Actual   | COMPA | 1000200 |    300 | USD      |
| Actual   | COMPB | 1000100 |    400 | USD      |
| Actual   | COMPB | 1000200 |    300 | USD      |

*Currency is translated by BPC*. A =Flow= of "CT" is tagged to indicate the data is generated by currency translation.
| Category | Unit  | Account | Amount | Currency | Audit |
|----------+-------+---------+--------+----------+-------|
| Actual   | COMPA | 1000100 |   1200 | CNY      | CT    |
| Actual   | COMPA | 1000200 |   1800 | CNY      | CT    |
| Actual   | COMPB | 1000100 |   2400 | CNY      | CT    |
| Actual   | COMPB | 1000200 |   1800 | CNY      | CT    |

*Same data is write to cube*
| Category | Unit  | Account | Amount | Currency | Audit |
|----------+-------+---------+--------+----------+-------|
| Actual   | COMPA | 1000100 |   1200 | CNY      | CT    |
| Actual   | COMPA | 1000200 |   1800 | CNY      | CT    |
| Actual   | COMPB | 1000100 |   2400 | CNY      | CT    |
| Actual   | COMPB | 1000200 |   1800 | CNY      | CT    |

#+Caption: Design Time for Scenario 1
[[../image/ModelingDesignTimeCase1.png]]

**** Read from union view of ACDOCA and ACDOCC, write to ACDOCC
*Aggregated result of union view of ACDOCA and ACDOCC*. 

We must add =Model= and =Category= to the aggregated set, so that BPC can write back with these values into ACDOCC. The last field "SR" only used to indicate the data is coming from ACDOCA("A") or ACDOCC("C"). Actual data of "COMPA" is in ACDOCA, while actual data of "COMPB" is in ACDOCC. Fiscal period "2016003" stands for the current period data, and "2016002" means the result of last period which always comes from ACDOCC.
| Model  | Category | Group | Unit  | Account |  Fiscal | Amount | Currency | SR |
|--------+----------+-------+-------+---------+---------+--------+----------+----|
| M_COMP | Actual   | G1    | COMPA | 1000100 | 2016003 |    200 | USD      | A  |
| M_COMP | Actual   | G1    | COMPA | 1000200 | 2016003 |    300 | USD      | A  |
| M_COMP | Actual   | G1    | COMPB | 1000100 | 2016003 |    400 | USD      | C  |
| M_COMP | Actual   | G1    | COMPB | 1000200 | 2016003 |    300 | USD      | C  |
| M_COMP | Actual   | G1    | COMPA | 1000100 | 2016002 |   6000 | CNY      | C  |
| M_COMP | Actual   | G1    | COMPA | 1000200 | 2016002 |  12000 | CNY      | C  |
| M_COMP | Actual   | G1    | COMPB | 1000100 | 2016002 |   6000 | CNY      | C  |
| M_COMP | Actual   | G1    | COMPB | 1000200 | 2016002 |  18000 | CNY      | C  |

*Currency is translated by BPC*. 

Only generate lines from current period data. The last period data is only used for calculation reference, it won't be translated again. 
| Model  | Category | Group | Unit  | Account |  Fiscal | Amount | Currency | Audit |
|--------+----------+-------+-------+---------+---------+--------+----------+-------|
| M_COMP | Actual   | G1    | COMPA | 1000100 | 2016003 |   1200 | CNY      | CT    |
| M_COMP | Actual   | G1    | COMPA | 1000200 | 2016003 |   1800 | CNY      | CT    |
| M_COMP | Actual   | G1    | COMPB | 1000100 | 2016003 |   2400 | CNY      | CT    |
| M_COMP | Actual   | G1    | COMPB | 1000200 | 2016003 |   1800 | CNY      | CT    |

*Write to ACDOCC*.

New fields are derived according to the mapping information in the model. 
1. =Ledger=, =RTC Category=, and =Version= are derived from =BPC Category=. 
2. =Doc Type= is derived from =Account=, =Audit=, =BPC Category=, and =Flow=. 
3. =Doc Number= is a sequential number get from a number interval which again is derived from =Doc Type=, =Ledger=, =RTC Category=, and =Version=. 
4. =DOCLN= stands for document line item number to indicate different line items of a document.
5. =BTTYPE= is always fixed to "BPC_CONS" if data comes from BPC.
6. =CoA= and =PERIV= are derived from model meta data.
| Model  | BPC Cate | Ledger | RTC Cate | Version | Doc Type | Doc Number | DOCLN | BTTYPE   | Group | Unit  | Account |  Fiscal | Amount | Currency | CoA | PERIV | Audit |
|--------+----------+--------+----------+---------+----------+------------+-------+----------+-------+-------+---------+---------+--------+----------+-----+-------+-------|
| M_COMP | Actual   | 0C     | ACTUAL   |     100 |       00 | 1000000001 |     1 | BPC_CONS | G1    | COMPA | 1000100 | 2016003 |   1200 | CNY      | INT | K4    | CT    |
| M_COMP | Actual   | 0C     | ACTUAL   |     100 |       00 | 1000000001 |     2 | BPC_CONS | G1    | COMPA | 1000200 | 2016003 |   1800 | CNY      | INT | K4    | CT    |
| M_COMP | Actual   | 0C     | ACTUAL   |     100 |       00 | 1000000002 |     1 | BPC_CONS | G1    | COMPB | 1000100 | 2016003 |   2400 | CNY      | INT | K4    | CT    |
| M_COMP | Actual   | 0C     | ACTUAL   |     100 |       00 | 1000000002 |     2 | BPC_CONS | G1    | COMPB | 1000200 | 2016003 |   1800 | CNY      | INT | K4    | CT    |

#+Caption: Design Time for Scenario 2
[[../image/ModelingDesignTimeCase2.png]]

**** Read from ACDOCC, write to ACDOCC
Currency translation or simple elimination is done in S/4. Current period data is already processed and saved in ACDOCC, so there is no need to access ACDOCA again. 

*Get data from ACDOCC*. From period 000 to current period.
| Model  | Category | Group | Unit  | Account |  Fiscal | Amount | Currency |
|--------+----------+-------+-------+---------+---------+--------+----------|
| M_COMP | Actual   | G1    | COMPA | 1000100 | 2016003 |   1200 | CNY      |
| M_COMP | Actual   | G1    | COMPA | 1000200 | 2016003 |   1800 | CNY      |
| M_COMP | Actual   | G1    | COMPB | 1000100 | 2016003 |   2400 | CNY      |
| M_COMP | Actual   | G1    | COMPB | 1000200 | 2016003 |   1800 | CNY      |
| M_COMP | Actual   | G1    | COMPA | 1000100 | 2016002 |   6000 | CNY      |
| M_COMP | Actual   | G1    | COMPA | 1000200 | 2016002 |  12000 | CNY      |
| M_COMP | Actual   | G1    | COMPB | 1000100 | 2016002 |   6000 | CNY      |
| M_COMP | Actual   | G1    | COMPB | 1000200 | 2016002 |  18000 | CNY      |

*Further consolidation tasks in BPC*. 

Generate a new category for planning.
| Model  | Category | Group | Unit  | Account |  Fiscal | Amount | Currency | Audit |
|--------+----------+-------+-------+---------+---------+--------+----------+-------|
| M_COMP | Plan     | G1    | COMPA | 1000100 | 2016003 |   1200 | CNY      | PL    |
| M_COMP | Plan     | G1    | COMPA | 1000200 | 2016003 |   1800 | CNY      | PL    |
| M_COMP | Plan     | G1    | COMPB | 1000100 | 2016003 |   2400 | CNY      | PL    |
| M_COMP | Plan     | G1    | COMPB | 1000200 | 2016003 |   1800 | CNY      | PL    |


*Write to ACDOCC*.

New fields derivation is quite same with scenario 2. But in this case, as =BPC Category= is changed from "Actual" to "Plan", a lot of related fields are changed correspondingly. 
1. =Ledger=, =RTC Category=, and =Version= are changed to a new combination.
2. =Doc Type= is changed.
3. =Doc Number= is generated from a new number range interval.
| Model  | BPC Cate | Ledger | RTC Cate | Version | Doc Type | Doc Number | DOCLN | BTTYPE   | Group | Unit  | Account |  Fiscal | Amount | Currency | CoA | PERIV | Audit |
|--------+----------+--------+----------+---------+----------+------------+-------+----------+-------+-------+---------+---------+--------+----------+-----+-------+-------|
| M_COMP | Plan     | 0P     | PLAN     |     200 |       10 | 1000000001 |     1 | BPC_CONS | G1    | COMPA | 1000100 | 2016003 |   1200 | CNY      | INT | K4    | PL    |
| M_COMP | Plan     | 0P     | PLAN     |     200 |       10 | 1000000001 |     2 | BPC_CONS | G1    | COMPA | 1000200 | 2016003 |   1800 | CNY      | INT | K4    | PL    |
| M_COMP | Plan     | 0P     | PLAN     |     200 |       10 | 1000000001 |     3 | BPC_CONS | G1    | COMPB | 1000100 | 2016003 |   2400 | CNY      | INT | K4    | PL    |
| M_COMP | Plan     | 0P     | PLAN     |     200 |       10 | 1000000001 |     4 | BPC_CONS | G1    | COMPB | 1000200 | 2016003 |   1800 | CNY      | INT | K4    | PL    |

#+Caption: Design Time for Scenario 3
[[../image/ModelingDesignTimeCase3.png]]


** Appendix
*** Glossary
| Term | Abbreviation | Definition |
|------+--------------+------------|
|      |              |            |
*** Customizing
*** Supportability Considerations
*** Error Analysis
**** Debugging
**** Logging and Tracing
**** Other Error Analysis Tools
*** Other
