#+STARTUP: align
#+TITLE: Json-On-Relations

* Introduction
Json-on-Relations try to bundle the merits from both JSON and relational structures. Nowadays, JSON is the de-facto standard for data transmition and UI consumption. Comparing to other data format standards, it is easier to compose and more human readable.

Relational database is still very strong, and no one can replace it so far. Existing ORM solutions focus too much on "object". Ignoring the relational nature of data limits their abilities on building real-world applications. SQL is still proven to be the best abstraction of data manipulation. Any attempts to rebuild the wheel always end with ignorant. 

The only meaningful work should be done is to connect JSON with SQL in some *domain specific areas*. Json-on-Relations targets to Line-of-Business applications(like ERP, CRM, and HRM), and tries to simplify the development by eliminating pipeline coding.

* First Glance

** Define Your Entity

** Browse and Maintain Your Entity Instances

** Develope Your UI 

** Expose Your Entity through API

* Eliminate Pipeline Coding

* Message-based Design
http://docs.servicestack.net/advantages-of-message-based-web-services 

* Compare with Similar Concepts (OData & JsonAPI)
http://docs.servicestack.net/why-not-odata
https://jsonapi.org/
