#+PAGEID: 
#+VERSION: 1
#+STARTUP: align
#+TITLE: SDD-Selection
#+OPTIONS: toc:1
** General Information
*** Stakeholders and Roles
| Role                  | Name          |
|-----------------------+---------------|
| Author(s)             | Vincent Zhang |
| Architect             | Vincent Zhang |
| Product Owner         | Shi Ying      |
| Information Developer | Grace Zou     |
| Quality Responsible   | Yao Cen       |
| Developers            |               |

** Context
Selection is used to define filters on potential data sources(HANA Views). During runtime, Selection is applied to SQL select statements to boundry the data for further processing. Selection is a base component in Real-time Consolidation, which is mainly used in RTC Methods. Besides, Selection can also be reused in validation rule and data mapping rules. 

** Design
Selection is model dependent. It needs the CDS view genereated by the model, so that a valid sql-where condition can be checked and applied. Details are explained bellow. 

#+Caption: Selection Architecture
[[../image/SelectionArchitecture.png]]

After a model is activated, it generates a bunch of consolidation views, among which only the view with suffix "_U" is picked as the *only default base view* for Selections so far. However, Selections based on the "_U" view indicates it can also be applied on all the views with suffix "_UXX" (_U00, _U10, _U11, _U20, _U21). 

A Selection has one base view and contains one or more selection characteristics, which are derived from the base view, as well as the corresponding DDIC information. The DDIC information is very useful as length check and search help can be derived and reuse.  

#+Caption: Selection UI: Filter Characteristic
[[../image/SelectionUI01.png]]

Once a characteristic is chosen, it grays out to indicate as an already chosen one. Some characteristic are excluded from the availabe list, as they are non-sense or illegal to be filtering fields. These excluded fields are: MODEL, RTC_CATG, ACCTP, RVERS, PLEVEL, ENTITY, PENTITY, PERIV, KTOPL, RTFLG. 

#+Caption: Selection UI: Filter Expression
[[../image/SelectionUI02.png]]

Filter expression is based on a chosen characteristic, represented as a range. And the string representation is an array like: [from value, to value], value1, value2, ... Currently, the exclude option is not supported. 

#+Caption: Selection UI: Filter Expression Maintain
[[../image/SelectionUI03.png]]

Doulbe click the expression string will popup a dialog allow you to maintain the expression. Mulitple "from to" lines can be maintained, and sanity check should be made to check for example: the "from" value should less than the "to" value, different lines should not conflict with each other, and so on. 

To be aware, for boolean values, use "!" as the false. This is because empty value already stands for empty, not the false. 

#+Caption: Selection UI: Filters Overview
[[../image/SelectionUI03.png]]

A Selection can contain multiple filters on different characteristics, which are combined with "AND" operator. For example, in case the Selection has 2 filters: CharA = 'AA' , CharB = 'BB', then they will be interepted as "CharA = 'AA' and CharB = 'BB'". 

Just like other RTC objects, Selection has 2 states, "SAVED" and "ACTIVE", which may exist simultaneously. When there is "SAVED" copy, the owner of the copy will see the "SAVED" copy by default, while others still see the "ACTIVE" copy.After the owner activate the "SAVED" copy again, the existing "ACTIVE" copy is replaced with "SAVED" copy, and the "SAVED" copy is then deleted.  

*** 4 Selection Types
There are 4 Selection types to cope with different use cases. 

**** Default Selection
Default Selection is as introduced as above, which is composed by filter expressions. You can define "from to" on each chosen characteristic. 

**** Based on SET
Selection based on SET is used in case there are existing SETs maintained in the ERP, which then can be reused in RTC context. Each characteristic can only be assigned with one SET. And only the SET with the same data element or data domain can be assigned. 

#+Caption: Selection UI: Based on SET
[[../image/SelectionUI03.png]]

**** Free Style 
Free style type allows user to write SQL (only the where conditions) as freely as they can. However, syntax check will be done before the Selection is activated. Free style can cope with situations that default type cannot eslily handle. 

*Free Style Selection is not implemented yet.* 

**** Composite Selection
Composite Selection can combine multiple default Selections to compose filter condition connected with "OR" operator. Only Selections with the same base view can be combined in a composite selection. 

#+Caption: Selection UI: Composite Selection
[[../image/SelectionUI03.png]]


*** Table Design

RTC_SELECTION: Selection Head Table
| Field   | isKey | Data Type | Description                |
|---------+-------+-----------+----------------------------|
| MANDT   | X     | CHAR3     | Client                     |
| MODEL   | X     | CHAR6     | Model                      |
| STATE   | X     | CHAR1     | State                      |
| SELNM   | X     | CHAR20    | Selection Name             |
| SELTY   |       | CHAR1     | Selection Type             |
| BVIEW   |       | CHAR30    | Selection Base View        |
| WHSTR   |       | STRING    | Selection SQL Where String |
| CREATOR |       | CHAR12    | Created by                 |
| CTIME   |       | TIMESTAMP | Create timestamp           |
| UPDATOR |       | CHAR12    | Changed by                 |
| UTIME   |       | TIMESTAMP | Change timestamp           |

RTC_SELECTIONT: Selection Text Table
| Field    | isKey | Data Type | Description    |
|----------+-------+-----------+----------------|
| MANDT    | X     | CHAR3     | Client         |
| MODEL    | X     | CHAR6     | Model          |
| STATE    | X     | CHAR1     | State          |
| LANGU    | X     | CHAR1     | Language Key   |
| SELNM    | X     | CHAR20    | Selection Name |
| DESCRIPT |       | CHAR80    | Description    |

RTC_SEL_FLDCOL: Filter Characteristics of a Selection
| Field    | isKey | Data Type | Description                        |
|----------+-------+-----------+------------------------------------|
| MANDT    | X     | CHAR3     | Client                             |
| MODEL    | X     | CHAR6     | Model                              |
| STATE    | X     | CHAR1     | State                              |
| SELNM    | X     | CHAR20    | Selection Name                     |
| FLDNM    | X     | CHAR30    | Filter Characteristic Name         |
| SETCLASS |       | CHAR4     | SET Class                          |
| SUBCLASS |       | CHAR12    | Orgnizational Unit as SET Subclass |
| SETNAME  |       | CHAR24    | SET Name                           |

RTC_SEL_COLF: Characteristic Filter Expression
| Field  | isKey | Data Type | Description                    |
|--------+-------+-----------+--------------------------------|
| MANDT  | X     | CHAR3     | Client                         |
| MODEL  | X     | CHAR6     | Model                          |
| STATE  | X     | CHAR1     | State                          |
| SELNM  | X     | CHAR20    | Selection Name                 |
| FLDNM  | X     | CHAR30    | Filter Characteristic Name     |
| LOW    | X     | CHAR100   | Lower Value                    |
| HIGH   |       | CHAR100   | Higher Value                   |
| SIGN   |       | CHAR1     | Range Sign: Include or Exclude |
| SELOPT |       | CHAR2     | Range Option                   |

RTC_SEL_SGLSEL: Single Selection in a Composite Selection
| Field  | isKey | Data Type | Description           |
|--------+-------+-----------+-----------------------|
| MANDT  | X     | CHAR3     | Client                |
| MODEL  | X     | CHAR6     | Model                 |
| STATE  | X     | CHAR1     | State                 |
| SELNM  | X     | CHAR20    | Selection Name        |
| SGLSEL | X     | CHAR20    | Single Selection Name |

*** Life Cycle Management

** Program Detail
#+Caption: Selection Program Building Block
[[../image/SelectionProgramBlock.png]]
