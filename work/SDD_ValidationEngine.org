#+PAGEID: 1815488354
#+VERSION: 28
#+STARTUP: align
#+OPTIONS: toc:1
#+TITLE: SDD-Validation Engine
** General Information
*** Stakeholders and Roles
| Role                  | Name                              |
|-----------------------+-----------------------------------|
| Author(s)             | Vincent Zhang                     |
| Architect             | Vincent Zhang                     |
| Product Owner         | Shi Ying, Carol Pan               |
| Information Developer |                                   |
| Quality Responsible   | Yao Cen                           |
| Developers            | Liu Chang, Zhou Kaiyuan, Steve Mo |

*** References
|                             |                  |             | <30>                           |
| Document Title              | Date             | Link        | Comments                       |
|-----------------------------+------------------+-------------+--------------------------------|
| BCS Online Help             | <2015-12-25 Fri> | [[https://help.sap.com/saphelp_sem40bw/helpdata/en/ab/d7ecf125f0ce43be3ce68bf9289165/content.htm?frameset=/en/62/f7e73ac6e7ec28e10000000a114084/frameset.htm&current_toc=/en/67/f7e73ac6e7ec28e10000000a114084/plain.htm&node_id=92&show_children=false][online help]] | The validation of BCS is mainly focus on data consistency of 1) Reported financial data, 2)Standardized financial data, 3)Consolidated data, 4)Additional financial data, 5)Journals |
| EC-CS Online Help           | <2015-12-25 Fri> | [[http://help.sap.com/saphelp_470/helpdata/en/fe/32941867f811d299610000e8a5999a/content.htm?frameset=/en/fe/32941b67f811d299610000e8a5999a/frameset.htm&current_toc=/en/5c/c1c25f445f11d189f00000e81ddfac/plain.htm&node_id=5&show_children=false][online help]] | The help doc doesn't describe any information on EC-CS's data validation. It's not clear how EC-CS define those rules, but it is for sure EC-CS has this functionality. |
| EC-CS Rules and Validation  | <2015-12-26 Sat> | [[https://help.sap.com/saphelp_470/helpdata/en/27/06e23954d9035de10000000a114084/content.htm?frameset=/en/5b/d2318e43c611d182b30000e829fbfe/frameset.htm&current_toc=/en/c4/74da3889432f48e10000000a114084/plain.htm&node_id=223&show_children=false][online help]] | Enterprise Controlling (EC) provides a generic tool for Validations, Substitutions, and Rules. FI-SL, EC-CS, and other SAP systems can use this kind of validation tool. It seems quite a old technology, but still have some reference value. |
| Special Purpose Ledger      | <2015-12-26 Sat> | [[https://help.sap.com/saphelp_470/helpdata/en/5b/d220ba43c611d182b30000e829fbfe/content.htm][online help]] | Special Purpose Ledger let you define ledgers for reporting purposes. You can keep these user-defined ledgers as general ledgers or subsidiary ledgers with various account assignment objects. Account assignment objects can either be SAP dimensions from various applications (such as account, cost center, business area, profit center) or customer-defined dimensions (such as region). |
| BPC Online Help             | <2015-12-23 Wed> | [[http://help.sap.com/saphelp_bopacnw101/helpdata/en/94/e0f3a56f174607855bc345a45df847/content.htm?frameset=/en/b9/bceda8f53d4bc9bb772da27f576c89/frameset.htm&current_toc=/en/82/f51cf12cfc48c58975b9b5e6fba9aa/plain.htm&node_id=139&show_children=false][online help]] | The help doc describes the _Rules_ of BPC standard model. You can get a general idea of how rules are applied in financial consolidation. |
| Planning Functions          | <2015-12-26 Sat> | [[http://help.sap.com/saphelp_nw74/helpdata/en/4c/acf4b354423b9fe10000000a42189b/content.htm?frameset=/en/4c/acf4b354423b9fe10000000a42189b/frameset.htm&current_toc=/en/44/1f81d8cb5f0d1ae10000000a114a6b/plain.htm&node_id=18&show_children=false][online help]] | Planning functions are used in BW Integrated Planning for system-supported editing and generating data. Consolidation of BPC is based on planning functions. Formulas(FOX) are used to provide you with a simple programming language for manipulating transaction data. |
| Consolidations              | <2015-12-26 Sat> | [[http://wiki.scn.sap.com/wiki/display/ERPFI/Consolidations][scnwiki]]     | It is scnwiki page that contains all the practical knowledge regarding SAP BCS and EC-CS. I guess it is a private note book by a SAP finance consultant:-) |
| HANA Rules Framework on scn | <2015-12-14 Mon> | [[http://scn.sap.com/docs/DOC-63159][HRF guides]]  | This guide is on scn, it is opened to public. it is an index page maintained by hrf develop team, which includes videos and latest guides of all about hrf. |
| BRF+ Online Help            | <2015-12-21 Mon> | [[http://help.sap.com/saphelp_dsm10/helpdata/en/9a/6b67ce7c26446483af079719edf679/frameset.htm][online help]] | This help doc gets all you need to working with BRF+, but lack the API Reference. |
| HRF in BRF+ Overview        | <2015-12-23 Wed> | [[\\cnpvgl000\Restricted\FGI\50_Project\Central_Finance\99_Knowledge\03_Consolidation\HRF\HowToUseHRFinBRFplus.docx][Share file]]  | A step-by-step guide on how to modeling HRF objects in BRF+ environment |
| HRF vs BRF+                 | <2015-12-24 Thu> | [[https://scn.sap.com/community/public-sector/blog/2015/12/03/hrf-vs-brfplus-for-public-sector][HRF vs BRF+]] | A good comparison BTW HRF and BRF+ in practice |
| Attachment Service          | <2016-08-23 Tue> | [[https://wiki.wdf.sap.corp/wiki/pages/viewpage.action?pageId=1630385412][sapwiki]]     | Attachment Service Team Wikipage |



** Design
*** Context
#+CAPTION: Validation in Consolidation
[[../image/ValidationInCons.png]]  

Data validation in consolidation happens at any time any place. The main purpose is to keep the data quality and correctness during consolidation. In a consolidation campaign, data is collected from subsidiaries. The local accountant submits his reported financial data to the group accountant. He must make sure the data applies to the group standards, which are defined as data validation rules by group accountants. These rules are applied to the reported data to check if certain criteria are met. If not, the data is not allowed to submit. This process is called *Reported Data Validation*, which only controls the quality of reported financial data at entity level.

After data is collected from entities, the group accountant runs reconciliations. Reconciliation can help to figure out interunit transactions which the amount/quantity may not match. It is somehow a case of data validation, but it is so usual and useful that stands out to be a unique activity. If the difference of interunit transaction between two entities is too big, then standardizing entries could be posted manually to explain the difference. 

~For example: A shipment between consolidation unit is still in transit. The supplying unit has posted a receivable but the receiving unit has not yet posted a payable. In order to ensure that no difference is posted during interunit elimination, you post a reconciliation entry and reverse this in the following period.~

Standardizing entries are posted to the consolidation system(not accounting systems). According to the different use cases, both local accountants and group accountants can do such postings. However, standardizing entries are not only for reconciliation, there are other cases to post standardizing entries to make the local data comply with the group standards. The validation after standardizing is called *Standardized Data Validation*, which runs controls on the merged data set of reported data and standardizing entries. 

Currency translation can be also regarded as a kind of data standardizing. After currency translation, validation is run on the group currency amount. 

Till now, the data is ready for consolidation. Consolidation, in a narrow sense, means eliminating reciprocal transactions based on the rate on each entity. The group accountant run consolidation tasks like elimination and reclassification, which post consolidation journal entries into the consolidation system. So each time the data is changed, validation should be run to make sure things are corrected step by step. The validation after consolidation journal entries are posted is called *Consolidated Data Validation*, which controls the quality of the final group level reports. 

~Reclassification can be run on both reported data and already-consolidated data. Reclassification means reclassifying the amounts among different accounts. For example, you want to reclassify the total value of the Finished Goods items for entity C200 to the Unfinished Goods item because group regards the finished goods of the entity as unfinished goods.~ 

The overall data flow of consolidation validation is described in following diagram. Reported Financial Data mainly resides in ACDOCA if the subsidiaries are already integrated company codes in S/4HANA finance. Otherwise, they must provide the local data through flexible upload, which saves data in ACDOCC. So running report data validation access both table ACDOCA and ACDOCC. The standardized data is posted in ACDOCC, however, run Standardized Data Validation needs both the reported data and the standardized data. Consolidated Data Validation only needs to access ACDOCC, as the consolidation journal entries are posted either automatically or manually to ACDOCC only. 

#+CAPTION: Data Flow in Validation
[[../image/ValidationDataFlow.png]] 

Reported Data Validation, Standardized Data Validation, and Consolidated Data Validation together are categorized as *Totals Data Validation*. Besides, we have *Document Validation*, which happens during document posting. Documents are manual consolidation journal entries, as well as FI Accounting journal entries.The validation is triggered either in interception points or on the posting UI.

 Document validation can be further divided into "Head Level", "Item Level", and "Document Level". The main difference between them is that =Totals Data Validation= is analytic oriented, it runs validations on the persisted totals set of data. While =Document Validation= is transactional oriented, it runs validation on the transient document data before it is persisted.  

*** Key Requirements and Design Goals
Validation Engine (VE in short) provides RTC the ability to control the data quality through a whole consolidation campaign. VE is decoupled from RTC, so that it can not only be used for consolidation validation, but also can be used in other financial applications.

VE contains 2 parts:
1. Rule Definition, and
2. Rule Execution.

Rules are defined based on vocabularies which are predefined data structures. The rule definition can be compiled to DB executables(SQL scripts), which can be invoked by different technologies. The output of each rule is mainly a boolean result that indicates whether it is passed or not. However, it should also support explanation of the true/false with message texts containing intermediate variables.

VE supports both analytic validation and transactional validation. Analytic validation runs on persisted data(can be very huge), while transactional validation runs on transient data(data volume is relative small). Both can be embedded into existing processes and applications.   

Detail Requirements are listed bellow:

**** Following Design Goals *MUST* be Met:
1. There must be an easy handling tool for the rule definition, so that LoB users can define rules themselves(without IT professionals' support);
2. Rule executables must be pushed down to HANA to achieve maximum performance and cross platform;
3. Rule must support input parameters, which allow the same rule can be run on different data ranges;
4. Rule contains both short text and long rich text descriptions, and must support multi-language;
5. The outputs of a rule must be a boolean along with message texts which have places-holders that be filled with intermediate variables;
6. Rules are reusable, once defined, it can be included in all adaptive applications;
7. The validation result produced by a bundle of rules can be persisted;
8. Comments & Attachments can be given in each rule's result;
9. The validation result can be drill-through for detail issue tracing;
10. Rules can be consumed by BPC or other applications;
   
**** Following Design Goals *SHOULD* be Met:
1. The rule expressions should be intuitive and easy to maintain.
2. The rule expressions can be reusable (alias/macros can be defined for the reusibility);
3. The rule compiling process can be customizable;
4. Support mathematics operators,like round, abs, and so on;
   
*** Major Building Blocks
VE leverages BRF+ as the underlying rule framework. BRF+ is the only allowed framework if you develop rule-like applications in S/4HANA. Besides, BRF+ now integrates HANA Rule Framework(HRF) which is a HANA native approach and good at analytic cases. The overall context of VE is described in the diagram bellow.
#+Caption: Validation Engine Context
[[../image/ValidationEngineContext.png]]  

At design time, IT professionals create a BRF+ application using BRF+ workbench(a webdynpro app). Under the BRF+ application, multiple CDS views can be added as the data context for the LoB users to define rules on. Besides CDS views, you can also add DDIC tables or structures, which can be used as output data structures.

LoB users can then define their rules using =Validation Rule Definition= tool. A validation rule is defined under a BRF+ application. Meanwhile, a CDS view is chosen as the vocabulary of the rule. If the CDS view has associations, then the associated CDS views will also be added to the rule's vocabulary. If the CDS view has input parameters, they will automatically converted to the rule's input parameters. User should also assign a data object as the rule's output structure.  The vocabulary, the input parameters, and the output structure together forms the data context of a rule. 

Based on the data context, LoB users can compose their rule bodies. Rule Expression Language(REL) of HRF is used as the rule scripts. REL is designed for LOB users and close to natural language. It is an ideal scripting language for financial consolidation. HRF provides 2 SAPUI5 controls that exposes the framework capabilities to the business users and implementers. The two controls are:

+ Text Rule Editor: Simple, natural, and intuitive business condition language
#+CAPTION: Text Rule Editor
[[../image/TextRuleEditor.png]]  

+ Decision table supports fork path. 
#+CAPTION: Decision Table
[[../image/DecisionTable.png]]  

If there is additional documentation needed for the rule, user can add long rich text or attachments to the rule. All the rule definition meta is persisted in the validation rule repository. When the rule is activated, a BRF+ function is generated under the same BRF+ application. Under the hood, the BRF+ function also generates DB procedures at HANA layer.  

At run time, each rule can be invoked either by the rule simulation UI, or by other applications. BRF+ functions are easy to be consumed by ABAP applications. The outputs of validation rules are seen as validation logs, which can also be persisted. The validation log report can be used either to see the on-the-fly results, or view the persisted result. 

Following building blocks are derived from the above diagram:
**** Validation Rule Definition UI                                    :Frank:
Validation rules should be easily maintained by LoB users. HRF provides 2 UI5 controls: Text Rule Editor and Decision Table. They can be freely embedded in the rule definition UI. Text Rule Editor is more suitable for analytic rules, however Decision Table supports more complex fork logics. The 2 controls should be carefully chosen for different types of validation rules. 

Refer the detail design part for UI mockups.

**** Validation Rule Objects and DB Tables                            :Steve:
Validation rules should be persisted and have connections with BRF+ application and its objects. There should be well-designed ABAP classes and DB tables to describe the validation rule object. Besides general CRUD operations, there are also "Check" and "Activate" operations for a validation rule. "Check" is for the rule expression's syntax, "Activate" is to generate the BRF+ function and ready to be invoked. 

**** Integration with BRF+/HRF and Executables                        :Steve:
Once the rule is activated, the runtime executables are generated, which are BRF+ functions and DB procedures. They should be invoked by the Validation Rule Execution UI, or by other applications. As different rules may have different inputs and outputs, the Validation Rule Execution UI should dynamically adapt the signatures.

If output message text is defined for a rule, the place-holders in the text should also be replaced by the actual values.
**** Validation Log                                                   :Frank:
Validation log can be displayed using a dedicate report, or can be embedded in other applications' UI. The log is a collection of validation result run at a certain time for a certain purpose. Validation log can be persisted,or can be only shown as a transient view.

When we say validation rule, the output is usually a boolean: true/false, pass/fail. Then, somehow the output structure is fixed. This provides feasibility for the table and UI design of validation log. For details, please refer the UI mockup part.

**** Documentation and Comments                                   
A validation rule can be detail documented. Not only provide short or long descriptions, but also long rich text and attachments can be enclosed. Even the persisted result of one run of the rule can be commented/attached by local/group accountants. The documentation may be used for the future FI statements disclosure.

Multi-language should be supported for all the descriptions, rich texts, and output message texts.
**** Intercept into Existing Applications                             :Vince:
VE artifacts should be also easily embedded into other applications like existing accounting post. Consolidation rules can then get validated before documents are posted. The interception point should be carefully chosen. If VE artifacts are embedded into CF's middleware, then validation results should be logged in CF's logging system; If VE artifacts are embedded into a front-end document posting APP(like FB01), then messages should be pop-up to remind users. In both cases, we should provide a set of strict embedded APIs to avoid miss-use.

**** Formula & Script (not necessary)                                 :Vince:
REL provided by HRF is probably not enough for financial consolidation. Additional Formula and script would be needed. Currently, there is no script engine considered, I suppose potential complex logic could be done via ABAP or CDS. 

Meanwhile, I could also guess formula or scripting may not necessary. Unlike BPC, we are running a embedded consolidation application that highly based on ACDOCA. There is no such complex logic like: data copying or MDX operations needed. Based on the documentations of BCS and EC-CS, I could only imagine some simple logics, arithmetic calculations, aggregations, and string functions are needed. Those are covered by REL well. Besides, we could also provide HRF alias to simplify the rule composition.

The need of formula & script still needs further investigation.  

*** Design Challenges resulting from Non-Functional Requirements
**** HRF is in parallel developing
HRF team located in Israel is now developing to integrate HRF to BRF+. They plan to leverage BRF+ existing facilities to provide HRF features to S/4HANA applications. The parallel development of VE and HRF requires coordination in all aspects: black logs, design, and coding. The challenge is also the main risk. The mitigation solutions are:
1. Enforced communication between the 2 teams, on-site workshops and weekly sync meeting;
2. Invite HRF PO to join the FI consolidation customer sessions;
3. Get high level support to put missing features required by VE ahead in HRF's backlog list;
4. Improve the development facilities to achieve more frequency code sync. 

**** Transactional validation is still not supported by HRF
As BRF+ is good at transactional rule, currently, HRF doesn't have this feature. But document validation in RTC highly depends on the transactional rule feature. Either we delay the development of document validation, or we can leverage the old BRF+ rule. 
**** Whether HRF is good for data substitution and enrichment needs further investigation
Besides validation during document posting, FI applications require more on substitution and enrichment, which not only gives true/false result, but also change the data context.
**** Integrate with BPC's control framework
As RTC integrates with BPC to provide a complete consolidation solution, rules defined in RTC should be consumed by BPC, and vice versa. BPC already has its own validation tool called BPC Control, which is based on BW OLAP model and running in ABAP. BPC also seek the possibility to use HRF to achieve its native HANA approach for validation rules, but not in that hurry. 

The conclusion is that we first achieve: BPC can execute rules defined in RTC(VE) in the 1709 release.                            
*** Used Components and Frameworks
| Name | Description                  | Software Component | Implications |
|------+------------------------------+--------------------+--------------|
| HRF  | HANA Rule Framework          |                    |              |
| BRF+ | Business Rule Framework plus |                    |              |

*** Compliance to Standards and Guidelines
**** Applied Architecture/Design Guidelines
- [[https://wiki.wdf.sap.corp/wiki/display/SimplSuite/Architecture][S4H Architecture Guideline]]
- [[https://wiki.wdf.sap.corp/wiki/display/SuiteCDS/VDM+CDS+Development+Guideline][CDS Guideline]]
- [[https://wiki.wdf.sap.corp/wiki/display/fioritech/Development+Guideline+Portal][Fiori Overall Guideline]]
- [[https://ux.wdf.sap.corp/fiori-design/foundation/get-started/][Firoi Design Guideline]]
- [[https://wiki.wdf.sap.corp/wiki/display/ERPFINDEV/sFIN+UX+Fiori+Guidelines][sFIN UX Fiori Guideline]]

**** Approved deviations
| <8>      | <l40>                                    | <l20>                |
| Rule ID  | Deviation                                | Approval Status      |
|----------+------------------------------------------+----------------------|
| C-BRMS-2 | HRF must not be used directly but through the BRF-plus encapsulation only. In case BRFplus encapsulation is not updated or enough, we may need bypass BRF+ APIs. |                      |


** Detail Design

*** Validation Rule Definition UI
Validation rule definition UI should use Fiori, HRF UI controls can be easily embedded in Fiori but not Dynpro or WebDynpro. Following UI mockups follows the Fiori design.

**** Compose Rule Expressions
The UI divides into the left panel and the right panel. The left panel contains the list of all rules defined, user can type words to do fuzzy searches. Click a rule in the list, details will be shown in the right panel. You can also create a new rule by click the "New" button in the bottom bar of the left panel, which then will display an empty rule in the right panel.

#+Caption: Validation Rule Expression
[[../image/ValidationRule01.png]]  

You compose your rule expressions in the first tab. A rule contains:
1. A prerequisite;
2. Rule body or the main rule expression;
3. Outputs variables and a message text.

The prerequisite is necessary if the rule body takes heavy calculation logic only under certain criteria. For example, if account is '1714001', then compare its amount to prior periods. With prerequisite defined as "account equals 1714001", all other accounts will be filtered out to avoid run the amount comparison. Besides, prerequisite adds readability of rules. Take the same example, you can compose all the logic in the rule body  this way "account equals 1714001 and ...". However it now becomes more difficult to read and understand.

If your rule doesn't require a prerequisite, just type "true" in the field.

Rule body is where the main rule takes place. To add readability, it is encouraged to use alias, which are reusable rules defined ahead. Rule body should be defined as an equation or inequality or conjunction of equations and inequalities with "AND" "OR" operators. In any cases, it should return a boolean result. Otherwise, it will generate syntax error. For example, "account of ACDOCC" is an illegal expression; "account of ACDOCC equals 1714001" is a valid one.

There are 4 place-holders(MSGV1~MSGV4) provided for you to output some intermediate variables. You can fill any HRF expressions in the 4 fields, the returned value will all be converted to string type so that it can be displayed as part of the message text. 

If you want your rule outputs breakdown by cerntain characteristics, then choose one, otherwise leave it empty. For details of how breakdown works, see the following chapter. 

The message text can be freely defined. You can embedded the 4 place-holders in your text enclosed with "&". At runtime, these place-holders will be replaced with actual values and displayed to consumers.  

During compilation, the prerequisite, rule body, and output will be converted to a decision table structure in this way:
| *Prerequisite* | *Rule_Body* | MSGV1         | MSGV2         | MSGV3         | MSGV4         |
|----------------+-------------+---------------+---------------+---------------+---------------|
| *true*         | *false*     | <expression1> | <expression2> | <expression3> | <expression4> |

Check "Can be exempted by providing comments" to indicate the rule can be exempted even it is not passed during a run. User needs to provide comments to explain why this rule is not fulfilled.

**** Define Data Context 
#+Caption: Validation Rule Data Context
[[../image/ValidationRule02.png]]  

Data context must be given before you compose your rule expressions. When creating a new rule, the "Data Context" tab is shown first if it is not defined yet. 

You first choose the type of rule, that is whether it is an analytic rule or a transactional rule. Analytic rule runs on the persisted data, while transactional rule is on transient data. This choice will determine how executables are compiled.

A validation rule must be created under a BRF+ application, which provides vocabulary.You must assign an existing BRF+ application to the rule, and choose a CDS view as the vocabulary of the rule. If the CDS view has associated CDS views, these associations will be also added to the rule vocabulary by default. If the CDS view has input parameters, it will then be listed underneath. You need also assign a data object as the output structure. It controls the output layout in the "Expression" tab. 

If you want the validation result be explained in much detail, then you can assign multiple drill-through reports to the rule. When the validation result is displayed, the drill-through reports are shown so that you can click to use. You can pass parameters to these reports by concatenating URL parameters. The place-holders are enclosed with "$", which can be input parameters and fields in the output structure. 

~The drill-through reports should be able to open using a URL. Parameters can be input through URL parameters. It is also planned to integrate AO reports. How to open AO reports in web browser and how parameters are transported need further investigation.~

**** Document a Rule
#+Caption: Validation Rule Documentation
[[../image/ValidationRule03.png]] 
 
Rules can be documented in much detail. You can give a long description as we as supply rich information using long texts. All these documentation support multi-language. You can also attach multi-media attachments into a rule.

**** Simulate Running a Rule
#+Caption: Validation Rule Simulation
[[../image/ValidationRule04.png]]  

Once rule is activated, you can run simulations. You must supply all the input parameters and then run. It will call the rule executables generated by BRF+/HRF, and return the pass/fail result. Only in fail status, should the message text be displayed.

**** Check Where Used
#+Caption: Validation Rule Where Used
[[../image/ValidationRule05.png]]  

A list to show where the rule is used. Rules are collected under validation methods. A validation method can be created under a consolidation model or stand-alone, which can be invoked by representing a bundle of rules together. A rule can be assigned to a method in case they match each other on input parameters and output structure. For details please find in [[https://wiki.wdf.sap.corp/wiki/x/g7r_b][SDD-Totals Validation]].
 

*** Breakdown
Validation outputs can be breakdown by one sub-item(sub characteristics under FS item). 

**** Breakdown Customization Table
| Account | Column   |  Value |
|---------+----------+--------|
| 1301000 | RASSC    | 100000 |
| 1301000 | RASSC    | 200000 |
| 1401000 | RASSC    | 100000 |
| 1401000 | RASSC    | 300000 |
|       * | CONS_CUR |    USD |
|       * | CONS_CUR |    EUR |

**** Underlying HRF Service
| *Prerequisite* | *Rule_Body* | MSGV1         | MSGV2         | MSGV3         | MSGV4         |
|----------------+-------------+---------------+---------------+---------------+---------------|
| *true*         | *false*     | <expression1> | <expression2> | <expression3> | <expression4> |

**** The Output Results
Result Object: VIEW_CONS_CUR_BD
| *Currency(CONS_CUR)* | Status | MSGV1  | MSGV2 | MSGV3 | MSGV4 | MSG Text            |
|----------------------+--------+--------+-------+-------+-------+---------------------|
| USD                  | PASS   | 10,000 | 3,000 | 7,000 | A001  | The total assets... |
| EUR                  | FAIL   | 11,301 | 3,100 | 8,200 | A001  | The total assets... |

** Appendix: Requirements from Design-Thinking with Customers 
*** Totals Data Validation Requirements
+ Easy to use cockpit quick overview of validation rules (traffic lights for orientation)
+ Structured according to finance information flow, grouping in batches/runs
+ Change requests easy to realize
+ simple to use "by highest flexibility"
+ Drill down / drill through to identify differences
+ Central view - Central collection of comments and explanations
+ Sort by entity, by validation rule, by differences (threshold)
+ Link to templates, adjustment postings, explanations, help functions / jump to documentations, guidelines and rules
+ Status overview (color coding), flag important items...
+ Guided workflow,  set "complete" , trigger notes request
+ Security: internal user and external user (e.g. Auditor could see validation checks / list of validation) Authorization Management
+ Integration with disclosure management
+ Learning system: compare with previous year, remove irrelevant information

**** Simple UX
+ Quick overview, simple to use
+ Structured according to finance info flow
+ Grouping in batches/runs
+ Traffic lights
+ Change requests easy to realize

**** List with Drill Down/Drill Through
+ Flexible filter and sort criteria
+ Ranked view (high important first)
+ List of explanations given for selected item
+ Analysis: Group, Company, Profit Center, Account...
+ Insight to action from cockpit to document
+ Hierarchical view acc. To company structure
+ Central collection of comments and explanations
+ Results visible centrally
+ Aggregation of notes
+ Sort by entity, validation, difference

**** Links to Everything Needed 
+ Jump into documentation of guidelines and rules
+ Email integration
+ Link to role repository
+ Link to templates
+ Link to explanation entry screen
+ Direct posting in cons.
+ Link to validation help function
+ Drill down to formula and validation/mapping rule
+ All steps to react on validations from one cockpit
+ Interface to extended ledger
+ Link to reopen an entity
+ Direct connection to correction posting
+ Link to adjustment posting screen

**** Graphical Status Information
+ KPI dashboard with alerts
+ Status overview
+ Color coding, traffic lights
+ "Lights" system for explanation flow
+ Option to flag relevant explanations for further processing
+ Immediate insight into qualitative level of data
+ Confirm exceptions / status management

**** Workflow Based Info Collection
+ Trigger WF for notes request
+ Results allocated to relevant notes (e.g. find assets...)
+ "Complete" button when validation has worked
+ Integrated communication network
+ Guided Workflow
+ WF with status overview
+ Direct feedback possible
+ Trigger WF for posting in FI
+ Group reporting could restart WF to ask for additional info

**** Audit Proof
+ Security external and internal
+ Edit, enrich, add notes
+ FI reporting compliant
+ Integration with disclosure management 

**** Reflecting Responsibilities
+ Assign and track ownership local and central
+ Clear areas of access and responsibilities
+ Clear task allocation
+ Authorization Management

**** Learning System
+ Compare with previous year
+ Learn "irrelevant" information


*** Document Validation Requirements
+ Easy to use for a local accountant in their language
+ Correction proposals (standard booking) and fill information 
+ Pop-up with hints, standard explanations, find similar bookings. This could help to resolve validation errors
+ Jump directly into documentations, guidelines and rules explanations
+ Easy template selection
+ Learning system: compare with previous year, remove irrelevant information, forms for specific business cases
+ Link to validation rules, guidelines, contact person, accounting manual
+ Guided workflow, consistency check, Template pop-up, "in validation" message link
+ Segment split
+ Different levels (warning, not required)

**** Simple UX
+ Reduction of validation errors
+ Easy to understand, easy to use
+ Clear, understandable messages
+ Speaking language of local accountant
+ Mandatory fields where required
+ Input correction proposals
+ Fill information fields automatically wherever possible 

**** Standard Explanations
+ Pop-up with hint
+ Pop-up with list and direct input with notice
+ Proposal for template or explanation in repetitive cases
+ Pop-up to enter explanations for rollin into cockpit
+ Historic view: "Find similar bookings"
+ Option for standard explanation and free input

**** Standard Templates 
+ Jump into documentation of guidelines and rules
+ Standard postings/templates
+ Button for template selection
+ Machine learning -> input compares with historical data
+ Given forms for specific business cases

**** Links to  Rules 
+ Link to validation rule change request
+ Link to guideline contact person
+ Link to violated rule definition
+ "Why can't I book it like this?"
+ Operating business -> no time consuming effects

**** Workflow/Links
+ Accounting manual IFRS manual
+ Second posting tab to add explanations
+ Consistency check e.g.  deferred tax...
+ Link to change master data
+ Triggering rules -> Template pop-up
+ In validation message link to template validation tab
+ Link between entities for IC transactions
+ Trigger approval WF for exceptions 
+ For hard validations start WF to solve
+ Overview used validations for primary postings
+ Access internal/external auditor
+ Inputs from cockpit -> Materiality/Pain Points
+ Segments GKV/UKV
+ Definition of thresholds for amounts booked -> start WF

**** System Reactions
+ Different levels (Warning, note required, workflow, error)



