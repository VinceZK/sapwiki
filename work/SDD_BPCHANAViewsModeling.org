#+PAGEID: 1832374030
#+VERSION: 5
#+STARTUP: align
#+OPTIONS: toc:1
#+TITLE: SDD-BPC HANA Views Modeling
** General Information
*** Stakeholders and Roles
| Role                  | Name                |
|-----------------------+---------------------|
| Author(s)             | Vincent Zhang       |
| Architect             | Vincent Zhang       |
| Product Owner         | Shi Ying, Carol Pan |
| Information Developer |                     |
| Quality Responsible   | Yao Cen             |
| Developers            | Steve Mo, Sam       |

*** References
|                |                  |               | <30>                           |
| Document Title | Date             | Link          | Comments                       |
|----------------+------------------+---------------+--------------------------------|
| HANA Script    | <2016-02-21 Sun> | [[http://help.sap.com/saphelp_hanaplatform/helpdata/en/92/11209e54ab48959c83a7ac3b4ef877/content.htm?frameset=/en/60/088457716e46889c78662700737118/frameset.htm&current_toc=/en/ed/4f384562ce4861b48e22a8be3171e5/plain.htm&node_id=3][online help]]   | Online help of HANA SQL scripts. You can find all your want about how to write in HANA SQL scripts. |
| AMDP Guide     | <2016-02-21 Sun> | [[http://help.sap.com/abapdocu_740/en/index.htm?file=abenamdp.htm][ABAP Keywords]] | All about AMDP: Keywords and Syntax. |
     

** Design
*** Key Requirements and Design Goals
BPC needs to access the real-time data in ACDOCA with timestamp filtering. 

The requirement comes from the legal consolidation which require strict data process control. Only the data that local accountants sumitted can group accountants run validation and consolidation on them. But if we let BPC access data on ACDOCA directly, group accountants will always access the latest data without a handover control. Meanwhile, as the data in ACDOCA is always changing, it will also cause the data inconsistency during a consolidation process run. 

The general idea is to use timestamps to snapshot mulitple data statuses on ACDOCA. The timestamp usually stands for the time that local accountants close their periods. BPC now only accesses the snapshotted data in ACDOCA. Thus we achieve the data handover without any data copies. 

If data comes in through flexible uploading, the handover is then potentially executed when the local accountants upload the data into ACDOCC. So timestamp filtering is not necessary for such cases. But it is good to include flexible uploading into the same pull request approach. 

*** Context
A [[https://wiki.wdf.sap.corp/wiki/display/ERPFINDEV/SDD-Pull+Request+for+Consolidation][Pull Request]] is raised by a local accountant as a data handover document. It contains information like:mode, category,  entity, fiscal year/period, and close timestamp. The group accountant uses this filter information to pull data from ACDOCA for further validation and consolidation. 

The pull requests are stored in table =RTC_PULL_REQ=, with additional user status and system status control. If a pull request is in status "Raised", group accountant can run validation on the data it points; If a pull request is in status "Approved", BPC consolidation engine can see the data it points; And only if the pull request is in user status "Approved", and consolidation runs successfully(system status equals "Processed"), can consolidation reports run on the data it points. 

Because BPC/BW can not pass filtering parameters, so currently, it is impossible for BPC to using timestamp do any filtering before the actual consolidation logic. RTC will provide BPC with HANA views that already join with the pull request table. This approach will cause multiple HANA views to be provided for different purpose. BPC now should be able to differeniate them when doing certain consolidation tasks. 

The design is divided into 2 versions: =1610 Version=, and the =Completed Version=. As you can guess, to achieve both real-time data access and sophistic status/workflow control are rather complicate and time/resource consuming. We design a simplified version for 1610, which is the first release. The 1610 version is simplified by eliminating the status control. Details of the 2 versions and the restrictions can be find in the upcoming sections. 

*** 1610 Release
In 1610 release, we can't achieve the full picture of the diagram. But we can try to simplified it by removing the status control in the data submition process. That means, once the local accountants submit the data, without any approval, BPC can read the data. 

This simplification has following restrictions:
1. Once the local accountant raise the pull request, it is approved automatically, group accountant can only accept it. There is no embedded control on this process, group accountant must notify the local accountant externally if she doesn't want the data.
2. There is no control on local document posting to the consolidated periods. Those "illegal" postings are discarded, or must be resolved by external controls.
3. Data validation is not integerated, there is no system promise that the submitted data is validate according to the rules. Expensive communication effort are necessary between group accountants and local accountants when such cases happen. 
4. Delta consolidation is still not possible. Each time the local accountant raises a new pull request, BPC will always do a full re-consolidation based on the new timestamp. 
5. You cannot defer amounts to the next period.
6. Data inconsistency could happen when consolidation is running or processes errors.

There are 2 different senarios in 1610: 1) Currency Translation in BPC; 2) Currency Translation in S/HANA. Details will be discussed in the following 2 sections. 


** Detail Design

*** Consolidation Entity View
The entity view is generated before-hand, which will then be used by generating other consolidation views. 
#+Caption: CDS View /RTCART/LCENTITY
#+BEGIN_SRC sql
  create view C_ENTITY as 
    select DIM,ENTITY,RCOMP
      from RTC_ENTITY_M
     where MANDT = '820'
       and DIM = '100';
#+END_SRC

#+Caption: Calculation View C_ENTITY
#+BEGIN_SRC sql
  create view C_ENTITY as 
    select MANDT,DIM,ENTITY,RCOMP
      from RTC_ENTITY_M
     where MANDT = '820'
       and DIM = '100';
#+END_SRC

*** Pull Request View
Pull Request View gives out the latest submitted request for each entity each period. This view can be predefined and delivered to customer as standard contents. Both calucation view and CDS view are needed.

#+Caption: CDS View RTC_PULL_REQ
#+BEGIN_SRC sql
  create view I_PULL_REQ as 
    select MANDT,MODEL,BPC_CATG,FYEAR,FPERI,ENTITY,max(CLOSE_TIME)
      from RTC_PULL_REQ
     where USTATUS >= 30
  group by MANDT,MODEL,BPC_CATG,FYEAR,FPERI,ENTITY;
#+END_SRC

#+Caption: Calculation View C_PULL_REQ
#+BEGIN_SRC sql
  create view C_PULL_REQ as 
    select MANDT,MODEL,BPC_CATG,FYEAR,FPERI,ENTITY,max(CLOSE_TIME)
      from RTC_PULL_REQ
     where USTATUS >= 30
  group by MANDT,MODEL,BPC_CATG,FYEAR,FPERI,ENTITY;
#+END_SRC

*** Foundation View                                                   :Blang:
This is an example of streamlined foundation view for company consolidation. It projects fields from ACDOCA, however, company code (RBUKRS) is replaced by RCOMP through join with table T001. Only 2 key figures are choosen: TSL and HSL.
| Field Name | Lable                           |
|------------+---------------------------------|
| RCLNT      | SAP Client                      |
| RCOMP      | Company                         |
| RASSC      | Trading Partner                 |
| BUDAT      | Posting Date                    |
| KTOPL      | Chart of Accounts               |
| RACCT      | Account Number                  |
| RMVCT      | Transaction Type                |
| RTCUR      | Transaction Currency Key        |
| RHCUR      | Company Code Currency Key       |
| TSL        | Amount in Transaction Currency  |
| HSL        | Amount in Company Code Currency |
| TIMESTAMP  | Timestamp                       | 

Through foundation view, you see the FI data still in local point of view. The above foundation view will then be converted to consolidation base view, which maps to the group chart of accounts and aligned with the group fiscal year variant. 

*** Consolidation Base View
Consolidation base views are the basis for other consolidation views to be built on. It contains the common logic that all other consolidation views needed. In the BPC integration scenario, there is also a HANA calculation view acts as the base view. 
| Field Name  | Lable                           |
|-------------+---------------------------------|
| RCLNT       | SAP Client                      |
| MODEL       | Consolidation Model             |
| ENTITY      | Consolidation Entity            |
| PENTITY     | Partner Entity                  |
| PERIV       | Fiscal Year Variant             |
| RYEAR       | Fiscal Year                     |
| POPER       | Fiscal Period                   |
| FISCYEARPER | Fiscal Year and Period          |
| KTOPL       | Group Chart of Accounts         |
| RACCT       | Group Account Number            |
| RMVCT       | Transaction Type                |
| RTCUR       | Transaction Currency Key        |
| RHCUR       | Company Code Currency Key       |
| TSL         | Amount in Transaction Currency  |
| HSL         | Amount in Company Code Currency |
| TIMESTAMP   | Timestamp                       |

1. RCOMP is replaced by joining RTC_ENTITY_M for the field ENTITY as ENTITY.
2. RASSC is replaced by joining RTC_ENTITY_M for the field ENTITY as PENTITY.
3. BUDAT is replaced by joining FINS_FISC_DATE for the fields: PERIV, RYEAR, POPER, and FISCYEARPER.
4. KTOPL is replaced by joining T004 for the field KKTPL as KTOPL.
5. RACCT is replaced by joining SKA1 for the field BILKT as RACCT.
Now, through the consolidation base view, you see the FI data in group point of view. 

There are 4 consolidation base views generated. I give all of their SQL definitions:
#+Caption: Calculation View, gives out data in ACDOCA only
#+BEGIN_SRC sql
  create view C_LC_ACTUAL_BASE as 
  select A.RCLNT,
         'RTCCTB'  as MODEL,
         'Actual'  as RTC_CATG,
         ''        as ACCTP,
         ''        as RVERS,
         '01'      as PLEVEL,
         B.ENTITY,
         C.ENTITY as PENTITY,
         D.FISCAL_YEAR_VARIANT as PERIV,
         D.FISCAL_YEAR as RYEAR,
         D.FISCAL_PERIOD as POPER,
         D.FISCYEARPER,
         E.KKTPL as KTOPL,
         F.BILKT as RACCT,         
         case A.RMVCT when '' then 'F15' else A.RMVCT end as RMVCT,
         A.RTCUR,
         A.RHCUR,
         A.RHCUR as CONS_CUR,
         A.TSL,
         A.HSL,
         A.HSL as CONS_SL,
         A.TIMESTAMP
         from RTC_C_FOUNDATION
         join C_ENTITY as B
           on A.RCOMP = B.RCOMP
    left join C_ENTITY as C
           on A.RASSC = B.RCOMP
         join RTC_C_FINS_FISC_DATE as D
           on A.RCLNT = D.MANDT
          and A.BUDAT = D.CALENDAR_DATE
         join T004 as E
           on A.RCLNT = E.MANDT
          and A.KTOPL = E.KTOPL
         join SKA1 as F
           on A.RCLNT = F.MANDT
          and A.KTOPL = F.KTOPL
          and A.RACCT = F.SAKNR;          
#+END_SRC

#+Caption: CDS View, created directly from the table function based on C_LC_ACTUAL_BASE 
#+BEGIN_SRC sql
  create view /RTCART/LCB00001 as 
   table function 
     select * from C_LC_ACTUAL_BASE;          
#+END_SRC

#+Caption: CDS View, gives out data in ACDOCC only
#+BEGIN_SRC sql
  create view /RTCART/LCB00002 as 
  select A.RCLNT,
         A.MODEL,
         A.RTC_CATG,
         B.ACCTP,
         A.RVERS,
         A.PLEVEL,
         C.ENTITY as ENTITY,
         case D.ENTITY when '' then 'NONE' else D.ENTITY end as PENTITY,
         A.PERIV,
         A.RYEAR,
         A.POPER,
         A.FISCYEARPER,
         A.KTOPL,
         A.RACCT,         
         A.RMVCT,
         A.RTCUR,
         A.RHCUR,
         A.CONS_CUR,
         A.TSL,
         A.HSL,
         A.CONS_SL,
         A.TIMESTAMP
         from ACDOCC as A
    left join RTC_ACCTP as B
           on A.LEDGER = B.LEDGER
         join C_ENTITY as C
           on A.RCOMP = C.RCOMP
    left join C_ENTITY as D
           on A.RASSC = D.RCOMP
        where A.DEL = ''
          and A.MODEL = 'RTCCTB'
          and A.DCATE   = 'Actual';          
#+END_SRC

#+Caption: CDS View, Union the other 2
#+BEGIN_SRC sql
  create view /RTCART/LCB00003 as 
   select * from  /RTCART/LCB00001
    union all
   select * from  /RTCART/LCB00002 ;        
#+END_SRC

*** Consolidation Views for CT in BPC
If CT happens in BPC, BPC should be able to access data in both ACDOCA and ACDOCC. Then, 5 HANA calculation views will be generated to cover the "Final" and "Preliminary" consolidations. 

The simplified diagram looks like this:

#+Caption: HANA Views for BPC (CT in BPC)
[[../image/ConsViews04.png]]

**** Final View A
This view gives out the submitted report data for these S/4 integrated entities. 
#+BEGIN_SRC sql
  select A.RCLNT,
         A.MODEL,
         'FINAL'   as BPC_CATG,
         'G_NONE'  as RCONGR1,
         A.ENTITY,
         case A.PENTITY when '' then 'NONE' else A.PENTITY end as PENTITY,
         A.PERIV,
         A.FISCYEARPER,
         A.KTOPL,
         A.RACCT,         
         A.RMVCT,
         'INPUT'   as AUDIT_TRA,
         'LC'      as CONS_CUR,
         A.CONS_SL
    from C_LC_ACTUAL_BASE as A
    join C_PULL_REQ as B
      on A.RCLNT = B.MANDT
     and A.RYEAR = B.FYEAR
     and A.POPER = B.FPERI
     and A.ENTITY = B.ENTITY
     and A.TIMESTAMP <= B.CLOSE_TIME
   where B.MODEL = 'RTCCTB'
     and B.BPC_CATG = 'FINAL'. 
#+END_SRC

**** Final View C
For those external companies who supply data through flexible upload. Because each time the local accountant submits a request, the local data is copied from staging area (PLEVEL = 00) to the formal area(PLEVEL >= 01). So it is not necessary to join with the lastest pull requests. This view gives out all the report data of category FINAL for those external entities.  
#+BEGIN_SRC sql
  select A.RCLNT,
         A.MODEL,
         'FINAL'   as BPC_CATG,
         A.RCONGR1,
         C.ENTITY as ENTITY,
         case D.ENTITY when '' then 'NONE' else D.ENTITY end as PENTITY,
         A.PERIV,
         A.FISCYEARPER,
         A.KTOPL,
         A.RACCT,         
         A.RMVCT,
         A.AUDIT_TRA,
         A.CONS_CUR,
         A.CONS_SL
         from ACDOCC as A
    left join RTC_ACCTP as B
           on A.LEDGER = B.LEDGER
         join C_ENTITY as C
           on A.RCOMP = C.RCOMP
    left join C_ENTITY as D
           on A.RASSC = D.RCOMP
        where A.DEL = ''
          and A.MODEL = 'RTCCTB'
          and A.PLEVEL = '01'   --Posting Level = 01 means the submitted report data
          and A.DCATE   = 'Actual'
          and (B.ACCTP = '' or  B.ACCTP   = 'GAAP')
          and (A.VARIANT = '' or A.VARIANT = '100');  
#+END_SRC

Once the local accountant submits the data, the pull request's user status will be set to "Approved". 

**** Final Result View
Based on ACDOCC, only expose the consolidation results.
#+BEGIN_SRC sql
  select A.RCLNT,
         A.MODEL,
         'FINAL'   as BPC_CATG,
         A.RCONGR1,
         C.ENTITY as ENTITY,
         case D.ENTITY when '' then 'NONE' else D.ENTITY end as PENTITY,
         A.PERIV,
         A.FISCYEARPER,
         A.KTOPL,
         A.RACCT,         
         A.RMVCT,
         A.AUDIT_TRA,
         A.CONS_CUR,
         A.CONS_SL
         from ACDOCC as A
    left join RTC_ACCTP as B
           on A.LEDGER = B.LEDGER
         join C_ENTITY as C
           on A.RCOMP = C.RCOMP
    left join C_ENTITY as D
           on A.RASSC = D.RCOMP
        where A.DEL = ''
          and A.MODEL = 'RTCCTB'
          and A.PLEVEL > '01'   --Posting Level > 01 means all the BPC generatd data
          and A.DCATE   = 'Actual'
          and (B.ACCTP = '' or  B.ACCTP   = 'GAAP')
          and (A.VARIANT = '' or A.VARIANT = '100');  
#+END_SRC

**** Preliminary View A
The view gives out the up-to-time report data for S/4 integrated entities.
#+BEGIN_SRC sql
  select A.RCLNT,
         A.MODEL,
         'PRELIM'   as BPC_CATG,
         'G_NONE'  as RCONGR1,
         A.ENTITY,
         case A.PENTITY when '' then 'NONE' else A.PENTITY end as PENTITY,
         A.PERIV,
         A.FISCYEARPER,
         A.KTOPL,
         A.RACCT,         
         A.RMVCT,
         'INPUT'   as AUDIT_TRA,
         'LC'      as CONS_CUR,
         A.CONS_SL
    from C_LC_ACTUAL_BASE;
#+END_SRC

**** Preliminary View C
This view gives out the data in staging area of a defined data category.
#+BEGIN_SRC sql
  select A.RCLNT,
         A.MODEL,
         'PRELIM'  as BPC_CATG,
         A.RCONGR1,
         C.ENTITY  as ENTITY,
         case D.ENTITY when '' then 'NONE' else D.ENTITY end as PENTITY,
         A.PERIV,
         A.FISCYEARPER,
         A.KTOPL,
         A.RACCT,         
         A.RMVCT,
         A.AUDIT_TRA,
         A.CONS_CUR,
         A.CONS_SL
         from ACDOCC as A
         join C_ENTITY as C
           on A.RCOMP = C.RCOMP
    left join C_ENTITY as D
           on A.RASSC = D.RCOMP
        where A.DEL = ''
          and A.MODEL = 'RTCCTB'
          and A.PLEVEL = '00'
          and A.DCATE   = 'Actual';
#+END_SRC

**** Preliminary Result View
Based on ACDOCC, only expose the consolidation results.
#+BEGIN_SRC sql
  select A.RCLNT,
         A.MODEL,
         'PRELIM'  as BPC_CATG,
         A.RCONGR1,
         C.ENTITY as ENTITY,
         case D.ENTITY when '' then 'NONE' else D.ENTITY end as PENTITY,
         A.PERIV,
         A.FISCYEARPER,
         A.KTOPL,
         A.RACCT,         
         A.RMVCT,
         A.AUDIT_TRA,
         A.CONS_CUR,
         A.CONS_SL
         from ACDOCC as A
    left join RTC_ACCTP as B
           on A.LEDGER = B.LEDGER
         join C_ENTITY as C
           on A.RCOMP = C.RCOMP
    left join C_ENTITY as D
           on A.RASSC = D.RCOMP
        where A.DEL = ''
          and A.MODEL = 'RTCCTB'
          and A.PLEVEL > '01'   --Posting Level > 01 means all the BPC generatd data
          and A.DCATE   = 'Actual'
          and (B.ACCTP = '' or  B.ACCTP   = 'GAAP')
          and (A.VARIANT = '' or A.VARIANT = '200');  
#+END_SRC


*** CT in S/4HANA
If CT happens in S/4HANA, BPC should only access data in ACDOCC. Then, 3 HANA calculation views will be generated. 

#+Caption: HANA Views for BPC (CT in S/4HANA)
[[../image/ConsViews05.png]]

**** Consolidation Result View
Expose the consolidation results.
#+BEGIN_SRC sql
  select * from ACDOCC
          where MODEL = 'RTC001'
            and BTTYPE = 'RTBP'
            and DELFLG = ''.
#+END_SRC

**** Final View C
Contains all submitted data comes from CT month-end run. 

If local data comes from ACDOCA, CT run will save both the local amount and translated amount in ACDOCC. If local data comes from ACDOCC(flexible upload), CT run will save the translated amount in ACDOCC. The view should contains both data which has pull request submitted. 

#+BEGIN_SRC sql
  create view I_PULL_REQ_R as 
    select MODEL, BPC_CATT, FYEAR, FPERI, ENTITY, max(CTIME), PLUUID
      from RTC_PULL_REQ
     where USTATUS = 'Approved'
       and REQ_TYPE = 'C'
     group by MODEL, BPC_CATT, FYEAR, FPERI, ENTITY;

  select * from ACDOCC as C
           join I_PULL_REQ_R as P
             on C.M = P.MODEL
            and C.BPC_CATG = P.BPC_CATG
            and C.RYEAR = P.FYEAR
            and C.POPER = P.FPERI
            and C.RCOMP = P.ENTITY
            and C.PLUUID = P.PLUUID
          where P.MODEL = 'RTC001'
            and P.BPC_CATG = 'FINAL'
            and C.DELFLG = ''.
#+END_SRC

Once the local accountant submits the data, the pull request's user status will be set to "Approved". 

**** Preliminary View C
All data in ACDOCC with the category "PRELIM".
#+BEGIN_SRC sql
  select * from ACDOCC
          where MODEL = 'RTC001'
            and BPC_CATG = 'PRELIM'
            and DELFLG = ''.
#+END_SRC

*** Completed Version      :Vincent:
Still under design.
#+Caption: HANA Views for BPC
[[../image/ConsViews03.png]]

*Note:*
1. =This design still doesn't cover the delta coonsolidation senario. My feeling is that to achieve delta consolidation we must have BW pass timestamp as parameters.=
2. =Defer case is not considered=

8 HANA calculation views will be provided for BPC. They are unioned under a composite provider, on which aggregation level will be created. Then if I want do a legal consolidation, I(BPC) should access data in "Cons. Result View", "Legal View C for Consolidation", and "Legal View A for consolidation"; If I want to access real-time data to do a Preliminary consolidation, BPC should only access "Cons. Result View", "Preliminary View C", and "Preliminary View A". The detail difference and usage for the 8 HANA calculation views are explained bellow:

**** Consolidation Result View
Based on ACDOCC, only expose the consolidation result of the former periods.
#+BEGIN_SRC sql
  select * from ACDOCC
          where MODEL = 'RTC001'
            and RYEAR = '2016'
            and BPC_CATG = 'Actual'
            and POPER < '<this-period>'
            and DELFLG = ''.
#+END_SRC

**** Legal View C for Validation 
Based on ACDOCC, those flexible uploaded data of current period. The view is created on ACDOCC join with the pull request table on document number. The pull request table should first filter out these items with user status equals 'Raised' or 'Approved'.
#+BEGIN_SRC sql
  create view I_PULL_REQ_R as 
    select MODEL, BPC_CATT, FYEAR, FPERI, ENTITY, BELNR, max(CTIME)
            from RTC_PULL_REQ
            where ( USTATUS = 'Raised' or USTATUS = 'Approved' )
              and REQ_TYPE = 'FLEXUPL'
            group by MODEL, BPC_CATT, FYEAR, FPERI, ENTITY, BELNR;

  select * from ACDOCC as C
           join I_PULL_REQ_R as P
             on C.MODEL = P.MODEL
            and C.BPC_CATG = P.BPC_CATG
            and C.RYEAR = P.FYEAR
            and C.POPER = P.FPERI
            and C.RCOMP = P.ENTITY
            and C.BELNR = P.BELNR
          where P.MODEL = 'RTC001'
            and P.BPC_CATG = 'Actual'
            and P.FYEAR = '2016'
            and P.FPERI = '<this-period>'
            and C.DELFLG = ''.
#+END_SRC

**** Legal View C for Consolidation & Report
Based on ACDOCC, those approved flexible uploaded data of current period. The view is created on ACDOCC join with the pull request table on document number. The pull request table should first filter out these items with user status equals 'Approved'.
#+BEGIN_SRC sql
  create view I_PULL_REQ_A as 
    select MODEL, BPC_CATT, FYEAR, FPERI, ENTITY, BELNR, max(CTIME)
            from RTC_PULL_REQ
            where USTATUS = 'Approved'
              and REQ_TYPE = 'FLEXUPL'
            group by MODEL, BPC_CATT, FYEAR, FPERI, ENTITY, BELNR;

  select * from ACDOCC as C
           join I_PULL_REQ_A as P
             on A.MODEL = P.MODEL
            and A.BPC_CATG = P.BPC_CATG
            and A.RYEAR = P.FYEAR
            and A.POPER = P.FPERI
            and A.RCOMP = P.ENTITY
            and A.BELNR = P.BELNR
          where P.MODEL = 'RTC001'
            and P.RYEAR = '2016'
            and P.BPC_CATG = 'Actual'
            and P.POPER = '<this-period>'
            and C.DELFLG = ''.
#+END_SRC

**** Legal View A for Validation 
Based on ACDOCA, those current period data in ACDOCA. The view is created on "Foundation View" based on ACDOCA, join with the pull request table on timestamp. The pull request table should first filter out these items with user status equals 'Raised' or 'Approved'.
#+BEGIN_SRC sql
  create view I_PULL_REQ_R as 
    select MODEL, BPC_CATT, FYEAR, FPERI, ENTITY, CLOSE_TIME, max(CTIME)
            from RTC_PULL_REQ
            where ( USTATUS = 'Raised' or USTATUS = 'Approved' )
              and REQ_TYPE = 'REALTIME'
            group by MODEL, BPC_CATT, FYEAR, FPERI, ENTITY, BELNR;

  select * from I_FACDOCA as A
           join I_PULL_REQ_R as P
            and A.RYEAR = P.FYEAR
            and A.POPER = P.FPERI
            and A.RCOMP = P.ENTITY
            and A.TIMESTAMP <= P.CLOSE_TIME
          where P.MODEL = 'RTC001'
            and P.RYEAR = '2016'
            and P.BPC_CATG = 'Actual'
            and P.POPER = '<this-period>'.
#+END_SRC

*Note:* =Should check if defer case can be fulfilled in such cases=.

**** Legal View A for Consolidation 
The pull request table should first filter out these items with user status equals 'Approved'. Delta consolidation is still a restriction. 
#+BEGIN_SRC sql
  create view I_PULL_REQ_A as 
    select MODEL, BPC_CATT, FYEAR, FPERI, ENTITY, CLOSE_TIME, max(CTIME)
            from RTC_PULL_REQ
            where USTATUS = 'Approved'
              and REQ_TYPE = 'REALTIME'
            group by MODEL, BPC_CATT, FYEAR, FPERI, ENTITY, BELNR;

  select * from I_FACDOCA as A
           join I_PULL_REQ_A as P
            and A.RYEAR = P.FYEAR
            and A.POPER = P.FPERI
            and A.RCOMP = P.ENTITY
            and A.TIMESTAMP <= P.CLOSE_TIME
          where P.MODEL = 'RTC001'
            and P.RYEAR = '2016'
            and P.BPC_CATG = 'Actual'
            and P.POPER = '<this-period>'.
#+END_SRC

**** Legal View A for Reporting 
The pull request table should first filter out these items with user status equals 'Approved' and system status equals "Finished". 
#+BEGIN_SRC sql
  create view I_PULL_REQ_F as 
    select MODEL, BPC_CATT, FYEAR, FPERI, ENTITY, CLOSE_TIME, max(CTIME)
            from RTC_PULL_REQ
            where USTATUS = 'Approved'
              and SSTATUS = 'Finished'
              and REQ_TYPE = 'REALTIME'
            group by MODEL, BPC_CATT, FYEAR, FPERI, ENTITY, BELNR;

  select * from I_FACDOCA as A
           join I_PULL_REQ_F as P
            and A.RYEAR = P.FYEAR
            and A.POPER = P.FPERI
            and A.RCOMP = P.ENTITY
            and A.TIMESTAMP <= P.CLOSE_TIME
          where P.MODEL = 'RTC001'
            and P.RYEAR = '2016'
            and P.BPC_CATG = 'Actual'
            and P.POPER = '<this-period>'.
#+END_SRC

**** Preliminary View C
Latest data in ACDOCC if there are flexible uploaded data in this period.
#+BEGIN_SRC sql
  select * from ACDOCC
          where MODEL = 'RTC001'
            and RYEAR = '2016'
            and BPC_CATG = 'Actual'
            and POPER = '<this-period>'
            and DELFLG = ''.
#+END_SRC

**** Preliminary View A
latest data in ACDOCA of current period.
#+BEGIN_SRC sql
  select * from I_FACDOCA
          where RYEAR = '2016'
            and POPER = '<this-period>'.
#+END_SRC

*** Auto-generation of HANA Calculation Views                         :Steve:
There is an exiting ABAP API to support generation of HANA calculation view. 

*** Write-back using HANA temp table
To be planned!

