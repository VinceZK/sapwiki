#+PAGEID: 1829146305
#+VERSION: 20
#+STARTUP: align
#+OPTIONS: toc:1
#+TITLE: SDD-Data Submit Request
* Context
A data submit request represents a data submission activity done by local accountants. Usually, there is an underlying data replication step along with the submission activity. In Real-Time Consolidation, the data replication step is eliminated by only recording a timestamp (this typically stands for the financial close time). The timestamp is then used to filter in the data in the universal journal (table ACDOCA) which is before that point. 

#+CAPTION: Data Submit Request
[[../image/DataSubmitRequest.png]]  

The challenge that Real-Time Consolidation faces is that consolidation needs a stable data set, while ACDOCA is time-variant. It is not feasible to stop data entering into ACDOCA, both from a business perspective and a technical perspective, if it is only for the purpose of running consolidation. Of course, data replication can solve this contradiction, but it violates the real-time principle of Real-Time Consolidation. 

The data submit request is designed as a dynamic filtering, or more technically speaking, it is an SQL where-clause that filters source data. Local accountants are allowed to submit multiple requests for each entity in each period, but only the latest one is taken into account as the filter. The data before the latest recorded timestamp is fetched to the consolidation engine. The data after that timestamp is omitted for the consolidation run. However, together with group accountants, local accountants can decide how to deal with delta changes after the latest submit. They can decide either to re-run the consolidation to include it, or to ignore it. 

Data submit requests can be divided to MonthEnd Submit Request and Adjustment Submit Request. MonthEnd Submit Request happens recurrently on every period end. Adjustment Submit Requests are raised in case there are further adjustments after the MonthEnd requests are processed. 

** MonthEnd Submit Request
MonthEnd Submit Requests(MSR) are generated by the end of each consolidation period, either automatically or manually. Once a submit request is created, then the entity can submit its local data for a certain sub-package on the period.

#+CAPTION: MonthEnd Data Submit Request
[[../image/MonthEndPullRequest.png]]  

There are 2 roles involved in the data submission process.  Following tasks are executed in a chronography order:
1. The group accountant opens the period for data submission.
2. The local accountant can now raise the pull requests created by the group accountant. A local validation could happen along with the submission. If validation fails, submission is not allowed unless comments and adjustments are made.
3. The group accountant checks the submitted data and comments. If standardized entries are posted, she may run validation again. Then she decides whether to accept or reject the package.
4. If the data (sub-)package is accepted, then consolidation tasks can be run. The period should be locked for the entity.
5. If the data (sub-)package is rejected, then local accountant is notified to post adjustment documents or provide additional comments. Then he raises a new MonthEnd submit request to encapsulate the changes.

** Adjustment Data Submit Request
Adjustment Submit Requests(ASR) are created in case there are adjustments after consolidation is finished for the period. Unlike MonthEnd submit request, ASR is created by local accountants after the MSR of current period is approved. Another important difference of ASR is that it supports "Defer" operation, which will copy the pointed delta amount to the next period.
 
#+CAPTION: Adjustment Data Submit Request
[[../image/AdjustmentPullRequest.png]]  

1. Local accountant find there is new data entering into ACDOCA for the period which consolidation is already run. He then contact the group accountant for this situation, and request unlock the period to include this new data.
2. The group accountant unlock the period so that local accountant can raise an Adjustment Submit Request. She checks and validates the data, can can do one of the following decisions:
3. Accept the ASR and rerun all the consolidation tasks;
4. Reject the ASR, however the local accountant will raise again with new adjustments.
5. Defer the ASR, the delta amount is copied to the next period. During consolidation for the next period, this amount will be taken into account. 

** Comparison with On-the-Fly consolidation.
The data submit request approach is built on the conclusion that local accountants have the right to decide when and which data should be reported to the group accountants. If no data submit request is raised by local accountants, then the group accountant is not allowed to pull the data from local company, even technically, the data is already in the central system. 

The data submit request is somehow conflict with the on-the-fly consolidation in business duties. As on-the-fly means it always reads the latest data in the central system. Group accountants access the local data without local accountants' permission. _But that doesn't mean data submit request can't co-exist with On-the-Fly_. 

We use data submit request approach to process the legal period end consolidation statements, which requires more on data precise, security, and clear duties. Each period, a consolidated result will be generated. The On-the-Fly consolidation statements always runs on the latest data basis which only extract current period data in ACDOCA, combines with the last periods' consolidated results in ACDOCC, will form a full consolidated picture at anytime.
   
** Overall Data Flow
The overall data flow show how the data is collected and submitted to the consolidation system(BPC).  
#+CAPTION: Data Flow of Data Submission
[[../image/DataFlowOverview.png]]  

1. Data comes from the local finance systems through Central Finance's real-time data replication. Data streams could be validated at document level according to rules defined in the central system, and saved in the central journal table ACDOCA.
2. As not all the subsidiaries are involved in the central finance's landscape, those who can only provide their financial data through spreadsheets submit via "Flexible Upload". The data will first be saved in a staging area before taking into the consolidation system.
3. Only if the local accountant raises a data submit request can the group accountant pull the data from ACDOCA or copy data from staging area to ACDOCC. You can regard a data submit request as a SQL where-clause which can be applied on ACDOCA or ACDOCC to filter the data. As data in ACDOCA is time-vary, so a timestamp is used for filter-in data before it. Thus a snapshot is taken which forms a "Reported Data View".
4. Both local and group accountants can run totals validation on the "Reported Data View". When run totals validation, it also requires the consolidated results from the former periods, as well as the adjustments that posted by group accountants are also in ACDOCC.
5. If the validation is passed, consolidation tasks can be run. Till now, the data handover from the local accountants to the group accountants is finished. If the validation is not passed, adjustments should be done by the local accountant, who needs to re-open the period and post adjustment documents. He should then raise a data submit request again so that the group accountant is notified and run validation on the adjusted data.
6. There are multiple BPC consolidation views created based on ACDOCA and ACDOCC. How many views and how they would be created depends on different use cases. But those views can be generally categorized into 2 categories: 1)Real-time data for preliminary consolidations, 2)Data filtered by submit request for final consolidation. Those views are merged under a composite provider.
7. It is possible for the local accountant to run currency translation in S/4, then it is not necessary to rerun currency translation in BPC again. In this way, BPC only needs to access data in ACDOCC. Because CT in S/4 already saves the translated results in ACDOCC.


* Design
data submit requests are raised and saved in the central system. Each time, if the local accountant wants to submit his reported financial data, he must raise a data submit request. The group accountant will then be notified, and can use the information in the data submit request to pull data from ACDOCA/C.

** Data Submit Request Table Design
The data submit request table is actually hold filter information that is used to filter in data which is relevant for the consolidation. The mandatory filter dimension is timestamp which is used to point out the lines in ACDOCA. Besides, you can also filter at other dimensions, usually the account dimension, so that you can submit data by packages. 

#+CAPTION: Data Submit Request Table
| Field   | Key | Description                                               |
|---------+-----+-----------------------------------------------------------|
| MANDT   | X   | SAP Client                                                |
| PRUUID  | X   | Data Submit Request UUID                                  |
| MODEL   |     | Consolidation Model                                       |
| DIMEN   |     | Dimension(UC-CS)                                          |
| BCATE   |     | BPC Category(BPC)                                         |
| CONSV   |     | Consolidation Version                                     |
| RVERS   |     | Version for Data Entry(UC-CS)                             |
| PTYPE   |     | Data Submit Request Type: Collective/MonthEnd/Adjustment  |
| FYEAR   |     | Fiscal Year                                               |
| FPERI   |     | Fiscal Period                                             |
| ENTITY  |     | Consolidation Entities: Company, Profit Center            |
| BUNIT   |     | Consolidation Unit(UC-CS)                                 |
| CLTIME  |     | Period Close Timestamp                                    |
| DCMETH  |     | Data Submission Method                                    |
| DENTRY  |     | Data Entry ID                                             |
| USTAT   |     | User Status: Initial/Rejected/Deferred/Submitted/Approved |
| SSTAT   |     | System Status: Ready/Running/Processed/Error              |
| CREATOR |     | Who creates the Data Submit Request                       |
| CTIME   |     | Data Submit Request create time                           |
| UPDATOR |     | Who is the last user update it                            |
| UTIME   |     | The last update time                                      |

1. data submit request is client dependent(=MANDT=).
2. There is a unique ID(=PRUUID=) for each data submit request in UUID format.
3. data submit request is also grouped by consolidation model(=MODEL=) and versions(=CONSV=). In case integrated with BPC, =BCATE= is used to store the BPC category.
4. There are 3 types(=PTYPE=) of data submit request: 1) "Collective" means the data submit request contains sub-packages; 2) "MonthEnd" means a regular mandatory data submit request for each period; 3) "Adjustment" is for adjustment on the MonthEnd data.
5. data submit request is also grouped by fiscal year(=FYEAR=), period(=FPERI=), and entity(=ENTITY=).
6. Each data submit request must have a timestamp(=CLTIME=) assigned which stands for the period close time. And it is that timestamp which is used to filter in lines in ACDOCA who have timestamp value before it.
7. A Data Submission Method must be assigned to a data submit request so that it can maps the data package meta data definition. For data submit requests with type "MonthEnd" and "Adjustment", a data entry ID is also needed, through which it can find a selection which contains additional filter information.
8. User status(=USTAT=) are statuses from user perspective. It is used to control the data submit process and the data visibility. For details please refer ~Data Submit Request Status and Pseudo SQL~. 
9. System status(=SSTAT=) are statuses from system perspective. For example, when a data submit request is approved, the data is ready for consolidation tasks. But if system errors happen during tasks' run, then the system status is set to "Error". And when the tasks are in "Running" status, you cannot submit further requests.
10. Audit information like who(=CREATOR= and =UPDATOR=) and when(=CTIME= and =UTIME=) create it or update it is also attached.
11. =DIMEN=, =RVERS=, and =BUNIT= are only used for UC-CS, which are corresponding to the Model, consolidation version, and consolidation entity.

** Data Submission Method and Data Submit Request 
Data Submission Method is defined as the meta data to control how Data Submit Requests are generated. You can regard Data Submit Requests are instances of a Data Submission Method. For example, I define a Data Submission Method as following:

#+CAPTION: Method Header
| Model  | Method | Type | Desc.                       | EMode      | Validation Method |
|--------+--------+------+-----------------------------+------------+-------------------|
| RTCCTB | DC001  | DC   | Data collection from ACDOCA | Sequential | DV100             |

#+CAPTION: Method Steps
| Model  | Method | Step ID | Desc.            | Sequence | Selection | Validation Method |
|--------+--------+---------+------------------+----------+-----------+-------------------|
| RTCCTB | DC001  |     001 | AP/AR            |        1 | $AP_AR    | DV110             |
| RTCCTB | DC001  |     002 | Assets           |        2 | $ASSET    | DV120             |
| RTCCTB | DC001  |     003 | Equity&Liability |        3 | $EQU_LIAB | DV130             |
| RTCCTB | DC001  |     004 | Profit&Loss      |        4 | $P_L      | DV140             |

All data submission methods are in sequential execution mode, but actually the sequence is not strictly applied during runtime, it only affects the display order in the UI. The method "DC001" has 4 steps with each a selection is given to boundary the data to be submitted. From business perspective, each step is corresponding to a data entry that represents a sub-package. The 4 data entries together will cover the complete set of the local data. Each data entry can aslo be assigned with a Data Validation Method. The validation method is run only to validate the data entry, not the entire package. Only the validation method in the method level(=DV100=) is passed can consolidation tasks be run. 

Now that we have the data submission method definition, we can deduce how local and group accountants play with it.

*** The group accountant opens the current period for data collection
The group accountant can start the data collection for a period, usually, close to the month end. The activity can either be manually or automatically by a recurrence background job. Once opened, a data submit request with type "Collective" is inserted for each entity. Meanwhile, for each required data entry, a MonthEnd data submit request is also generated.

| PullReq | Model  | BCATE | Type |  Period | Entity | Status  | CLTIME | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+---------+--------+--------+--------|
| 0000001 | RTCCTB | FINAL | C    | 2016.01 | C100   | Initial |        | DC001  |        |
| 0000002 | RTCCTB | FINAL | M    | 2016.01 | C100   | Initial |        | DC001  |    001 |
| 0000003 | RTCCTB | FINAL | M    | 2016.01 | C100   | Initial |        | DC001  |    002 |
| 0000004 | RTCCTB | FINAL | M    | 2016.01 | C100   | Initial |        | DC001  |    003 |
| 0000005 | RTCCTB | FINAL | M    | 2016.01 | C100   | Initial |        | DC001  |    004 |

*** The local accountant submits data by packages
Once the period is opened, the local accountant can see the package in the data submit cockpit. He now first submits the AP/AR data. The AP/AR data is first validated by validation method "DV110", and then submitted by changing the status  of data submit request =0000002= to "Submitted" and record the timestamp to =CLTIME=. 
| PullReq | Model  | BCATE | Type |  Period | Entity | Status    | CLTIME              | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+-----------+---------------------+--------+--------|
| 0000001 | RTCCTB | FINAL | C    | 2016.01 | C100   | Initial   |                     | DC001  |        |
| 0000002 | RTCCTB | FINAL | M    | 2016.01 | C100   | Submitted | 2016/01/25 15:20:00 | DC001  |    001 |
| 0000003 | RTCCTB | FINAL | M    | 2016.01 | C100   | Initial   |                     | DC001  |    002 |
| 0000004 | RTCCTB | FINAL | M    | 2016.01 | C100   | Initial   |                     | DC001  |    003 |
| 0000005 | RTCCTB | FINAL | M    | 2016.01 | C100   | Initial   |                     | DC001  |    004 |

*** The group accountant check the validation result
Till now, only AP/AR data is submit, consolidation tasks cannot be run. But the group accountant can check the validation result along with the sub-package. To be in mind, BPC cannot see any data of this period for the entity. The validation is actually run in S4HANA side by invoking the validation method "DV110". Although it is the same method and produce the same result as the local accountant, but the group accountant can check the comments and attachments, and to decide whether the amount is accepted or not along with those non-amount explanations. 

~The results produced by a validation method can be overwritten with comments or attachments. For example, if rule1 is not passed, then the local accountant can write some comments and it will turn rule1 from red light to green light, so that he can still submit the data.~

If she decides to accept the data, then the data submit request status will be changed to "Approved", otherwise "Rejected". To be in mind, MonthEnd data submit request cannot be deferred. Once a data entry is approved, it is locked to forbid submit request on it again.
| PullReq | Model  | BCATE | Type |  Period | Entity | Status   | CLTIME              | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+----------+---------------------+--------+--------|
| 0000001 | RTCCTB | FINAL | C    | 2016.01 | C100   | Initial  |                     | DC001  |        |
| 0000002 | RTCCTB | FINAL | M    | 2016.01 | C100   | Approved | 2016/01/25 15:20:00 | DC001  |    001 |
| 0000003 | RTCCTB | FINAL | M    | 2016.01 | C100   | Initial  |                     | DC001  |    002 |
| 0000004 | RTCCTB | FINAL | M    | 2016.01 | C100   | Initial  |                     | DC001  |    003 |
| 0000005 | RTCCTB | FINAL | M    | 2016.01 | C100   | Initial  |                     | DC001  |    004 |

**** What happens if a MonthEnd data submit request is rejected?
Once a MonthEnd data submit request is rejected, it cannot be changed status again, and left as is. A new MonthEnd data submit request is created with status "Initial".
| PullReq | Model  | BCATE | Type |  Period | Entity | Status   | CLTIME              | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+----------+---------------------+--------+--------|
| 0000001 | RTCCTB | FINAL | C    | 2016.01 | C100   | Initial  |                     | DC001  |        |
| 0000002 | RTCCTB | FINAL | M    | 2016.01 | C100   | Rejected | 2016/01/25 15:20:00 | DC001  |    001 |
| 0000003 | RTCCTB | FINAL | M    | 2016.01 | C100   | Initial  |                     | DC001  |    002 |
| 0000004 | RTCCTB | FINAL | M    | 2016.01 | C100   | Initial  |                     | DC001  |    003 |
| 0000005 | RTCCTB | FINAL | M    | 2016.01 | C100   | Initial  |                     | DC001  |    004 |
| 0000006 | RTCCTB | FINAL | M    | 2016.01 | C100   | Initial  |                     | DC001  |    001 |

But if it is not a required MonthEnd request, then there is no new data submit request is created. 

*** The local accountant submits all the data packages
With several round-trips, finally, all the data is submitted and approved.
| PullReq | Model  | BCATE | Type |  Period | Entity | Status    | CLTIME              | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+-----------+---------------------+--------+--------|
| 0000001 | RTCCTB | FINAL | C    | 2016.01 | C100   | Initial   |                     | DC001  |        |
| 0000002 | RTCCTB | FINAL | M    | 2016.01 | C100   | Approved  | 2016/01/25 15:20:00 | DC001  |    001 |
| 0000003 | RTCCTB | FINAL | M    | 2016.01 | C100   | Rejected  | 2016/01/26 10:11:02 | DC001  |    002 |
| 0000004 | RTCCTB | FINAL | M    | 2016.01 | C100   | Submitted | 2016/01/26 11:30:40 | DC001  |    003 |
| 0000005 | RTCCTB | FINAL | M    | 2016.01 | C100   | Approved  | 2016/01/26 11:40:32 | DC001  |    004 |
| 0000006 | RTCCTB | FINAL | M    | 2016.01 | C100   | Approved  | 2016/01/26 15:36:00 | DC001  |    002 |
| 0000007 | RTCCTB | FINAL | A    | 2016.01 | C100   | Approved  | 2016/01/27 09:50:11 | DC001  |    003 |

Now that all the data entries are approved, the collective data submit request can either be submitted by local accountant and ask for approval, or directly approved by the group accountant. In either case, the validation method "DV100" will run. As this method is run on the complete set of the data, and may produce additional errors. 

| PullReq | Model  | BCATE | Type |  Period | Entity | Status    | CLTIME              | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+-----------+---------------------+--------+--------|
| 0000001 | RTCCTB | FINAL | C    | 2016.01 | C100   | Submitted | 2016/01/28 14:00:05 | DC001  |        |

Once the collective data submit request is in "Submitted" status, the data can be seen by the group accountant in BPC. She can run BPC controls in addition with validation method "DV100".

*** The group accountant decides whether to approve/reject the collective data submit request
Now data is transparent to BPC, the group accountant runs validation method "DV100", and then post some standardized journals, and run BPC controls. Based on the results, she decides:

*Option1: Approve it*. She thinks the local data is OK for consolidation, so the collective data submit request is changed to "Approved", then consolidation tasks can run on it. 
 | PullReq | Model  | BCATE | Type |  Period | Entity | Status   | CLTIME              | DCMETH | DENTRY |
 |---------+--------+-------+------+---------+--------+----------+---------------------+--------+--------|
 | 0000001 | RTCCTB | FINAL | C    | 2016.01 | C100   | Approved | 2016/01/28 14:00:05 | DC001  |        |

*Option2: Reject it*. She thinks the local data is not ready for consolidation, so the collective data submit request is changed to "Rejected". She then decides which data entries should be re-opened to allow local accountant submit adjustment requests. In this case, data entry =001= is re-opened. The the local accountant submits a adjustment data submit request.  
| PullReq | Model  | BCATE | Type |  Period | Entity | Status    | CLTIME              | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+-----------+---------------------+--------+--------|
| 0000001 | RTCCTB | FINAL | C    | 2016.01 | C100   | Rejected  | 2016/01/28 14:00:05 | DC001  |        |
| 0000002 | RTCCTB | FINAL | M    | 2016.01 | C100   | Approved  | 2016/01/25 15:20:00 | DC001  |    001 |
| 0000003 | RTCCTB | FINAL | M    | 2016.01 | C100   | Rejected  | 2016/01/26 10:11:02 | DC001  |    002 |
| 0000004 | RTCCTB | FINAL | M    | 2016.01 | C100   | Submitted | 2016/01/26 11:30:40 | DC001  |    003 |
| 0000005 | RTCCTB | FINAL | M    | 2016.01 | C100   | Approved  | 2016/01/26 11:40:32 | DC001  |    004 |
| 0000006 | RTCCTB | FINAL | M    | 2016.01 | C100   | Approved  | 2016/01/26 15:36:00 | DC001  |    002 |
| 0000007 | RTCCTB | FINAL | A    | 2016.01 | C100   | Approved  | 2016/01/27 09:50:11 | DC001  |    003 |
| 0000008 | RTCCTB | FINAL | A    | 2016.01 | C100   | Submitted | 2016/01/28 15:43:07 | DC001  |    001 |
 
Now the validation method "DV110" runs on the data that the new timestamp points to. After approved by the group accountant again, a new collective data submit request is automatically inserted and submitted. Then the loop forms,it is back to the stage of former step. And she must also re-run all the consolidation tasks.
| PullReq | Model  | BCATE | Type |  Period | Entity | Status    | CLTIME              | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+-----------+---------------------+--------+--------|
| 0000001 | RTCCTB | FINAL | C    | 2016.01 | C100   | Rejected  | 2016/01/28 14:00:05 | DC001  |        |
| 0000002 | RTCCTB | FINAL | M    | 2016.01 | C100   | Approved  | 2016/01/25 15:20:00 | DC001  |    001 |
| 0000003 | RTCCTB | FINAL | M    | 2016.01 | C100   | Rejected  | 2016/01/26 10:11:02 | DC001  |    002 |
| 0000004 | RTCCTB | FINAL | M    | 2016.01 | C100   | Submitted | 2016/01/26 11:30:40 | DC001  |    003 |
| 0000005 | RTCCTB | FINAL | M    | 2016.01 | C100   | Approved  | 2016/01/26 11:40:32 | DC001  |    004 |
| 0000006 | RTCCTB | FINAL | M    | 2016.01 | C100   | Approved  | 2016/01/26 15:36:00 | DC001  |    002 |
| 0000007 | RTCCTB | FINAL | A    | 2016.01 | C100   | Approved  | 2016/01/27 09:50:11 | DC001  |    003 |
| 0000008 | RTCCTB | FINAL | A    | 2016.01 | C100   | Approved  | 2016/01/28 15:43:07 | DC001  |    001 |
| 0000009 | RTCCTB | FINAL | C    | 2016.01 | C100   | Submitted | 2016/01/28 16:08:34 | DC001  |        |

*** The local accountant wants to submit a new adjustment request
Although data entry can be locked to forbid further data submits, but it cannot stop data entering into ACDOCA. However, the Data Submit Cockpit can censor if there are new lines entering into ACDOCA after the package is approved. If yes, then the local accountant has to ask for a re-open of the data entry. To the group accountant, she has to decide whether these new changes should be counted in this consolidation run, or defer to the next period. 

If she chooses to approve the adjustment to this period, then everything is same as the case of rejecting collective request. Or she choose to defer this adjustment to next period, then the table looks like:
| PullReq | Model  | BCATE | Type |  Period | Entity | Status    | CLTIME              | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+-----------+---------------------+--------+--------|
| 0000001 | RTCCTB | FINAL | C    | 2016.01 | C100   | Rejected  | 2016/01/28 14:00:05 | DC001  |        |
| 0000002 | RTCCTB | FINAL | M    | 2016.01 | C100   | Approved  | 2016/01/25 15:20:00 | DC001  |    001 |
| 0000003 | RTCCTB | FINAL | M    | 2016.01 | C100   | Rejected  | 2016/01/26 10:11:02 | DC001  |    002 |
| 0000004 | RTCCTB | FINAL | M    | 2016.01 | C100   | Submitted | 2016/01/26 11:30:40 | DC001  |    003 |
| 0000005 | RTCCTB | FINAL | M    | 2016.01 | C100   | Approved  | 2016/01/26 11:40:32 | DC001  |    004 |
| 0000006 | RTCCTB | FINAL | M    | 2016.01 | C100   | Approved  | 2016/01/26 15:36:00 | DC001  |    002 |
| 0000007 | RTCCTB | FINAL | A    | 2016.01 | C100   | Approved  | 2016/01/27 09:50:11 | DC001  |    003 |
| 0000008 | RTCCTB | FINAL | A    | 2016.01 | C100   | Approved  | 2016/01/28 15:43:07 | DC001  |    001 |
| 0000009 | RTCCTB | FINAL | C    | 2016.01 | C100   | Approved  | 2016/01/28 16:08:34 | DC001  |        |
| 0000010 | RTCCTB | FINAL | A    | 2016.01 | C100   | Deferred  | 2016/01/29 10:23:12 | DC001  |    004 |

The new request is changed to "Deferred" status, everything keeps same in the data submit request table. But behind, the changed amount is copied to ACDOCC, and the period is changed to the next. 
  
** Data Submit Request Status and Pseudo SQL
The status of data submit requests not only controls the data submit process, but also controls the data visibility by BPC. BPC can only see the data pointed by data submit requests which have status "Submitted" or "Approved". In other words, status code must larger equal than "30". So for those data submit requests with status "Initial" or "Rejected" or "Deferred", BPC won't see the data they point to. 
| User Status | Code |
|-------------+------|
| Initial     |   00 |
| Rejected    |   10 |
| Deferred    |   20 |
| Submitted   |   30 |
| Approved    |   40 |

#+CAPTION: Pseudo SQL that controls visibility
#+BEGIN_SRC sql
-- BPC Result View
  create view V_PULL_REQ_C as 
       select MODEL, BCATE, FYEAR, FPERI, ENTITY, max(CLTIME)
         from RTC_PULL_REQ
        where USTATUS >= 30
          and PTYPE = 'C'
     group by MODEL, BCATE, FYEAR, FPERI, ENTITY;

  create view C_RTC_FINAL_VIEWA as
       select * from C_FOUNDATION_VIEW as A
         join I_PULL_REQ_C as B
           on A.RYEAR = B.FYEAR
          and A.POPER = B.FPERI
          and A.RCOMP = B.ENTITY
          and A.TIMESTAMP <= B.CLOSE_TIME
        where B.MODEL = 'RTCCTB'
          and B.BPC_CATG = 'FINAL'
          and B.PTYPE = 'C';

-- Local Validation View for each Validation Method
  create view V_PULL_REQ_MA as 
       select MODEL, BCATE, FYEAR, FPERI, ENTITY, max(CLTIME)
         from RTC_PULL_REQ
        where USTATUS >= 30
          and (PTYPE = 'M' or PTYPE = 'A')
     group by MODEL, BCATE, FYEAR, FPERI, ENTITY;

       select * from /RTCART/RTCCTB01 as A
         join I_PULL_REQ_AR as B
           on A.RYEAR = B.FYEAR
          and A.POPER = B.FPERI
          and A.RCOMP = B.ENTITY
          and A.TIMESTAMP <= B.CLTIME
        where B.MODEL = 'RTCCTB'
          and B.BCATE = 'FINAL'
          and B.FYEAR = '2016'
          and B.FPERI = '01'
          and B.ENTITY = 'C100'
          and (<selection_where_string>);                      
#+END_SRC

There is also a business lock table for the group accountant lock certain periods to forbid local accountants raise data submit requests in the periods. The lock table should look like this:
#+CAPTION: Data Submit Request Lock Table
| Field  | Key | Description                                    |
|--------+-----+------------------------------------------------|
| MANDT  | X   | SAP Client                                     |
| MODEL  | X   | Consolidation Model                            |
| VERID  | X   | Consolidation Version ID                       |
| FYEAR  | X   | Group Fiscal Year                              |
| FPERI  | X   | Group Fiscal Period                            |
| ENTITY | X   | Consolidation Entities: Company, Profit Center |
| STATUS |     | Lock Status: 0:Open, 1:Locked                  |
| UUSER  |     | Last Activity User                             |
| UTIME  |     | Last Activity Time                             |
| ETIME  |     | Lock Effective Time                            |

If the corresponding item is not exist in the table, it means the entity in that period is not locked. The lock data is generated the first time a lock is added for an entity and its certain period.


* Data Submit Cockpit
The Data Submit Cockpit is designed for local accountants to collect data, validate data, and submit data for consolidation. However, group accountants can also use it to check, validate, and approve the local reported data.

** Data Submit Cockpit Main Screen
#+CAPTION: Data Submit Cockpit Reported Data
[[../image/DataSubmitCockpit09.png]]

The Data Submit Cockpit is divided into 3 sections: 
1. The permanent parameters in the upper area;
2. The statuses area in the middle area;
3. The package content in the lower area.

*** Permanent Parameters
The five permanent parameters are mandatory, which are used to boundary the context to:
1. A consolidation model(Dimension if it is UC-CS);
2. A consolidation version(BPC Category if it is for BPC);
3. A consolidation Entity(Consolidation Unit if it is UC-CS);
4. A group Fiscal Year;
5. A group Fiscal Period.

The 5 parameters should be filled defaultly whenever possible. The model, version, and entity can be derived from users' authorizations or the psersonlization data. Fiscal year and period can be derived from the current time and fiscal year variant. Only all the 5 parameters' value are provided, can the package status and content be shown. 
 
*** Statuses
A package is the media on which the local accountants and group accountants communicate. Once the local accountant submits his reported data, it gets validated before the data arrives at the group accountant's hand. And the group accountant can also do validations before actually executing consolidation tasks. Thus there are various statuses to state. 

1. *Package Status* indicates the stage of the data submission process;
2. *Control Status* gives the last validation result, whether it is passed or failed;
3. *Lock Status* shows if the current package is locked or not for the data submission;
4. *System Status* returns the execution status from consolidation systems,like "in processing", "failed", "successfully".
5. *Variation* detects if there is new data enterred into ACDOCA/C after the package is approved and run.

There are also 2 timestamps shown to tell users what's the last data submit request's timestamp(if has), and what will be the current data submit request's timestamp if you click the "Submit" button. Click the "Refresh" button will refesh "This Submit Time" to the latest.

*** Package Content
A package contains contents like following:
1. General financial data like FI journals;
2. Additional financial data like investment and inventory data;
3. Control result;
4. Comments and Attachments.

Sometimes, the general financial data and additional financial data can be further divided into sub-packages either because they should be supplied at different time and with different frequency, or because they would be provided by different roles. 

The submit history shows all the round-trips that could happen within a single package. It shows the differences between 2 data submissions. 

You can view the reported data in general balance sheet or income statement format. You can also view them in other formats or reports if you have defined the reporting layouts by your own. The data source mainly comes from ACDOCA and ACDOCC. You can use the standard FI posting APP to post adjustments into ACDOCA, or you change the source by flexible upload adjustments into ACDOCC. By either way you change the reported data, click the "Refresh" button you will see the changes.

The default report contains amounts of prior periods in local currency, you can also run on-the-fly currency translation to get the group currency amount. You can switch the group currency in the right-up corner. "Submitted Amount" means data already submitted in the previous submit requests. "To be Submitted" means the delta amount assigned to current to-be submitted request. The amount is calculated by the total amount minus the "Submitted Amount". 

#+CAPTION: Data Submit Cockpit Flexible Upload
[[../image/DataSubmitCockpit30.png]]

If the "Flexible Upload" button is clicked, the above dialog box will be pop-up to let you upload a CSV file which contains the general financial data. And it will be saved into ACDOCC either by appending or by replacing the existings. You can download the CSV file template to get to know the data schema. 

~The flexible upload for additional financial data should also be provided, which need further investigations.~

In the buttom, there is a tool-bar which contains main operational buttons for a package. The blue buttons are only shown for the group accountants, while the orange ones are only shown for local accountants.

** Data Submit Cockpit Sub-package
A package can be further divided into sub-packages either by different groups of accounts, or by different types of financial data. For example, account payables & account receivables are defined as a sub-package; The investment data can also be defined as a sub-package. All sub-packages together should cover the complete set of the main package, however, intersections among sub-packages are allowed.

#+CAPTION: Data Submit Cockpit Sub-package List
[[../image/DataSubmitCockpit10.png]]

The sub-package structure can be different by periods for a single entity. This is because the frequency of the data requirement is not always the same. For example, investment data may be required quarterly. Besides, even some of the sub-packages are shown for the period, if they are optional, you can still omit them. Only the required ones need to be sumbitted mandatory. 

If for a certain period there is only one sub-package defined, then the "Sub-Packages" tab will not be shown. The only one sub-package should always be the FI data in ACDOCA/C, you just submit/approve it as the representive of the main package.

Besides clicking the name of a sub-package which can navigate you to the detail page of the sub-package, you can also operate directly on the list:
1. Locked/Unlocked: click to switch between "Lock" and "Unlock".
2. Controls: click to run the control directly or open the detail page of the sub-package's control.
3. Package Status: click to pop-up a drop-down list to stitch the status. 
4. System Status: It is used to record the status of whether BPC is running consolidation tasks for the specific cons unit. The system status contains: Ready, Processing, Finished, and Failed. The status is display only. 
5. Variation: Each time a user logins Data Submit Cockpit, it detects whether there is variation till last consolidation run in the same period. Variation means data changes after consolidation is finished for the period. Click the status will navigate you to the detail of the changed data in the "Submit History" tab.

#+CAPTION: Data Submit Cockpit Sub-package Detail
[[../image/DataSubmitCockpit20.png]]

The detail page of a sub-package is exactly the same layout as the main package. Because a sub-package doesn't have the sub-sub-package again, so the "Sub-Packages" tab is never shown. But a sub-package has its own controls, own comments, own attachments, and own submit history. The reported data shown here boundaries to the sub-package's data definition. For example, for the AP/AR sub-package, it only shows the amounts of AP/AR accounts. 

You can through the breadcrumbs right underneath the permanent parameters area to navigate between the main package and sub-package. This also acts as the package headline to help you not get lost during switching between the main package and its sub-packages.

** Data Submit Cockpit Control
Both main package and its sub-packages have their own controls. However, the layout is the same. 
#+CAPTION: Data Submit Cockpit Controls
[[../image/DataSubmitCockpit11.png]]  

The control page will first show the result of last run if it has. If not, it does an initial run and give out the result which is still not persisted until you click the button "Save Result". 

Each rule result has a traffic light to state it is passed or not. Red light means failed, green light means pass. Yellow means failed but comments are provided which is then exempted. You can run a rule separated by click the icon _Run This Rule_; you can hover over the link _Detail_ to view more detail of the rule result; you can supply or read comments and attachments; and you can drop-down the drill through reports to get further investigations. 

** Data Submit Cockpit Comment
#+CAPTION: Data Submit Cockpit Comments
[[../image/DataSubmitCockpit12.png]]  

In the comment tab, you can view and leave comments. A comment can be made on a (sub-)package, a submit request, or a validation rule result. You can filter to display comments on different levels. 

If you are in the comment tab of the main package, then you can view all the comments which belong to its sub-packages, its submit requests, and its validation logs. User can filter to display. If you are in the comment tab of the sub-package, you can only view comments that belong to its submit requests and validation logs. 
** Data Submit Cockpit Attachments
#+CAPTION: Data Submit Cockpit Attachments
[[../image/DataSubmitCockpit13.png]]  

In the attachment tab, you can upload or download attachments like word, ppt, pdf, and so on. Like comments, attachments can be attached to (sub-)package, submit request, and validation log. 
 
** Data Submit Cockpit Submit History
#+CAPTION: Data Submit Cockpit Submit History 
[[../image/DataSubmitCockpit14.png]]  

In the left panel, you can view all the data submit requests related to the (sub-)package for a certain period. A data submit request is timestamp annotated. You can compare the difference between either 2 requests. In the right panel, from the drop-down box, you select the beginning. For example, you select "Opening", which is the start-point of the period, usually the first second of the period. Then you click any one of the item in the left list, it will show you the difference between the 2 timestamp. 

** Data Submit Group View
#+CAPTION: Data Submit Group View
[[../image/DataSubmitGroupView.png]]  

The group view is a report for group accountants to view the data submit status for multiple entities. They can get an overview on the statuses for a certain group node or a bunch of entities. You can click an entity to navigate to the Data Submit Cockpit, you can batch approve/reject, and you can batch lock/unlock. 

The lock supports lock/unlock in future. Which means, group accountant can schedule to lock/unlock entities for data package submitting. 


* Deduction

** 1709 With Defer
=Notes:=
1. The data submission method has no sub-packages, the data submit request type is "Collective".
2. We assume local validation is supported in 1709. 
3. Exchange rate between local currency and group currency USD is 1:1.
4. Account number is omitted for simplicity.
5. Irrelevant columns are hided for different steps. 
6. "LC" only reflects BPC's point of view.
7. The corresponding pseudo sql can be found in [[https://wiki.wdf.sap.corp/wiki/x/Ds83bQ][SDD-Consolidation Views]].

*** Scenario1: Local data comes from ACDOCA

*Step 1: Local close*: Data in ACDOCA:  
| Entity |  Period | Amount | Currency | Timestamp           |
|--------+---------+--------+----------+---------------------|
| C100   | 2016.01 |    100 | LC       | 2016/01/29 10:30:00 |

*Step 2: Open period for data collection*: the group accountant opens current period which will generate MonthEnd requests for each entity. The status in initial.
| PullReq | Status  | Entity |  Period | Timestamp |
|---------+---------+--------+---------+-----------|
| 0000001 | Initial | C100   | 2016.01 |           |

*Step 3: Submit the report data*: the local accountant submits the report data for current period. The MonthEnd request's status is changed to "Submitted", and the current timestamp is also recorded.  
| PullReq | Status    | Entity |  Period | Timestamp           |
|---------+-----------+--------+---------+---------------------|
| 0000001 | Submitted | C100   | 2016.01 | 2016/01/30 10:30:00 |

*Step 4: Approve MonthEnd data submit request*: Once a data submit request is submitted, the group accountant can see the corresponding data in BPC. She can run validation again to confirm the data is OK. The rule could be same as the local accountant's before submit, or she can run additional validation rules. If the result is OK, then the status of the data submit request is changed to "Approved".
| PullReq | Status   | Entity |  Period | Timestamp           |
|---------+----------+--------+---------+---------------------|
| 0000001 | Approved | C100   | 2016.01 | 2016/01/30 10:30:00 |

If the group accountant rejects the data for some reason, then the MonthEnd request is set to "Rejected". And a new MonthEnd request is created automatically with initial status. 
| PullReq | Status   | Entity |  Period | Timestamp           |
|---------+----------+--------+---------+---------------------|
| 0000001 | Rejected | C100   | 2016.01 | 2016/01/30 10:30:00 |
| 0000002 | Initial  | C100   | 2016.01 |                     |

*Step 5: Run consolidation tasks in BPC*: Consolidation results are posted to ACDOCC.
| DOCNR | Entity |    Time | BPC Category | Amount | Currency |
|-------+--------+---------+--------------+--------+----------|
| 10001 | C100   | 2016.01 | FINAL        |    100 | USD      |

*Step 6: Post a new adjustment document in ACDOCA*: The period is re-open after consolidation run. 
| Entity |    Time | Amount | Currency | Timestamp           |
|--------+---------+--------+----------+---------------------|
| C100   | 2016.01 |    100 | LC       | 2016/01/29 10:30:00 |
| C100   | 2016.01 |      5 | LC       | 2016/01/30 11:20:00 |

*Step 7: Raise an adjustment data submit request*: Data validation happens on the total data of period 2016.01, rather than the delta data. If passing the validation, a new data submit request is inserted.
| PullReq | Status    | Entity |  Period | Timestamp           |
|---------+-----------+--------+---------+---------------------|
| 0000001 | Approved  | C100   | 2016.01 | 2016/01/29 10:30:00 |
| 0000002 | Submitted | C100   | 2016.01 | 2016/01/30 11:20:00 |

*Step 8: Check the new submitted data:* Here, the group accountant decides whether this delta amount need to be counted into this period, or defer to next period, or just reject it and ask the local accountant submit again. 

If data is validated and approved, she can run consolidation tasks again. BPC re-runs all the consolidation tasks based on the complete data set, rather than only the new submitted delta part. But it posts only delta result to ACDOCC. 
| PullReq | Status   | Entity |  Period | Timestamp           |
|---------+----------+--------+---------+---------------------|
| 0000001 | Approved | C100   | 2016.01 | 2016/01/29 10:30:00 |
| 0000002 | Approved | C100   | 2016.01 | 2016/01/30 11:20:00 |

| DOCNR | Entity |  Period | BPC Category | Amount | Currency |
|-------+--------+---------+--------------+--------+----------|
| 10001 | C100   | 2016.01 | FINAL        |    100 | USD      |
| 10002 | C100   | 2016.01 | FINAL        |      5 | USD      |

If data is deferred, the data submit request's status is changed to "Deferred". Meanwhile, a new document is posted into ACDOCC which rollup the delta amount and has its period value changes to next period and the currency is still in local. Then, in the next period, the amount will be counted into consolidation. 
| PullReq | Status   | Entity |  Period | Timestamp           |
|---------+----------+--------+---------+---------------------|
| 0000001 | Approved | C100   | 2016.01 | 2016/01/29 10:30:00 |
| 0000002 | Deferred | C100   | 2016.01 | 2016/01/30 11:20:00 |

| DOCNR | Entity |  Period | BPC Category | Amount | Currency | PullReq |
|-------+--------+---------+--------------+--------+----------+---------|
| 10001 | C100   | 2016.01 | FINAL        |    100 | USD      |         |
| 10002 | C100   | 2016.02 | FINAL        |      5 | LC       | 0000002 |

If data is validated and rejected, the data submit request's status is change to "Rejected". Once rejected, BPC won't see the changed data again, it only can see the data which the latest "Submitted" or "Approved" data submit request points. 
| PullReq | Status   | Entity |  Period | Timestamp           |
|---------+----------+--------+---------+---------------------|
| 0000001 | Approved | C100   | 2016.01 | 2016/01/29 10:30:00 |
| 0000002 | Rejected | C100   | 2016.01 | 2016/01/30 11:20:00 |

*The data submit request id provides following usages:*
1. Flags a valid set of consolidation result lines that belongs to the last approved data submit request.
2. Finds the right timestamp when drilling through to the corresponding source journal items in ACDOCA.

*** Scenario2: Local data comes from ACDOCC
*Step 1: Flexible Upload*: Data is posted into ACDOCC using a special document type which allows to change the amounts after posting.  
| DOCNR | DTYPE | Entity |  Period | Amount | Currency |
|-------+-------+--------+---------+--------+----------|
| 10001 | FU    | C100   | 2016.01 |    100 | LC       |

*Step 2: Submit Data*: Local accountant submits a data submit request, the uploaded data is copied to a new document.

| PullReq | PTYPE | Status    | Entity |  Period | Timestamp           |
|---------+-------+-----------+--------+---------+---------------------|
| 0000001 | M     | Submitted | C100   | 2016.01 | 2016/01/30 10:30:00 |

| DOCNR | DTYPE | Entity |  Period | Amount | Currency | Timestamp           |
|-------+-------+--------+---------+--------+----------+---------------------|
| 10001 | FU    | C100   | 2016.01 |    100 | LC       |                     |
| 20001 | SC    | C100   | 2016.01 |    100 | LC       | 2016/01/30 10:30:00 |

*Step 3: Validate and check the submitted data*: The group accountant can now see the data. She decides to approve or reject it. 

If the data is approved. The data submit request's status will be set to "Approved", otherwise, "Rejected". Because it is a MonthEnd request, she cannot defer it. Now suppose the data is rejected.

| PullReq | PTYPE | Status   | Entity |  Period | Timestamp           |
|---------+-------+----------+--------+---------+---------------------|
| 0000001 | M     | Rejected | C100   | 2016.01 | 2016/01/30 10:30:00 |

*Step 4: Change amount and re-submit*: The local accountant is notified the data is not approved. He changes the amount from 100 to 105, and re-submits a MonthEnd data submit request. Only the delta amount 5 is posted to ACDOCC as a new document. 
| DOCNR | DTYPE | Entity |  Period | Amount | Currency | Timestamp           |
|-------+-------+--------+---------+--------+----------+---------------------|
| 10001 | FU    | C100   | 2016.01 |    105 | LC       |                     |
| 20001 | SC    | C100   | 2016.01 |    100 | LC       | 2016/01/30 10:30:00 |
| 20002 | SC    | C100   | 2016.01 |      5 | LC       | 2016/01/30 14:00:00 |

| PullReq | PTYPE | Status    | Entity |  Period | Timestamp           |
|---------+-------+-----------+--------+---------+---------------------|
| 0000001 | M     | Rejected  | C100   | 2016.01 | 2016/01/30 10:30:00 |
| 0000002 | M     | Submitted | C100   | 2016.01 | 2016/01/30 14:00:00 |

*Step 5: Submit an adjustment request and defer*: Now the MonthEnd request is approved, the local accountant wants to submit an adjustment. The group accountant decides to defer this adjustment to next period. 
| PullReq | PTYPE | Status   | Entity |  Period | Timestamp           |
|---------+-------+----------+--------+---------+---------------------|
| 0000001 | M     | Rejected | C100   | 2016.01 | 2016/01/30 10:30:00 |
| 0000002 | M     | Approved | C100   | 2016.01 | 2016/01/30 14:00:00 |
| 0000003 | A     | Deferred | C100   | 2016.01 | 2016/01/31 09:49:13 |

| DOCNR | DTYPE | Entity |  Period | Amount | Currency | Timestamp           |
|-------+-------+--------+---------+--------+----------+---------------------|
| 10001 | FU    | C100   | 2016.01 |    115 | LC       |                     |
| 20001 | SC    | C100   | 2016.01 |    100 | LC       | 2016/01/30 10:30:00 |
| 20002 | SC    | C100   | 2016.01 |      5 | LC       | 2016/01/30 14:00:00 |
| 20003 | SC    | C100   | 2016.02 |     10 | LC       | 2016/01/31 09:49:13 |

*** Scenario3: CT in S4, data comes from ACDOCA
*It is under the assumption that delta translation is supported.* 

*Step 1: Local close*: Data is translated and submitted. 
#+CAPTION: Data in ACDOCA 
| Entity |  Period | Amount | Currency | Timestamp           |
|--------+---------+--------+----------+---------------------|
| C100   | 2016.01 |    100 | LC       | 2016/01/28 20:10:32 |

#+CAPTION: Data in ACDOCC 
| Entity |  Period | LC Amount | LC Key | GC Amount | GC Key | Timestamp           |  PRUUID |
|--------+---------+-----------+--------+-----------+--------+---------------------+---------|
| C100   | 2016.01 |       100 | EUR    |       100 | USD    | 2016/01/29 10:30:00 | 0000001 |

#+CAPTION: Data Submit Request
| PullReq | Status    | Entity |  Period | Timestamp           |
|---------+-----------+--------+---------+---------------------|
| 0000001 | Submitted | C100   | 2016.01 | 2016/01/29 10:30:00 |

*Step 2: Approve MonthEnd data submit request*: The group accountant decides to approve or reject the request. If it is approved, only need to change the status of the data submit request. 
#+CAPTION: Data Submit Request
| PullReq | Status   | Entity |  Period | Timestamp           |
|---------+----------+--------+---------+---------------------|
| 0000001 | Approved | C100   | 2016.01 | 2016/01/29 10:30:00 |

If "Rejected". Besides setting the status, the translated results will be deleted.
#+CAPTION: Data Submit Request
| PullReq | Status   | Entity |  Period | Timestamp           |
|---------+----------+--------+---------+---------------------|
| 0000001 | Rejected | C100   | 2016.01 | 2016/01/29 10:30:00 |

#+CAPTION: Data in ACDOCC 
| Entity |  Period | LC Amount | LC Key | GC Amount | GC Key | Timestamp           |  PRUUID | DEL |
|--------+---------+-----------+--------+-----------+--------+---------------------+---------+-----|
| C100   | 2016.01 |       100 | EUR    |       100 | USD    | 2016/01/29 10:30:00 | 0000001 | X   |

*Step 3: Post adjustments and re-submit*: In case the MonthEnd request is rejected, the local accountant has to post adjustment documents in ACDOCA, and re-submit a MonthEnd request. 
#+CAPTION: Data in ACDOCA 
| Entity |  Period | Amount | Currency | Timestamp           |
|--------+---------+--------+----------+---------------------|
| C100   | 2016.01 |    100 | LC       | 2016/01/28 20:10:32 |
| C100   | 2016.01 |      5 | LC       | 2016/01/29 11:10:12 |

#+CAPTION: Data in ACDOCC 
| Entity |  Period | LC Amount | LC Key | GC Amount | GC Key | Timestamp           |  PRUUID | DEL |
|--------+---------+-----------+--------+-----------+--------+---------------------+---------+-----|
| C100   | 2016.01 |       100 | EUR    |       100 | USD    | 2016/01/29 10:30:00 | 0000001 | X   |
| C100   | 2016.01 |       105 | EUR    |       105 | USD    | 2016/01/29 11:27:01 | 0000002 |     |

#+CAPTION: Data Submit Request
| PullReq | Status    | Entity |  Period | Timestamp           |
|---------+-----------+--------+---------+---------------------|
| 0000001 | Rejected  | C100   | 2016.01 | 2016/01/29 10:30:00 |
| 0000002 | Submitted | C100   | 2016.01 | 2016/01/29 11:27:01 |

*Step 4: Submit an adjustment request*: The local accountant find a new amount and wants to submit it as an adjustment. An adjustment data submit request is inserted and a delta CT document is posted.
#+CAPTION: Data in ACDOCA 
| Entity |  Period | Amount | Currency | Timestamp           |
|--------+---------+--------+----------+---------------------|
| C100   | 2016.01 |    100 | LC       | 2016/01/28 20:10:32 |
| C100   | 2016.01 |      5 | LC       | 2016/01/29 11:10:12 |
| C100   | 2016.01 |     10 | LC       | 2016/01/30 09:23:24 |

#+CAPTION: Data in ACDOCC 
| Entity |  Period | LC Amount | LC Key | GC Amount | GC Key | Timestamp           |  PRUUID | DEL |
|--------+---------+-----------+--------+-----------+--------+---------------------+---------+-----|
| C100   | 2016.01 |       100 | EUR    |       100 | USD    | 2016/01/29 10:30:00 | 0000001 | X   |
| C100   | 2016.01 |       105 | EUR    |       105 | USD    | 2016/01/29 11:27:01 | 0000002 |     |
| C100   | 2016.01 |        10 | EUR    |        10 | USD    | 2016/01/30 09:39:45 | 0000003 |     |

#+CAPTION: Data Submit Request
| PullReq | Status    | Entity |  Period | Timestamp           |
|---------+-----------+--------+---------+---------------------|
| 0000001 | Rejected  | C100   | 2016.01 | 2016/01/29 10:30:00 |
| 0000002 | Approved  | C100   | 2016.01 | 2016/01/29 11:27:01 |
| 0000003 | Submitted | C100   | 2016.01 | 2016/01/30 09:39:45 |

*Step 5: Approve/Reject/Defer the adjustment request:* Here, the group accountant can decide whether this delta amount need to be counted into this period, or defer to next period, or just reject it and ask the local accountant submit again. 

If approved, only change the data submit request status. 
| PullReq | Status   | Entity |  Period | Timestamp           |
|---------+----------+--------+---------+---------------------|
| 0000001 | Rejected | C100   | 2016.01 | 2016/01/29 10:30:00 |
| 0000002 | Approved | C100   | 2016.01 | 2016/01/29 11:27:01 |
| 0000003 | Approved | C100   | 2016.01 | 2016/01/30 09:39:45 |

If rejected, besides change the status, the corresponding translated document is marked as deleted.
#+CAPTION: Data in ACDOCC 
| Entity |  Period | LC Amount | LC Key | GC Amount | GC Key | Timestamp           |  PRUUID | DEL |
|--------+---------+-----------+--------+-----------+--------+---------------------+---------+-----|
| C100   | 2016.01 |       100 | EUR    |       100 | USD    | 2016/01/29 10:30:00 | 0000001 | X   |
| C100   | 2016.01 |       105 | EUR    |       105 | USD    | 2016/01/29 11:27:01 | 0000002 |     |
| C100   | 2016.01 |        10 | EUR    |        10 | USD    | 2016/01/30 09:39:45 | 0000003 | X   |

#+CAPTION: Data Submit Request
| PullReq | Status   | Entity |  Period | Timestamp           |
|---------+----------+--------+---------+---------------------|
| 0000001 | Rejected | C100   | 2016.01 | 2016/01/29 10:30:00 |
| 0000002 | Approved | C100   | 2016.01 | 2016/01/29 11:27:01 |
| 0000003 | Rejected | C100   | 2016.01 | 2016/01/30 09:39:45 |

If deferred, the data submit request's status is changed to "Deferred" and the corresponding translated document is marked as deleted. Meanwhile, a new document is posted into ACDOCC which rollup the delta amount and has its period value changes to next period and the currency is still in local. Then, in the next period, the amount will be re-translated. 
#+CAPTION: Data in ACDOCC 
| Entity |  Period | LC Amount | LC Key | GC Amount | GC Key | Timestamp           |  PRUUID | DEL |
|--------+---------+-----------+--------+-----------+--------+---------------------+---------+-----|
| C100   | 2016.01 |       100 | EUR    |       100 | USD    | 2016/01/29 10:30:00 | 0000001 | X   |
| C100   | 2016.01 |       105 | EUR    |       105 | USD    | 2016/01/29 11:27:01 | 0000002 |     |
| C100   | 2016.01 |        10 | EUR    |        10 | USD    | 2016/01/30 09:39:45 | 0000003 | X   |
| C100   | 2016.02 |        10 | EUR    |        10 | LC     | 2016/01/30 10:02:31 | 0000003 |     |

#+CAPTION: Data Submit Request
| PullReq | Status   | Entity |  Period | Timestamp           |
|---------+----------+--------+---------+---------------------|
| 0000001 | Rejected | C100   | 2016.01 | 2016/01/29 10:30:00 |
| 0000002 | Approved | C100   | 2016.01 | 2016/01/29 11:27:01 |
| 0000003 | Deferred | C100   | 2016.01 | 2016/01/30 09:39:45 |

*** Scenario4: CT in S4, data comes from ACDOCC


** 1610 Without Defer
In RTC's first release(1610), data submit request will be used as both a notification and timestamp filtering. The status control in the data submit request will not be fully appeared. BPC can access the data directly in ACDOCA with timestamp filtering. The timestamp in the data submit request which is submitted by the local accountant reflects the local close time. Before the time, the data is allowed(by local accountants) for consolidation, and after the time, the data should not be counted for consolidation. 

This approach has following restrictions:

1. Once the local accountant raise the data submit request, it is approved automatically, and group accountant can only accept it. There is no embedded control on this process, group accountant must notify the local accountant externally if she doesn't want the data. 
2. Delta consolidation is still not possible. Each time the local accountant raise a new data submit request, BPC will always do a full re-consolidation based on the new timestamp. 
3. You can not defer amount to next period.
4. If consolidation is in "RUNNING" or "ERROR" status, reporting will produce data inconsistency.

I give following examples to explain detail data flow:

*** Scenario1: Local accountant submits data through flexible uploading 
*Step 1: Upload data but not submitted*: Data is saved in ACDOCC, a document number is given. The document status in in "Staging". When the user submit the data, he must choose the value of BPC category. The currency key of "CONS_SL" is set to "LC" for easy consumption for BPC. The actual currency key will be saved in HCURK. Currently, there is no data submit request created, so BPC won't see the data.

=ACDOCC=  
| DOCNR | Status  | Entity |    Time | Currency | BPC Category | Group  | FLOW  | CONS_SL | PullReq |
|-------+---------+--------+---------+----------+--------------+--------+-------+---------+---------|
| 10001 | Staging | C100   | 2016.01 | LC       | Actual       | G_NONE | INPUT |     100 |         |

*Step 2: Submit the data*: The original document status is changed to "posted". A data submit request is created and the data submit request number is set in the document lines. Now, BPC can see the data because there is a data submit request exists which will be joined in the BPC consolidation view.

=ACDOCC=
| DOCNR | Status | Entity |   FTime | Currency | BPC Category | Group  | FLOW  | Amount | PullReq |
|-------+--------+--------+---------+----------+--------------+--------+-------+--------+---------|
| 10001 | Posted | C100   | 2016.01 | LC       | Actual       | G_NONE | INPUT |    100 | 0000001 |

=RTC_PULL_REQ=
|    UUID | Type | Entity |   FTime | Category | USTATUS  |
|---------+------+--------+---------+----------+----------|
| 0000001 | C    | C100   | 2016.01 | Actual   | APPROVED |

*Step 3: Re-upload a new copy and submit*: The former submitted document will be kept as it is. A new document is  posted along with the data submit requests. Through the consolidation view, BPC will get the data of the latest data submit request for each group of Entity, Fiscal Time, and BPC Category. 
=ACDOCC=
| DOCNR | Status | Entity |   FTime | Currency | BPC Category | Group  | FLOW  | Amount | PullReq |
|-------+--------+--------+---------+----------+--------------+--------+-------+--------+---------|
| 10001 | Posted | C100   | 2016.01 | LC       | Actual       | G_NONE | INPUT |    100 | 0000001 |
| 10002 | Posted | C100   | 2016.01 | LC       | Actual       | G_NONE | INPUT |    110 | 0000002 |

=RTC_PULL_REQ=
|    UUID | Type | Entity |   FTime | Category | USTATUS  |
|---------+------+--------+---------+----------+----------|
| 0000001 | C    | C100   | 2016.01 | Actual   | APPROVED |
| 0000002 | C    | C100   | 2016.01 | Actual   | APPROVED |

*** Scenario2: Local accountant submits data in ACDOCA  
If local data is in ACDOCA, then data copy to ACDOCC is unnecessary. Only raise a data submit request with current timestamp is OK. The data submit request is then used to join with the foundation view to get the filtered data before the recored timestamp. 

=RTC_PULL_REQ=
|    UUID | Type | Entity |   FTime | Category |     CTimestamp | USTATUS  |
|---------+------+--------+---------+----------+----------------+----------|
| 0000001 | A    | C100   | 2016.01 | Actual   | 20160302100020 | APPROVED |

*** Scenario3: Local accountants run currency translation in S/4, data comes from ACDOCA 
Local accountants can run currency translation in S/4 and then do data validations. The translated results will be saved in ACDOCC. BPC cannot see the translated results until he raises a data submit request. In this case, BPC only gets data from ACDOCC rather than ACDOCA.

*Step 1: Local close*: Data in ACDOCA:  
| Entity |    Time | Currency | Amount |
|--------+---------+----------+--------|
| C100   | 2016.01 | LC       |    100 |

*Step 2: Run currency translation*: A rollup runs implicitly to create a local aggregated document. Translated results are also posted with each currency a dedicate document.
=ACDOCC=
| DOCNR | Entity |    Time | BPC Category | HSL | HCURK | CONS_SL | CONS_KEY | PullReq |
|-------+--------+---------+--------------+-----+-------+---------+----------+---------|
| 10001 | C100   | 2016.01 | Actual       | 100 | CNY   |     100 | LC       |         |
| 10002 | C100   | 2016.01 | Actual       | 100 | CNY   |      20 | USD      |         |
| 10003 | C100   | 2016.01 | Actual       | 100 | CNY   |      18 | EUR      |         |
 
*Step 3: Submit the data*: Raise a data submit request
=ACDOCC=
| DOCNR | Entity |    Time | BPC Category | HSL | HCURK | CONS_SL | CONS_KEY | PullReq |
|-------+--------+---------+--------------+-----+-------+---------+----------+---------|
| 10001 | C100   | 2016.01 | Actual       | 100 | CNY   |     100 | LC       | 0000001 |
| 10002 | C100   | 2016.01 | Actual       | 100 | CNY   |      20 | USD      | 0000001 |
| 10003 | C100   | 2016.01 | Actual       | 100 | CNY   |      18 | EUR      | 0000001 |

=RTC_PULL_REQ=
|    UUID | Type | Entity |   FTime | Category | USTATUS  |
|---------+------+--------+---------+----------+----------|
| 0000001 | C    | C100   | 2016.01 | Actual   | APPROVED |

*Step 3: Re-submit a new set of translated data*: 
=ACDOCC=
| DOCNR | Entity |    Time | BPC Category | HSL | HCURK | CONS_SL | CONS_KEY | PullReq |
|-------+--------+---------+--------------+-----+-------+---------+----------+---------|
| 10001 | C100   | 2016.01 | Actual       | 100 | CNY   |     100 | LC       | 0000001 |
| 10002 | C100   | 2016.01 | Actual       | 100 | CNY   |      20 | USD      | 0000001 |
| 10003 | C100   | 2016.01 | Actual       | 100 | CNY   |      18 | EUR      | 0000001 |
| 10004 | C100   | 2016.01 | Actual       | 100 | CNY   |     200 | LC       | 0000002 |
| 10005 | C100   | 2016.01 | Actual       | 100 | CNY   |      40 | USD      | 0000002 |
| 10006 | C100   | 2016.01 | Actual       | 100 | CNY   |      36 | EUR      | 0000002 |

=RTC_PULL_REQ=
|    UUID | Type | Entity |   FTime | Category | USTATUS  |
|---------+------+--------+---------+----------+----------|
| 0000001 | C    | C100   | 2016.01 | Actual   | APPROVED |
| 0000002 | C    | C100   | 2016.01 | Actual   | APPROVED |

*** Scenario4: Local accountants run currency translation in S/4, data comes from flexible upload 

*Step 1: Upload local data*: Data must be in posted status, or currency translation can not run on it.
=ACDOCC=  
| DOCNR | Status | Entity |    Time | BPC Category | HSL | HCURK | CONS_SL | CONS_KEY | PullReq |
|-------+--------+--------+---------+--------------+-----+-------+---------+----------+---------|
| 10001 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |     100 | LC       |         |

*Step 2: Run currency translation*: Each currency will generate a document.
=ACDOCC=
| DOCNR | Status | Entity |    Time | BPC Category | HSL | HCURK | CONS_SL | CONS_KEY | PullReq |
|-------+--------+--------+---------+--------------+-----+-------+---------+----------+---------|
| 10001 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |     100 | LC       |         |
| 10002 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |      20 | USD      |         |
| 10003 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |      18 | EUR      |         |
 
*Step 3: Submit the data*: Raise a data submit request
=ACDOCC=
| DOCNR | Status | Entity |    Time | BPC Category | HSL | HCURK | CONS_SL | CONS_KEY | PullReq |
|-------+--------+--------+---------+--------------+-----+-------+---------+----------+---------|
| 10001 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |     100 | LC       | 0000001 |
| 10002 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |      20 | USD      | 0000001 |
| 10003 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |      18 | EUR      | 0000001 |

=RTC_PULL_REQ=
|    UUID | Type | Entity |   FTime | Category | USTATUS  |
|---------+------+--------+---------+----------+----------|
| 0000001 | C    | C100   | 2016.01 | Actual   | APPROVED |

*Step 4: Re-submit a new set of translated data*: 
=ACDOCC=
| DOCNR | Status | Entity |    Time | BPC Category | HSL | HCURK | CONS_SL | CONS_KEY | PullReq |
|-------+--------+--------+---------+--------------+-----+-------+---------+----------+---------|
| 10001 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |     100 | LC       | 0000001 |
| 10002 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |      20 | USD      | 0000001 |
| 10003 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |      18 | EUR      | 0000001 |
| 10004 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |     200 | LC       | 0000002 |
| 10005 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |      40 | USD      | 0000002 |
| 10006 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |      36 | EUR      | 0000002 |

=RTC_PULL_REQ=
|    UUID | Type | Entity |   FTime | Category | USTATUS  |
|---------+------+--------+---------+----------+----------|
| 0000001 | C    | C100   | 2016.01 | Actual   | APPROVED |
| 0000002 | C    | C100   | 2016.01 | Actual   | APPROVED |
