#+PAGEID: 1829146305
#+VERSION: 28
#+STARTUP: align
#+OPTIONS: toc:1
#+TITLE: SDD-Data Release Request
* Context
A data release request represents a data submission activity done by local accountants. Usually, there is an underlying data replication step along with the submission activity. In Real-Time Consolidation, the data replication step is eliminated by only recording a timestamp (this typically stands for the financial close time). The timestamp is then used to filter in the data in the universal journal (table ACDOCA) which is before that point. 

#+CAPTION: Data Release Request
[[../image/DataSubmitRequest.png]]  

The challenge that Real-Time Consolidation faces is that consolidation needs a stable data set, while ACDOCA is time-variant. It is not feasible to stop data entering into ACDOCA, both from a business perspective and a technical perspective, if it is only for the purpose of running consolidation. Of course, data replication can solve this contradiction, but it violates the real-time principle of Real-Time Consolidation. 

The data release request is designed as a dynamic filtering, or more technically speaking, it is an SQL where-clause that filters source data. Local accountants are allowed to submit multiple requests for each entity in each period, but only the latest one is taken into account as the filter. The data before the latest recorded timestamp is fetched to the consolidation engine. The data after that timestamp is omitted for the consolidation run. However, together with group accountants, local accountants can decide how to deal with delta changes after the ;
 submit. They can decide either to re-run the consolidation to include it, or to ignore it. 

Data release requests can be divided to Periodic Release Request(PRR) and Adjustment Release Request(ARR). PRR happens recurrently on every period. ARR is raised in case there is further adjustment after the PRR is processed. If sub-package is supported, then there is also Collective Release Request(CRR) to map to the main package. *The different request types are necessary as it controls whether the Data Release Request can be deferred(PRR vs ARR), and whether certain period is completed for data releasing(CRR)*.  

** Periodic Data Release Request
Periodic Release Requests(PRR) are generated by the end of each consolidation period, either automatically or manually. Once a PRR is created for an entity, then the entity can release its local report data on the period.

#+CAPTION: Periodic Data Release Request
[[../image/MonthEndPullRequest.png]]  

There are 2 roles involved in the periodic data release process.  Following tasks are executed in a chronography order:
1. The group accountant opens the period for data release. This activity will trigger to generate Periodic Release Requests for each involved entity.
2. The local accountant can now submit the PRR. A local validation could happen along with the submission. If validation fails, submission is not allowed unless comments and adjustments are provided.
3. The group accountant checks the released report data and comments. If standardized entries are posted, she may run validation again. Then she decides whether to accept or reject the data. The approval status will be recorded on the PRR and never be changed. 
4. If the data is accepted, then the period should be locked for the entity. Consolidation tasks can be run afterwords.
5. If the data is rejected, then a new PPR is generated to allow the local accountant either to post adjustment documents in FI or provide additional comments. Then he submits the original data and changes along with the new PRR.

** Adjustment Data Release Request
Adjustment Release Requests(ARR) are created in case there are adjustments after consolidation is running or finished for the period. Unlike PRR, ARR is created by local accountants after the PRR of current period is approved. Another significant difference of ARR is that it supports "Defer" option, which copies the pointed delta amounts to the next period.
 
#+CAPTION: Adjustment Data Release Request
[[../image/AdjustmentPullRequest.png]]  

1. The local accountant finds there is new data entering into ACDOCA for the period which consolidation is already run. He then contacts the group accountant for this situation, and request unlock of the period to include this new data into current period consolidation.
2. The group accountant unlocks the period so that local accountant can raise an Adjustment Release Request.
3. The local accountant can either do additional postings or provide some comments, and then raise an ARR to submit the new data.
4. The group accountant then checks and validates the data, and can do one of the following decisions:
5. Accept the ARR and re-run all the consolidation tasks;
6. Reject the ARR, however the local accountant will raise again with new adjustments/comments.
7. Defer the ARR, the delta amount is copied to the next period. During consolidation for the next period, these amounts will be taken into account.

** Collective Data Release Request
If the Data Release Method is configured with multiple sub-packages, then each sub-package has its own PRR and ARR, besides, a Collective Release Request is generated to map to the main package which includes all the sub-packages data. 

Data release and validation can be specified to each sub-package, however, consolidation will run based on the latest Data Release Request no matter what type the request is. For example, request 1 is for sub-package A, which is earlier than request 2 for sub-package B, then the consolidation system takes the timestamp of request 2, and can see both data of sub-package A and B. 

But from the Data Release Cockpit view, if there is Collective Release Request not accepted for certain entity in certain period, then it indicates data inconsistency. Consolidation engine(like BPC) may not be aware of this. The group accountant is notified for such data inconsistency when she opens the group view of Data Release(aka, Consolidation Data Mass Approval).

** Comparison with On-the-Fly consolidation.
The data release request approach is built on the conclusion that local accountants have the right to decide when and which data should be reported to the group accountants. If no data release request is raised by local accountants, then the group accountant is not allowed to pull the data from local company, even technically, the data is already in the central system. 

The data release request is somehow conflict with the on-the-fly consolidation in business duties. As on-the-fly means it always reads the latest data in the central system. Group accountants access the local data without local accountants' permission. _But that doesn't mean data release request can't co-exist with On-the-Fly_. 

We use data release request approach to process the legal period end consolidation statements, which requires more on data precise, security, and clear duties. Each period, a consolidated result will be generated. The On-the-Fly consolidation statements always runs on the latest data basis which only extract current period data in ACDOCA, combines with the last periods' consolidated results in ACDOCC, will form a full consolidated picture at anytime.
   
** Overall Data Flow
The overall data flow show how the data is collected and released to the consolidation system(BPC).  
#+CAPTION: Data Flow of Data Submission
[[../image/DataFlowOverview.png]]  

1. Data comes from the local finance systems through Central Finance's real-time data replication. Data streams could be validated at document level according to rules defined in the central system, and saved in the central journal table ACDOCA.
2. As not all the subsidiaries are involved in the central finance's landscape, those who can only provide their financial data through spreadsheets submit via "Flexible Upload". The data will first be saved in a staging area before taking into the consolidation system.
3. Only if the local accountant raises a data release request can the group accountant pull the data from ACDOCA or copy data from staging area to ACDOCC. You can regard a data release request as a SQL where-clause which can be applied on ACDOCA or ACDOCC to filter the data. As data in ACDOCA is time-vary, so a timestamp is used for filter-in data before it. Thus a snapshot is taken which forms a "Reported Data View".
4. Both local and group accountants can run totals validation on the "Reported Data View". When run totals validation, it also requires the consolidated results from the former periods, as well as the adjustments that posted by group accountants are also in ACDOCC.
5. If the validation is passed, consolidation tasks can be run. Till now, the data handover from the local accountants to the group accountants is finished. If the validation is not passed, adjustments should be done by the local accountant, who needs to re-open the period and post adjustment documents or provide comments. He should then raise a data release request again so that the group accountant is notified and run validation on the adjusted data.
6. There are multiple consolidation views created based on ACDOCA and ACDOCC. How many views and how they would be created depends on different use cases. But those views can be generally categorized into 2 categories: 1)Real-time data for preliminary consolidations, 2)Data filtered by release request for final consolidation. 


* Design
Data release requests are raised and saved in the central system. Each time, if the local accountant wants to submit his reported financial data, he must raise a data release request. The group accountant will then be notified, and can use the information in the data release request to pull data from ACDOCA/C.

** Data Release Request Table Design
The data release request table is actually hold filter information that is used to filter in data which is relevant for the consolidation. The mandatory filter dimension is timestamp which is used to point out the lines in ACDOCA. Besides, you can also filter at other dimensions, usually the account dimension, so that you can submit data by packages. 

#+CAPTION: Data Release Request Table
| Field     | Key | Description                    |
|-----------+-----+--------------------------------|
| MANDT     | X   | SAP Client                     |
| PRUUID    | X   | Data Release Request UUID      |
| MODEL     |     | Consolidation Model            |
| VERID     |     | Version ID                     |
| BPC_CATG  |     | BPC Category(BPC)              |
| FYEAR     |     | Fiscal Year                    |
| FPERI     |     | Fiscal Period                  |
| ENTITY    |     | Consolidation Entities         |
| DR_METHOD |     | Data Release Method            |
| DR_PKG    |     | Data Release Sub-package       |
| DSR_TYPE  |     | Data Release Request Type      |
| RTIME     |     | Data Release Cut-off Timestamp |
| USTATUS   |     | User Status                    |
| SSTATUS   |     | System Status                  |
| DIMEN     |     | Dimension(UC-CS)               |
| RVERS     |     | Version for Data Entry(UC-CS)  |
| BUNIT     |     | Consolidation Unit(UC-CS)      |
| DELFLG    |     | Deletion Flag                  |
| CREATEDBY |     | Created by                     |
| CREATEDAT |     | Time Created                   |
| CHANGEDBY |     | Changed by                     |
| CHANGEDAT |     | Time Changed                   |

1. Data release request is client dependent(=MANDT=).
2. There is a unique ID(=PRUUID=) for each data release request in UUID format.
3. Data release request is also grouped by consolidation model(=MODEL=) and versions(=VERID=). In case integrated with BPC, =BPC_CATE= is used to store the BPC category.
4. Data release request is also grouped by fiscal year(=FYEAR=), period(=FPERI=), and entity(=ENTITY=).
5. A Data Release Method must be assigned to a data release request so that it can maps the data package meta data definition. For data release requests with type "PRR" and "ARR", a package ID is also needed.
6. Each data release request must have a timestamp(=RTIME=) assigned which stands for the cut-off timestamp when the data is release. And it is that timestamp which is used to filter in lines in ACDOCA who have timestamp value before it.
7. There are 3 types(=DSR_TYPE=) of data release request: 1) "Collective" means the data release request contains sub-packages; 2) "Periodic" means a regular mandatory data release request for each period; 3) "Adjustment" is for adjustment on the periodic data.
8. User status(=USTATUS=) are statuses from user perspective. It is used to control the data submit process and the data visibility.
9. System status(=SSTATUS=) are statuses from system perspective. For example, when a data release request is approved, the data is ready for consolidation tasks. But if system errors happen during tasks' run, then the system status is set to "Error". And when the tasks are in "Running" status, you cannot submit further requests.
10. =DIMEN=, =RVERS=, and =BUNIT= are only used for UC-CS, which are corresponding to the Model, consolidation version, and consolidation entity.
11. Audit information like who(=CREATEDBY= and =CHANGEDBY=) and when(=CREATEDAT= and =CHANGEDAT=) create it or update it is also attached.

** Data Release Method and Data Release Request 
Data Release Method is the meta to control how local data is released. You can divide the package into sub-packages which can be released separately. Data Release Requests are generated according to the definition of Data Release Method. For example, I define a Data Release Method as following:

#+CAPTION: Method Header
| Model  | Method | Type | Desc.                       | EMode      | VM    |
|--------+--------+------+-----------------------------+------------+-------|
| RTCCTB | DR001  | DR   | Data collection from ACDOCA | Sequential | DV100 |

#+CAPTION: Method Steps
| Model  | Method | Step ID | Desc.            | Seq. | Stream Type | Selection | VM    | Freq. |
|--------+--------+---------+------------------+------+-------------+-----------+-------+-------|
| RTCCTB | DR001  |     001 | AP/AR            |    1 | FI_JOURNAL  | $AP_AR    | DV110 |     1 |
| RTCCTB | DR001  |     002 | Equity&Liability |    3 | FI_JOURNAL  | $EQU_LIAB | DV130 |     1 |
| RTCCTB | DR001  |     003 | Profit&Loss      |    4 | FI_JOURNAL  | $P_L      | DV140 |     1 |
| RTCCTB | DR001  |     004 | Investment       |    5 | INVESTMENT  |           | DV150 |     3 |

All data release methods are in sequential execution mode, but actually the sequence is not strictly applied during runtime, it only affects the display order in the UI. The method "DR001" has 4 steps with each a data stream type is assigned to indicate the consolidation view. You can also assign a selection to a step to further boundary the data. From business perspective, each step is corresponding to a data entry that represents a subset of the local data, which is so-called sub-package.

You can assign a validation method to each sub-package, which should only contain rules that apply to the sub-package. You should also assign a validation method on the main package level, that is on the method header level. Frequency is assigned to each sub-package to tell on which frequency local accountants should provide the data. The example shows the previous 3 sub-package should be provided every period, the last one should be provided quarterly.

The sub-packages have no tent to cover the complete set of the reported data, nor need to avoid intersections. It is only defined for the reason that you can validate and submit separately for a subset of the data. You don't have to submit the sub-packages one by one, you can directly provide all the data and submit all together.

Let's try to deduce how local and group accountants play with it.

*** The group accountant opens the current period for data collection
The group accountant can start the data collection for a period, usually, close to the month end. The activity can either be manually or automatically by a recurrence background job. Once opened, a data release request with type "CRR" is inserted for each entity, meanwhile, for each sub-package, a PRR is also generated.

| PullReq | Model  | BCATE | Type |  Period | Entity | Status  | RTIME | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+---------+-------+--------+--------|
| 0000001 | RTCCTB | FINAL | CRR  | 2016.01 | C100   | Initial |       | DR001  |        |
| 0000002 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Initial |       | DR001  |    001 |
| 0000003 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Initial |       | DR001  |    002 |
| 0000004 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Initial |       | DR001  |    003 |
| 0000005 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Initial |       | DR001  |    004 |

*** The local accountant submits a sub-package
Once the period is opened, the local accountant can see the package in the data release cockpit. He now first submits the AP/AR data. The AP/AR data is first validated by validation method "DV110", and then released by changing the status of data release request =0000002= to "Released" and record the timestamp to =RTIME=. 
| PullReq | Model  | BCATE | Type |  Period | Entity | Status    | RTIME               | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+-----------+---------------------+--------+--------|
| 0000001 | RTCCTB | FINAL | CRR  | 2016.01 | C100   | Initial   |                     | DR001  |        |
| 0000002 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Released | 2016/01/25 15:20:00 | DR001  |    001 |
| 0000003 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Initial   |                     | DR001  |    002 |
| 0000004 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Initial   |                     | DR001  |    003 |
| 0000005 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Initial   |                     | DR001  |    004 |

*** The group accountant checks the validation result
Till now, only AP/AR data is submit. In the BPC's consolidation monitor, the status is changed to "_To be Reviewed_". The group accountant can check the validation result of the AP/AR sub-package. She can also post standardized journal entries and run validation again. Validation in BPC's side can share the same rules with S/4 side. Thus it is not necessary to setup duplicate rules in BPC's control. The group accountant can check the comments/attachments from local accountants' submits, and/or re-run validations if standardized entries are posted. Then she can decide whether to approve or reject the sub-package. 

~The results produced by a validation method can be overwritten with comments/attachments. For example, if rule1 is not passed, then the local accountant can write some comments and it will turn rule1 from red light to green light, so that he can still submit the data.~

If she approves the sub-package, then the data release request status will be changed to "Approved", otherwise "Rejected". To be in mind, PRR cannot be deferred. Once a sub-package is approved, it is locked to forbid release requests on it again. The status in BPC's consolidation monitor will be changed to "_To be Executed_". Then if consolidation tasks are clicked to run, it should run only on the data that are already released. In case there are multiple sub-packages released and approved, then each sub-package should be filtered for its own latest release timestamp, and consolidation runs on the union set of the released sub-packages. 

=BPC cannot deal with sub-packages. So, actually, it will run on all the data before the timestamp of the sub-package. Although it is not a big deal, as BPC can always re-run tasks, anyway it produces confusion.=  

*In 1709, submitting Sub-packages is not supported.*

| PullReq | Model  | BCATE | Type |  Period | Entity | Status   | RTIME               | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+----------+---------------------+--------+--------|
| 0000001 | RTCCTB | FINAL | CRR  | 2016.01 | C100   | Initial  |                     | DR001  |        |
| 0000002 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Approved | 2016/01/25 15:20:00 | DR001  |    001 |
| 0000003 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Initial  |                     | DR001  |    002 |
| 0000004 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Initial  |                     | DR001  |    003 |
| 0000005 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Initial  |                     | DR001  |    004 |

**** What happens if a data release request is rejected?
If the data is not qualified after validation, then she rejects it. Once a PRR is rejected, it cannot be changed again, instead, a new PRR is created with status "Initial". 
| PullReq | Model  | BCATE | Type |  Period | Entity | Status   | RTIME               | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+----------+---------------------+--------+--------|
| 0000001 | RTCCTB | FINAL | CRR  | 2016.01 | C100   | Initial  |                     | DR001  |        |
| 0000002 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Rejected | 2016/01/25 15:20:00 | DR001  |    001 |
| 0000003 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Initial  |                     | DR001  |    002 |
| 0000004 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Initial  |                     | DR001  |    003 |
| 0000005 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Initial  |                     | DR001  |    004 |
| 0000006 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Initial  |                     | DR001  |    001 |

Next time, the local accountant submits data again, the standardized entries posted by the group accountant will also be included. 

*** The local accountant releases the main package
After several round-trips, the local accountant thinks that the whole package is ready to release. Then he click the submit button on the main package level, which will trigger a validation run firstly on all sub-packages' level, then on the header level. 

It is not *mandatory* to submit all the sub-packages before releasing the main package. You can just release the main package without care about the status of sub-packages. However, when releasing the main package, validation methods on sub-package level will also be invoked. If any error happens, it will block the releasing. 

~For example, if you want sub-package "Investment" should be mandatory, then you define a rule to check the number of rows of the data. If the result is zero, the rule is failed, which forbids you to submit the main package.~

| PullReq | Model  | BCATE | Type |  Period | Entity | Status    | RTIME               | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+-----------+---------------------+--------+--------|
| 0000001 | RTCCTB | FINAL | CRR  | 2016.01 | C100   | Released | 2016/01/28 14:00:05 | DR001  |        |
| 0000002 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Approved  | 2016/01/25 15:20:00 | DR001  |    001 |
| 0000003 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Rejected  | 2016/01/26 10:11:02 | DR001  |    002 |
| 0000004 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Released | 2016/01/26 11:30:40 | DR001  |    003 |
| 0000005 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Initial   | 2016/01/26 11:40:32 | DR001  |    004 |
| 0000006 | RTCCTB | FINAL | PRR  | 2016.01 | C100   | Initial   | 2016/01/26 15:36:00 | DR001  |    002 |
| 0000007 | RTCCTB | FINAL | ARR  | 2016.01 | C100   | Approved  | 2016/01/27 09:50:11 | DR001  |    003 |

The Data Release Cockpit only takes care of the status of CRR, those sub-packages' statuses won't hinder any processes. 

*** The group accountant decides whether to approve/reject the main package
Now that the whole data is presented to BPC, the group accountant posts some standardized entries and/or runs controls. Based on the control results, she decides:

*Option1: Approve it*. She thinks the local data is OK for consolidation, so the collective data release request is changed to "Approved", then consolidation tasks can run on it. Once approved, the main package is locked. 
 | PullReq | Model  | BCATE | Type |  Period | Entity | Status   | RTIME               | DCMETH | DENTRY |
 |---------+--------+-------+------+---------+--------+----------+---------------------+--------+--------|
 | 0000001 | RTCCTB | FINAL | CRR  | 2016.01 | C100   | Approved | 2016/01/28 14:00:05 | DR001  |        |

*Option2: Reject it*. She thinks the local data is not ready for consolidation, so the collective data release request is changed to "Rejected". Meanwhile, a new CRR is created automatically and the period is unlocked so that the local accountant can release again.     
| PullReq | Model  | BCATE | Type |  Period | Entity | Status   | RTIME               | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+----------+---------------------+--------+--------|
| 0000001 | RTCCTB | FINAL | CRR  | 2016.01 | C100   | Rejected | 2016/01/28 14:00:05 | DR001  |        |
| 0000008 | RTCCTB | FINAL | CRR  | 2016.01 | C100   | Initial  |                     | DR001  |        |
 
The local accountant has to re-submit a new CRR, as it is mandatory at least one approved CRR for each period. Before re-submitting, he can view comments that the group accountant provided. Under the advice, he post adjustments and/or provide additional comments, then submit again. 
| PullReq | Model  | BCATE | Type |  Period | Entity | Status    | RTIME               | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+-----------+---------------------+--------+--------|
| 0000001 | RTCCTB | FINAL | C    | 2016.01 | C100   | Rejected  | 2016/01/28 14:00:05 | DR001  |        |
| 0000008 | RTCCTB | FINAL | C    | 2016.01 | C100   | Released | 2016/01/28 16:08:34 | DR001  |        |

*** The local accountant wants to submit an adjustment request
Although package can be locked to forbid further data releases, but it cannot stop data entering into ACDOCA. However, the Data Release Cockpit can censor if there are new lines entering into ACDOCA after the package is approved. If yes, then the local accountant has to ask for an unlock of the package. To the group accountant, she has to decide whether these new changes should be counted in this consolidation run, or defer to the next period. 

If she chooses to approve the adjustment to this period, then everything is same as the case of PRR. Or she chooses to defer this adjustment to the next period, then the table looks like:
| PullReq | Model  | BCATE | Type |  Period | Entity | Status   | RTIME               | DCMETH | DENTRY |
|---------+--------+-------+------+---------+--------+----------+---------------------+--------+--------|
| 0000001 | RTCCTB | FINAL | CRR  | 2016.01 | C100   | Rejected | 2016/01/28 14:00:05 | DR001  |        |
| 0000008 | RTCCTB | FINAL | CRR  | 2016.01 | C100   | Approved | 2016/01/28 16:08:34 | DR001  |        |
| 0000009 | RTCCTB | FINAL | ARR  | 2016.01 | C100   | Deferred | 2016/01/29 10:23:12 | DR001  |        |

The new request is changed to "Deferred" status, everything keeps same in the data release request table. But behind, the changed amounts are copied to ACDOCC with the period changed to the next.

*Only adjustment on main package level can be deferred to next period. Sub-package doesn't support defer.* 

What happens if there is another adjustment request released after deferring? If the group accountant decides defer again, then still the delta amounts are copied to next period. But if the group accountant wants to counted to the this period, then the former copied amounts must be marked as deleted. 

*** Periodically automatically deferring variations
After consolidation is finished for a period, there is still possibility that data is changed in ACDOCA and it is not released to group accountants. In this case, the local data and consolidated data of prior consolidated periods is inconsistent. To avoid this, either a background job or an event triggering when opening a new period will automatically defer these changes to the coming period. 
 
** Data Release Request Status and Pseudo SQL
The status of data release requests not only controls the data release process, but also controls the data visibility by BPC. BPC can only see the data pointed by data release requests which have status "Released" or "Approved". In other words, status code must larger equal than "30". So for those data release requests with status "Initial" or "Rejected" or "Deferred", BPC won't see the data they point to. 
#+CAPTION: Status Code
| User Status | Code |
|-------------+------|
| Initial     |   00 |
| Cancel      |   01 |
| Rejected    |   10 |
| Deferred    |   20 |
| Released    |   30 |
| Approved    |   40 |

#+CAPTION: Pseudo SQL that controls visibility
#+BEGIN_SRC sql
-- BPC Result View
  create view V_PULL_REQ_C as 
       select MODEL, BCATE, FYEAR, FPERI, ENTITY, max(RTIME)
         from RTC_PULL_REQ
        where USTATUS >= 30
     group by MODEL, BCATE, FYEAR, FPERI, ENTITY;

  create view C_RTC_FINAL_VIEWA as
       select * from C_FOUNDATION_VIEW as A
         join V_PULL_REQ_C as B
           on A.RYEAR = B.FYEAR
          and A.POPER = B.FPERI
          and A.RCOMP = B.ENTITY
          and A.TIMESTAMP <= B.CLOSE_TIME
        where B.MODEL = 'RTCCTB'
          and B.BPC_CATG = 'FINAL';

-- Local Validation View for each Validation Method
  create view V_PULL_REQ_MA as 
       select MODEL, BCATE, FYEAR, FPERI, ENTITY, max(RTIME)
         from RTC_PULL_REQ
        where USTATUS >= 30
     group by MODEL, BCATE, FYEAR, FPERI, ENTITY;

       select * from /RTCART/RTCCTB01 as A
         join I_PULL_REQ_AR as B
           on A.RYEAR = B.FYEAR
          and A.POPER = B.FPERI
          and A.RCOMP = B.ENTITY
          and A.TIMESTAMP <= B.RTIME
        where B.MODEL = 'RTCCTB'
          and B.BCATE = 'FINAL'
          and B.FYEAR = '2016'
          and B.FPERI = '01'
          and B.ENTITY = 'C100'
          and (<selection_where_string>);                      
#+END_SRC
If the local accountant releases the DRR by mistake, then he can retrieve the DRR(Change it to Initial) only if the group accountant hasn't Approve/Reject/Defer it. 

If the group accountant Approve/Reject/Defer a DRR by mistake, she can still switch among these 3 statuses if consolidation tasks have not run. So the system status should be taken into account to decide whether the status switch is possible. 

| System Status | Code       |
|---------------+------------|
|             0 | INITIAL    |
|             1 | READY      |
|             2 | WAITING    |
|             3 | PROCESSING |
|             4 | SUCCESS    |
|             5 | ERROR      |

Only system status is less than 2 can the group accountant switch the status, and only for the last DRR. Even though, following cases should be considered separately:

*** Approve -> Reject
1. If it is a PRR/CRR, then change the request to "Reject" and create a new PRR/CRR with "Initial";
2. If it is an ARR, then change then ARR to "Reject".

*** Approve -> Defer
1. CRR/PRR cannot be deferred;
2. If it is an ARR, then change the ARR to "Deferred", and copy the delta amounts to the next period.

*** Reject -> Approve
1. If it is a PRR/CRR, then change the request to "Approved" and change the existing "Initial" to "Cancel";
2. If it is an ARR, then change the ARR to "Approved".

*** Reject -> Defer
1. CRR/PRR cannot be deferred;
2. If it is an ARR, then change the ARR to "Deferred", and copy the delta amounts to the next period.

*** Defer -> Approve
Only ARR has the "Deferred" Status. Besides change the status to "Approved", the corresponding deferred documents should be marked as deleted.   

*** Defer -> Reject
Only ARR has the "Deferred" Status. Besides change the status to "Approved", the corresponding deferred documents should be marked as deleted. 

*** Initial -> Cancel
Only "Initial" request can be canceled. For PRR/CRR, if there is no prior "Released/Approved" PRR/CRR, it cannot be canceled. 

** Data Release Lock
There is also a business lock table for the group accountant lock certain periods to forbid local accountants raise data release requests in the periods. The lock table should look like this:
#+CAPTION: Data Release Request Lock Table
| Field     | Key | Description                                    |
|-----------+-----+------------------------------------------------|
| MANDT     | X   | SAP Client                                     |
| MODEL     | X   | Consolidation Model                            |
| VERID     | X   | Consolidation Version ID                       |
| FYEAR     | X   | Group Fiscal Year                              |
| FPERI     | X   | Group Fiscal Period                            |
| ENTITY    | X   | Consolidation Entities: Company, Profit Center |
| DR_METHOD | X   | Data Release Method                            |
| DR_PKG    | X   | Data Release Package                           |
| STATUS    |     | Lock Status: 0:Open, 1:Locked                  |
| ETIME     |     | Lock Effective Time                            |
| UUSER     |     | Last Activity User                             |
| UTIME     |     | Last Activity Time                             |
| BPC_CATG  |     | BPC Category                                   |

If the corresponding item is not exist in the table, it means the entity in that period is not locked. The lock data is generated the first time a lock is added for an entity and its certain period.


* Data Release Cockpit
The Data Release Cockpit is designed for local accountants to collect data, validate data, and submit data for consolidation. However, group accountants can also use it to check, validate, and approve the local reported data.

** Data Release Cockpit Main Screen
#+CAPTION: Data Release Cockpit Reported Data
[[../image/DataSubmitCockpit09.png]]

The Data Release Cockpit is divided into 3 sections: 
1. The permanent parameters in the upper area;
2. The statuses area in the middle area;
3. The package content in the lower area.

*** Permanent Parameters
The five permanent parameters are mandatory, which are used to boundary the context to:
1. A consolidation model(Dimension if it is UC-CS);
2. A consolidation version(BPC Category if it is for BPC);
3. A consolidation Entity(Consolidation Unit if it is UC-CS);
4. A group Fiscal Year;
5. A group Fiscal Period.

The 5 parameters should be filled by default whenever possible. The model, version, and entity can be derived from users' authorizations or the personalization data. Fiscal year and period can be derived from the current time and fiscal year variant. Only all the 5 parameters' value are provided, can the package status and content be shown. 
 
*** Statuses
A package is the media on which the local accountants and group accountants communicate. Once the local accountant submits his reported data, it gets validated before the data arrives at the group accountant's hand. And the group accountant can also do validations before actually executing consolidation tasks. Thus there are various statuses to state. 

1. *Package Status* indicates the stage of the data submission process;
2. *Control Status* gives the last validation result, whether it is passed or failed;
3. *Lock Status* shows if the current package is locked or not for the data submission;
4. *System Status* returns the execution status from consolidation systems,like "in processing", "failed", "successfully";
5. *Need Commit* will be shown if there is new changes in the staging area(via Flexible Upload) not commit to the formal area(with posting level equals "00");
6. *Variation* detects if there is new data entered into ACDOCA/C after the package is approved and run.

There are also 2 timestamps shown to tell users what's the last data release request's timestamp(if has), and what will be the current data release request's timestamp if you click the "Submit" button. Click the "Refresh" button will refresh "This Submit Time" to the latest.

*** Package Content
A package contains contents like following:
1. General financial data like FI journals;
2. Additional financial data like investment and inventory data;
3. Control result;
4. Comments and Attachments.

Sometimes, the general financial data and additional financial data can be further divided into sub-packages either because they should be supplied at different time and with different frequency, or because they would be provided by different roles. 

The submit history shows all the round-trips that could happen within a single package. It shows the differences between 2 data submissions. 

You can view the reported data in general balance sheet or income statement format. You can also view them in other formats or reports if you have defined the reporting layouts by your own. The data source mainly comes from ACDOCA and ACDOCC. You can use the standard FI posting APP to post adjustments into ACDOCA, or you change the source by flexible upload adjustments into ACDOCC. By either way you change the reported data, click the "Refresh" button you will see the changes.

The default report contains amounts of prior periods in local currency, you can also run on-the-fly currency translation to get the group currency amount. You can switch the group currency in the right-up corner. "Released Amount" means data already released in the previous submit requests. "To be Released" means the delta amount assigned to current to-be released request. The amount is calculated by the total amount minus the "Released Amount". 

#+CAPTION: Data Release Cockpit Flexible Upload and Commit
[[../image/DataSubmitCockpit30.png]]

If the "Flexible Upload" button is clicked, the above dialog box will be pop-up to let you upload a CSV file which contains the general financial data. And it will be saved into ACDOCC either by appending or by replacing the existing. You can download the CSV file template to get to know the data schema. 

Once you entered the CSV file path&name, you can choose to click "Upload" or "Upload and Commit". "Upload" means the data will be saved the staging area; "Upload and Commit" means besides staging the changes, it will also post a document contains the changed amounts. So simply update the staging area will not take effect, only after you commit the changes. 

Then if you click "Upload", the changed amounts will be listed bellow, you can then choose to whether commit right now, or leave it for a later commit. 
  
~The flexible upload for additional financial data should also be provided, which need further investigations.~

*** Tool Bar
In the bottom, there is a tool-bar which contains main operational buttons for a package. The blue buttons are only shown for the group accountants, while the orange ones are only shown for local accountants.

** Data Release Cockpit Sub-package
A package can be further divided into sub-packages either by different groups of accounts, or by different types of financial data. For example, account payables & account receivables are defined as a sub-package; The investment data can also be defined as a sub-package. All sub-packages together should cover the complete set of the main package, however, intersections among sub-packages are allowed.

#+CAPTION: Data Release Cockpit Sub-package List
[[../image/DataSubmitCockpit10.png]]

The sub-package structure can be different by periods for a single entity. This is because the frequency of the data requirement is not always the same. For example, investment data may be required quarterly. If for a certain period there is only one sub-package defined, then the "Sub-Packages" tab will not be shown. The only one sub-package should always be the FI data in ACDOCA/C, you just submit/approve it as the Representative of the main package.

Besides clicking the name of a sub-package which can navigate you to the detail page of the sub-package, you can also operate directly on the list:
1. Controls: click to run the control directly or open the detail page of the sub-package's control.
2. Package Status: click to pop-up a drop-down list to stitch the status. 
3. System Status: It is used to record the status of whether BPC is running consolidation tasks for the specific cons unit. The system status contains: Ready, Processing, Finished, and Failed. The status is display only. 
4. Variation: Each time a user logins Data Release Cockpit, it detects whether there is variation till last consolidation run in the same period. Variation means data changes after consolidation is finished for the period. Click the status will navigate you to the detail of the changed data in the "Submit History" tab.

=In the 1709 release, sub-packages can not be released, so "Package Status","System Status", and "Variation" are hidden=

#+CAPTION: Data Release Cockpit Sub-package Detail
[[../image/DataSubmitCockpit20.png]]

The detail page of a sub-package is exactly the same layout as the main package in the exceptions as bellow:
1. A sub-package inherit lock status from the main package;
2. A sub-package doesn't have the sub-sub-package again, so the "Sub-Packages" tab is never shown;
3. A sub-package has its own controls, own comments, own attachments, and own submit history. The reported data shown here boundaries to the sub-package's data definition. For example, for the AP/AR sub-package, it only shows the amounts of AP/AR accounts. 

=In the 1709 release, sub-packages can not be released, so "Package Status","System Status", and "Variation" are hidden=

You can through the breadcrumbs right underneath the permanent parameters area to navigate between the main package and sub-package. This also acts as the package headline to help you not get lost during switching between the main package and its sub-packages.

** Data Release Cockpit Control
Both main package and its sub-packages have their own controls with the same display layout. 
#+CAPTION: Data Release Cockpit Controls
[[../image/DataSubmitCockpit11.png]]  

The control page will first show the result of last run if it has. If not, it does an initial run and give out the result which is still not persisted until you click the button "Save Result". 

Each rule result has a traffic light to state it is passed or not. Red light means failed, green light means pass. Yellow means failed but comments are provided which is then exempted. You can run a rule separated by click the icon _Run This Rule_; you can hover over the link _Detail_ to view more detail of the rule result; you can supply or read comments and attachments; and you can drop-down the drill through reports to get further investigations. 

** Data Release Cockpit Comment
#+CAPTION: Data Release Cockpit Comments
[[../image/DataSubmitCockpit12.png]]  

In the comment tab, you can view and leave comments. A comment can be made on a (sub-)package, a submit request, or a validation rule result. You can filter to display comments on different levels. 

If you are in the comment tab of the main package, then you can view all the comments which belong to its sub-packages, its submit requests, and its validation logs. User can filter to display. If you are in the comment tab of the sub-package, you can only view comments that belong to its submit requests and validation logs. 
** Data Release Cockpit Attachments
#+CAPTION: Data Release Cockpit Attachments
[[../image/DataSubmitCockpit13.png]]  

In the attachment tab, you can upload or download attachments like word, ppt, pdf, and so on. Like comments, attachments can be attached to (sub-)package, submit request, and validation log. 
 
** Data Release Cockpit Submit History
#+CAPTION: Data Release Cockpit Submit History 
[[../image/DataSubmitCockpit14.png]]  

In the left panel, you can view all the data release requests related to the (sub-)package for a certain period. A data release request is timestamp annotated. You can compare the difference between either 2 requests. In the right panel, from the drop-down box, you select the beginning. For example, you select "Opening", which is the start-point of the period, usually the first second of the period. Then you click any one of the item in the left list, it will show you the difference between the 2 timestamp. 

** Data Submit Group View
#+CAPTION: Data Submit Group View
[[../image/DataSubmitGroupView.png]]  

The group view is a report for group accountants to view the data submit status for multiple entities. They can get an overview on the statuses for a certain group node or a bunch of entities. You can click an entity to navigate to the Data Release Cockpit, you can batch approve/reject, and you can batch lock/unlock. 

The lock supports lock/unlock in future. Which means, group accountant can schedule to lock/unlock entities for data package submitting. 


* Deduction
The following deduction mainly focus on how data submission integrated with BPC. 

** 1709 With Defer
The data submit method is configured in this way:
#+CAPTION: Method Header
| Model  | Method | Type | Desc.                  | EMode      | VM    |
|--------+--------+------+------------------------+------------+-------|
| RTCCTB | DC002  | DS   | Data Submitting to BPC | Sequential | DV100 |

#+CAPTION: Method Steps
| Model  | Method | Step ID | Desc.     | Seq. | Stream Type | Selection | VM | Freq. |
|--------+--------+---------+-----------+------+-------------+-----------+----+-------|
| RTCCTB | DC002  |     001 | B/S & I/S |    1 | FI_JOURNAL  |           |    |     1 |

The above method is the simplest but most usual case that only contain one sub-package which includes all the data. In this case, there is only the main package, the "sub-package tab" will be hidden. The frequency of the package is by period. Validation method is only given on header level. 
 
=Additional Notes:=
1. We assume local validation is supported in 1709. 
2. Exchange rate between local currency and group currency USD is 1:1.
3. Account number is omitted for simplicity.
4. Irrelevant columns are hided for different steps. 
5. "LC" only reflects BPC's point of view.
6. The corresponding pseudo sql can be found in [[https://wiki.wdf.sap.corp/wiki/x/Ds83bQ][SDD-Consolidation Views]].

*** Scenario 1: CT in BPC, data comes from ACDOCA

*Step 1: Local close*: Data in ACDOCA:  
| Entity |  Period | Amount | Currency | Timestamp           |
|--------+---------+--------+----------+---------------------|
| C100   | 2016.01 |    100 | LC       | 2016/01/29 10:30:00 |

*Step 2: Open period for data collection*: the group accountant opens current period which will generate a PRR for the entity. The status in initial.
| PullReq | Type | Status  | Entity |  Period | Timestamp |
|---------+------+---------+--------+---------+-----------|
| 0000001 | PRR  | Initial | C100   | 2016.01 |           |

*Step 3: Submit the report data*: the local accountant submits the report data for current period. The PRR's status is changed to "Released", and the current timestamp is also recorded.  
| PullReq | Type | Status    | Entity |  Period | Timestamp           |
|---------+------+-----------+--------+---------+---------------------|
| 0000001 | PRR  | Released | C100   | 2016.01 | 2016/01/30 10:30:00 |

*Step 4: Approve PRR*: Once a PRR is released, the group accountant can see the corresponding data in consolidation engine. She can run validation again to confirm the data is OK. The rule could be same as the local accountant's before release, or she can run additional validation rules. If the result is OK, then the status of the PRR is changed to "Approved".
| PullReq | Type | Status   | Entity |  Period | Timestamp           |
|---------+------+----------+--------+---------+---------------------|
| 0000001 | PRR  | Approved | C100   | 2016.01 | 2016/01/30 10:30:00 |

If the group accountant rejects the data for some reason, then the PRR is set to "Rejected". And a new PRR is created automatically with initial status. 
| PullReq | Type | Status   | Entity |  Period | Timestamp           |
|---------+------+----------+--------+---------+---------------------|
| 0000001 | PRR  | Rejected | C100   | 2016.01 | 2016/01/30 10:30:00 |
| 0000002 | PRR  | Initial  | C100   | 2016.01 |                     |

*Step 5: Run consolidation tasks*: Consolidation results are posted to ACDOCC.
| DOCNR | Type | Entity |    Time | BPC Category | Amount | Currency |
|-------+------+--------+---------+--------------+--------+----------|
| 10001 | PRR  | C100   | 2016.01 | FINAL        |    100 | USD      |

*Step 6: Post a new adjustment document in ACDOCA*: The period is re-open. 
| Entity |    Time | Amount | Currency | Timestamp           |
|--------+---------+--------+----------+---------------------|
| C100   | 2016.01 |    100 | LC       | 2016/01/29 10:30:00 |
| C100   | 2016.01 |      5 | LC       | 2016/01/30 11:20:00 |

*Step 7: Raise an ARR*: Data validation happens on the total data of period 2016.01, rather than the delta data. If passing the validation, an ARR is inserted with status "Released".
| PullReq | Type | Status   | Entity |  Period | Timestamp           |
|---------+------+----------+--------+---------+---------------------|
| 0000001 | PRR  | Approved | C100   | 2016.01 | 2016/01/29 10:30:00 |
| 0000002 | ARR  | Released | C100   | 2016.01 | 2016/01/30 11:20:00 |

*Step 8: Check the new released data:* Here, the group accountant decides whether this delta amount need to be counted into this period, or defer to next period, or just reject it and ask the local accountant submit again. 

If data is validated and approved, she can run consolidation tasks again. Consolidation tasks needs to  re-run based on the complete data set, rather than only the new released delta part. But it posts only delta result to ACDOCC. 
| PullReq | Type | Status   | Entity |  Period | Timestamp           |
|---------+------+----------+--------+---------+---------------------|
| 0000001 | PRR  | Approved | C100   | 2016.01 | 2016/01/29 10:30:00 |
| 0000002 | ARR  | Approved | C100   | 2016.01 | 2016/01/30 11:20:00 |

| DOCNR | Entity |  Period | BPC Category | Amount | Currency |
|-------+--------+---------+--------------+--------+----------|
| 10001 | C100   | 2016.01 | FINAL        |    100 | USD      |
| 10002 | C100   | 2016.01 | FINAL        |      5 | USD      |

If data is deferred, the data release request's status is changed to "Deferred". Meanwhile, a new document is posted into ACDOCC which rollup the delta amount and has its period value changes to next period and the currency is still in local. Then, in the next period, the amount will be counted into consolidation. 
| PullReq | Type | Status   | Entity |  Period | Timestamp           |
|---------+------+----------+--------+---------+---------------------|
| 0000001 | PRR  | Approved | C100   | 2016.01 | 2016/01/29 10:30:00 |
| 0000002 | ARR  | Deferred | C100   | 2016.01 | 2016/01/30 11:20:00 |

| DOCNR | PLVL | Entity |  Period | BPC Category | Amount | Currency | PullReq |
|-------+------+--------+---------+--------------+--------+----------+---------|
| 10001 |   15 | C100   | 2016.01 | FINAL        |    100 | USD      | 0000001 |
| 10002 |   03 | C100   | 2016.02 | FINAL        |      5 | LC       | 0000002 |

If data is validated and rejected, the data release request's status is change to "Rejected" and a new ARR is inserted with "Initial" status. Once rejected, BPC won't see the changed data again, it only can see the data which the latest "Released" or "Approved" data release request points. 
| PullReq | Type | Status   | Entity |  Period | Timestamp           |
|---------+------+----------+--------+---------+---------------------|
| 0000001 | PRR  | Approved | C100   | 2016.01 | 2016/01/29 10:30:00 |
| 0000002 | ARR  | Rejected | C100   | 2016.01 | 2016/01/30 11:20:00 |
| 0000003 | ARR  | Initial  | C100   | 2016.01 |                     |

*The data release request id provides following usages:*
1. Flags a valid set of consolidation result lines that belongs to the last approved data release request.
2. Finds the right timestamp when drilling through to the corresponding source journal items in ACDOCA.

*** Scenario 2: CT in BPC, data comes from ACDOCC
*Step 1: Flexible Upload*: Data is posted into ACDOCC with posting level "space", which allows to change the amounts after posting.  
| DOCNR | PLVL | Entity |  Period | Amount | Currency |
|-------+------+--------+---------+--------+----------|
| 10001 |      | C100   | 2016.01 |    100 | LC       |

*Step 2: Open period*: the group accountant opens current period which will generate a PRR for the entity. The status in initial.
| PullReq | PTYPE | Status   | Entity |  Period | Timestamp           |
|---------+-------+----------+--------+---------+---------------------|
| 0000001 | PRR   | Initial  | C100   | 2016.01 | 2016/01/30 10:30:00 |

*Step 3: Release Data*: Local accountant releases the uploaded data. The data is first copied to a new document with posting level "00". Then the data is validated by the assigned validation method. If the validation result is OK, the PPR is changed to "Released".
| DOCNR | PLVL | Entity |  Period | Amount | Currency | Timestamp           |
|-------+------+--------+---------+--------+----------+---------------------|
| 10001 |      | C100   | 2016.01 |    100 | LC       |                     |
| 20001 |   00 | C100   | 2016.01 |    100 | LC       | 2016/01/30 10:30:00 |

| PullReq | PTYPE | Status   | Entity |  Period | Timestamp           |
|---------+-------+----------+--------+---------+---------------------|
| 0000001 | PRR   | Released | C100   | 2016.01 | 2016/01/30 10:30:00 |

*Step 4: Validate and check the released data*: The group accountant can now see the data. She decides to approve or reject it. Because it is a PRR, she cannot defer it. Now suppose the data is rejected, a new PRR with "Initial" status is inserted.

| PullReq | PTYPE | Status   | Entity |  Period | Timestamp           |
|---------+-------+----------+--------+---------+---------------------|
| 0000001 | PRR   | Rejected | C100   | 2016.01 | 2016/01/30 10:30:00 |
| 0000002 | PRR   | Initial  | C100   | 2016.01 |                     |

*Step 5: Change amount and re-submit*: The local accountant is notified the data is not approved. He changes the amount from 100 to 105, and re-submits the data. Only the delta amount 5 is posted to ACDOCC with a new document number. 
| DOCNR | PLVL | Entity |  Period | Amount | Currency | Timestamp           |
|-------+------+--------+---------+--------+----------+---------------------|
| 10001 |      | C100   | 2016.01 |    105 | LC       |                     |
| 20001 |   00 | C100   | 2016.01 |    100 | LC       | 2016/01/30 10:30:00 |
| 20002 |   00 | C100   | 2016.01 |      5 | LC       | 2016/01/30 14:00:00 |

| PullReq | PTYPE | Status   | Entity |  Period | Timestamp           |
|---------+-------+----------+--------+---------+---------------------|
| 0000001 | PRR   | Rejected | C100   | 2016.01 | 2016/01/30 10:30:00 |
| 0000002 | PRR   | Released | C100   | 2016.01 | 2016/01/30 14:00:00 |

*Step 6: Release an ARR and defer*: Now the PRR is approved, the local accountant wants to submit an adjustment. The group accountant decides to defer this adjustment to the next period. 
| PullReq | PTYPE | Status   | Entity |  Period | Timestamp           |
|---------+-------+----------+--------+---------+---------------------|
| 0000001 | PRR   | Rejected | C100   | 2016.01 | 2016/01/30 10:30:00 |
| 0000002 | PRR   | Approved | C100   | 2016.01 | 2016/01/30 14:00:00 |
| 0000003 | ARR   | Deferred | C100   | 2016.01 | 2016/01/31 09:49:13 |

| DOCNR | PLVL | Entity |  Period | Amount | Currency | Timestamp           | PullReq |
|-------+------+--------+---------+--------+----------+---------------------+---------|
| 10001 |      | C100   | 2016.01 |    115 | LC       |                     |         |
| 20001 |   00 | C100   | 2016.01 |    100 | LC       | 2016/01/30 10:30:00 | 0000001 |
| 20002 |   00 | C100   | 2016.01 |      5 | LC       | 2016/01/30 14:00:00 | 0000002 |
| 20003 |   03 | C100   | 2016.02 |     10 | LC       | 2016/01/31 09:49:13 | 0000003 |

*** Scenario 3: CT in S4, data comes from ACDOCA
*The delta translation must be supported.* 

*Step 1: Open period*: the group accountant opens current period which will generate a PRR for the entity. The status in initial.
#+CAPTION: Data Release Request
| PullReq | Type | Status  | Entity |  Period | Timestamp           |
|---------+------+---------+--------+---------+---------------------|
| 0000001 | PRR  | Initial | C100   | 2016.01 |                     |

*Step 2: Currency Translation*: The local accountant run currency translation in the Data Release Cockpit. Local amounts are translated and posted into ACDOCC. The timestamp of CT run(cut-off time) is recorded to the PRR, but the status is still "Initial".  
#+CAPTION: Data in ACDOCA 
| Entity |  Period | Amount | Currency | Timestamp           |
|--------+---------+--------+----------+---------------------|
| C100   | 2016.01 |    100 | LC       | 2016/01/28 20:10:32 |

#+CAPTION: Data in ACDOCC 
| Entity |  Period | PLVL | LC Amount | LC Key | GC Amount | GC Key | Timestamp           |  PRUUID |
|--------+---------+------+-----------+--------+-----------+--------+---------------------+---------|
| C100   | 2016.01 |   15 |       100 | EUR    |       100 | USD    | 2016/01/29 10:30:00 | 0000001 |

#+CAPTION: Data Release Request
| PullReq | Type | Status  | Entity |  Period | Timestamp           |
|---------+------+---------+--------+---------+---------------------|
| 0000001 | PRR  | Initial | C100   | 2016.01 | 2016/01/29 10:30:00 |

*Step 3: Re-run Currency Translation*: The local accountant re-run CT after he post an adjustment document in ACDOCA. CT only translates the lines between last timestamp and this timestamp, and post a new translated document. The PRR's timestamp is updated to the new one.  
#+CAPTION: Data in ACDOCA 
| Entity |  Period | Amount | Currency | Timestamp           |
|--------+---------+--------+----------+---------------------|
| C100   | 2016.01 |    100 | LC       | 2016/01/28 20:10:32 |
| C100   | 2016.01 |      5 | LC       | 2016/01/29 11:23:04 |

#+CAPTION: Data in ACDOCC 
| Entity |  Period | PLVL | LC Amount | LC Key | GC Amount | GC Key | Timestamp           |  PRUUID |
|--------+---------+------+-----------+--------+-----------+--------+---------------------+---------|
| C100   | 2016.01 |   15 |       100 | EUR    |       100 | USD    | 2016/01/29 10:30:00 | 0000001 |
| C100   | 2016.01 |   15 |         5 | EUR    |         5 | USD    | 2016/01/29 11:28:19 | 0000001 |

#+CAPTION: Data Release Request
| PullReq | Type | Status  | Entity |  Period | Timestamp           |
|---------+------+---------+--------+---------+---------------------|
| 0000001 | PRR  | Initial | C100   | 2016.01 | 2016/01/29 11:28:19 |

*Step 4: Release PRR*: The local accountant release the PRR after local validation is passed. If no variation is found, that is new data between last timestamp and current timestamp. then the status is changed to "Released". Otherwise, he has to run CT again to include the difference. 
#+CAPTION: Data Release Request
| PullReq | Type | Status   | Entity |  Period | Timestamp           |
|---------+------+----------+--------+---------+---------------------|
| 0000001 | PRR  | Released | C100   | 2016.01 | 2016/01/29 13:05:43 |

~Step 2 to Step 4 can be combined, that is the local accountant release the data directly, which will automatically run CT and validation, and releasing.~ 

*Step 5: Approve PRR*: The group accountant decides to approve or reject the request. If it is approved, the status is changed to "Approved". 
#+CAPTION: Data Release Request
| PullReq | Type | Status   | Entity |  Period | Timestamp           |
|---------+------+----------+--------+---------+---------------------|
| 0000001 | PRR  | Approved | C100   | 2016.01 | 2016/01/29 13:05:43 |

If "Rejected", besides changing the status to "Rejected", a new PRR with "Initial" status is inserted.
#+CAPTION: Data Release Request
| PullReq | Type | Status   | Entity |  Period | Timestamp           |
|---------+------+----------+--------+---------+---------------------|
| 0000001 | PRR  | Rejected | C100   | 2016.01 | 2016/01/29 13:05:43 |
| 0000002 | PRR  | Initial  | C100   | 2016.01 |                     |

*Step 6: Adjustment*: In case variation is found after the PRR is approved, the local accountant needs to raise an ARR. CT translates the delta amount and an ARR is released with the same new timestamp.
#+CAPTION: Data in ACDOCA 
| Entity |  Period | Amount | Currency | Timestamp           |
|--------+---------+--------+----------+---------------------|
| C100   | 2016.01 |    100 | LC       | 2016/01/28 20:10:32 |
| C100   | 2016.01 |      5 | LC       | 2016/01/29 11:10:12 |
| C100   | 2016.01 |     10 | LC       | 2016/01/30 09:13:36 |

#+CAPTION: Data in ACDOCC 
| Entity |  Period | PLVL | LC Amount | LC Key | GC Amount | GC Key | Timestamp           |  PRUUID |
|--------+---------+------+-----------+--------+-----------+--------+---------------------+---------|
| C100   | 2016.01 |   15 |       100 | EUR    |       100 | USD    | 2016/01/29 10:30:00 | 0000001 |
| C100   | 2016.01 |   15 |         5 | EUR    |         5 | USD    | 2016/01/29 11:28:19 | 0000001 |
| C100   | 2016.01 |   15 |        10 | EUR    |        10 | USD    | 2016/01/30 10:00:00 | 0000002 |

#+CAPTION: Data Release Request
| PullReq | Type | Status   | Entity |  Period | Timestamp           |
|---------+------+----------+--------+---------+---------------------|
| 0000001 | PRR  | Approved | C100   | 2016.01 | 2016/01/29 13:05:43 |
| 0000002 | ARR  | Released | C100   | 2016.01 | 2016/01/30 10:00:00 |

*Step 5: Approve/Reject/Defer the ARR*: Here, the group accountant can decide whether this delta amount need to be counted into this period, or defer to next period, or just reject it and ask the local accountant submit again. 

If approved, just change the status to "Approved". 
#+CAPTION: Data Release Request
| PullReq | Type | Status   | Entity |  Period | Timestamp           |
|---------+------+----------+--------+---------+---------------------|
| 0000001 | PRR  | Approved | C100   | 2016.01 | 2016/01/29 13:05:43 |
| 0000002 | ARR  | Approved | C100   | 2016.01 | 2016/01/30 10:00:00 |

If rejected, just change the status to "Rejected". The local accountant can revise the data or comments and raise an ARR again, as long as there is changes after last approved DRR. 
#+CAPTION: Data Release Request
| PullReq | Type | Status   | Entity |  Period | Timestamp           |
|---------+------+----------+--------+---------+---------------------|
| 0000001 | PRR  | Approved | C100   | 2016.01 | 2016/01/29 13:05:43 |
| 0000002 | ARR  | Rejected | C100   | 2016.01 | 2016/01/30 10:00:00 |

If deferred, besides the status is changed to "Deferred", a new document is posted into ACDOCC which rollup the delta amount and has its period value changes to next period and the currency is still in local. Then, in the next period, the amount will be re-translated. 
#+CAPTION: Data in ACDOCC 
| Entity |  Period | PLVL | LC Amount | LC Key | GC Amount | GC Key | Timestamp           |  PRUUID |
|--------+---------+------+-----------+--------+-----------+--------+---------------------+---------|
| C100   | 2016.01 |   15 |       100 | EUR    |       100 | USD    | 2016/01/29 10:30:00 | 0000001 |
| C100   | 2016.01 |   15 |         5 | EUR    |         5 | USD    | 2016/01/29 11:28:19 | 0000001 |
| C100   | 2016.01 |   15 |        10 | EUR    |        10 | USD    | 2016/01/30 10:00:00 | 0000002 |
| C100   | 2016.02 |   03 |        10 | EUR    |        10 | LC     | 2016/01/30 14:00:00 | 0000002 |

#+CAPTION: Data Release Request
| PullReq | Type | Status   | Entity |  Period | Timestamp           |
|---------+------+----------+--------+---------+---------------------|
| 0000001 | PRR  | Approved | C100   | 2016.01 | 2016/01/29 13:05:43 |
| 0000002 | ARR  | Deferred | C100   | 2016.01 | 2016/01/30 10:00:00 |

*Step 6: Reset and Re-Translation:* The local and group accountant can together decide if a "Re-set" is necessary. The group accountant may has the right to re-set a period for an entity.  All lines in ACDOCC related will be marked as "Deleted". All DRRs are marked as "Deleted", and a nee PRR is generated. 
#+CAPTION: Data in ACDOCC 
| Entity |  Period | PLVL | LC Amount | LC Key | GC Amount | GC Key | Timestamp           |  PRUUID | DEL |
|--------+---------+------+-----------+--------+-----------+--------+---------------------+---------+-----|
| C100   | 2016.01 |   15 |       100 | EUR    |       100 | USD    | 2016/01/29 10:30:00 | 0000001 | X   |
| C100   | 2016.01 |   15 |         5 | EUR    |         5 | USD    | 2016/01/29 11:28:19 | 0000001 | X   |
| C100   | 2016.01 |   15 |        10 | EUR    |        10 | USD    | 2016/01/30 10:00:00 | 0000002 | X   |
| C100   | 2016.02 |   03 |        10 | EUR    |        10 | LC     | 2016/01/30 14:00:00 | 0000002 | X   |

#+CAPTION: Data Release Request
| PullReq | Type | Status   | Entity |  Period | Timestamp           | DEL |
|---------+------+----------+--------+---------+---------------------+-----|
| 0000001 | PRR  | Approved | C100   | 2016.01 | 2016/01/29 13:05:43 | X   |
| 0000002 | ARR  | Deferred | C100   | 2016.01 | 2016/01/30 10:00:00 | X   |
| 0000003 | PRR  | Initial  | C100   | 2016.01 |                     |     |
  
Then it goes back to the *Step 1: Open period*

*** Scenario 4: CT in S4, data comes from ACDOCC
*Step 1: Open period*: the group accountant opens current period which will generate a PRR for the entity. The status in initial.
#+CAPTION: Data Release Request
| PullReq | Type | Status  | Entity |  Period | Timestamp           |
|---------+------+---------+--------+---------+---------------------|
| 0000001 | PRR  | Initial | C100   | 2016.01 |                     |

*Step 2: Flexible Upload*: Data is stored in ACDOCC with posting level equals "Space", which allows to change the amounts after posting. Each time the user upload new set of data, it uses "upsert" operation to update/insert data.  
| DOCNR | PLVL | Entity |  Period | LC Amount | LC Key | GC Amount | GC Key | Timestamp           |
|-------+------+--------+---------+-----------+--------+-----------+--------+---------------------|
| 10001 |      | C100   | 2016.01 |       100 | EUR    |       100 | LC     | 2016/01/30 09:45:00 |

*Step 3: Commit Data*: The local accountant commits data so that this batch of data can be validated and converted. The data is converted to group CoA and posted in a new document with posting level "00". 
| DOCNR | PLVL | Entity |  Period | LC Amount | LC Key | GC Amount | GC Key | Timestamp           |
|-------+------+--------+---------+-----------+--------+-----------+--------+---------------------|
| 10001 |      | C100   | 2016.01 |       100 | EUR    |       100 | LC     | 2016/01/30 09:45:00 |
| 20001 |   00 | C100   | 2016.01 |       100 | EUR    |       100 | LC     | 2016/01/30 10:30:00 |

~The validation is not taking place during posting, it is after posting.~

*Step 4: Currency Translation*: The local accountant runs currency translation in the Data Release Cockpit. The timestamp of CT run(cut-off time) is recorded to the PRR, but the status is still "Initial".  
#+CAPTION: Data in ACDOCC 
| DOCNR | PLVL | Entity |  Period | LC Amount | LC Key | GC Amount | GC Key | Timestamp           |  PRUUID |
|-------+------+--------+---------+-----------+--------+-----------+--------+---------------------+---------|
| 10001 |      | C100   | 2016.01 |       100 | EUR    |       100 | LC     | 2016/01/30 09:45:00 |         |
| 20001 |   00 | C100   | 2016.01 |       100 | EUR    |       100 | LC     | 2016/01/30 10:30:00 | 0000001 |
| 20002 |   15 | C100   | 2016.01 |       100 | EUR    |       100 | USD    | 2016/01/30 10:31:00 | 0000001 |

#+CAPTION: Data Release Request
| PullReq | Type | Status  | Entity |  Period | Timestamp           |
|---------+------+---------+--------+---------+---------------------|
| 0000001 | PRR  | Initial | C100   | 2016.01 | 2016/01/30 10:31:00 |

~In case there are multiple group currencies, then each group currency will generate a document. It is possible to post standardized documents before CT, which have posting levels between "00" and "15".~

*Step 5: Release Data*: The local accountant releases the data so that the group accountant can see it. The data (posting level from 00 to 15) will be validated before the PPR status changed to "Released".
#+CAPTION: Data Release Request
| PullReq | TYPE | Status   | Entity |  Period | Timestamp           |
|---------+------+----------+--------+---------+---------------------|
| 0000001 | PRR  | Released | C100   | 2016.01 | 2016/01/30 10:31:00 |

*Step 6: Reject PRR*: The group accountant can now see the data. She decides to approve or reject it. Now suppose the data is rejected, a new PRR with "Initial" status is inserted.
#+CAPTION: Data Release Request
| PullReq | PTYPE | Status   | Entity |  Period | Timestamp           |
|---------+-------+----------+--------+---------+---------------------|
| 0000001 | PRR   | Rejected | C100   | 2016.01 | 2016/01/30 10:31:00 |
| 0000002 | PRR   | Initial  | C100   | 2016.01 |                     |

*Step 7: Change Amount and Re-submit*: The local accountant changes the amount from 100 to 105, then commit the changes. Only the delta amount 5 is posted to ACDOCC as a new document. Then CT generates another document only for the delta amount. Finally the new PRR is changed to "Released" if validation is passed. 
#+CAPTION: Data in ACDOCC 
| DOCNR | PLVL | Entity |  Period | LC Amount | LC Key | GC Amount | GC Key | Timestamp           |  PRUUID |
|-------+------+--------+---------+-----------+--------+-----------+--------+---------------------+---------|
| 10001 |      | C100   | 2016.01 |       105 | EUR    |       105 | LC     | 2016/01/30 14:00:00 |         |
| 20001 |   00 | C100   | 2016.01 |       100 | EUR    |       100 | LC     | 2016/01/30 10:30:00 | 0000001 |
| 20002 |   15 | C100   | 2016.01 |       100 | EUR    |       100 | USD    | 2016/01/30 10:31:00 | 0000001 |
| 20003 |   00 | C100   | 2016.01 |         5 | EUR    |         5 | LC     | 2016/01/30 14:01:00 | 0000002 |
| 20004 |   15 | C100   | 2016.01 |         5 | EUR    |         5 | USD    | 2016/01/30 14:02:00 | 0000002 |
 
#+CAPTION: Data Release Request
| PullReq | PTYPE | Status   | Entity |  Period | Timestamp           |
|---------+-------+----------+--------+---------+---------------------|
| 0000001 | PRR   | Rejected | C100   | 2016.01 | 2016/01/30 10:31:00 |
| 0000002 | PRR   | Released | C100   | 2016.01 | 2016/01/30 14:02:00 |

*Step 8: Release an ARR*: Now the PRR is approved, the local accountant wants to submit an adjustment. The group accountant decides to defer this adjustment to next period. 
#+CAPTION: Data Release Request
| PullReq | PTYPE | Status   | Entity |  Period | Timestamp           |
|---------+-------+----------+--------+---------+---------------------|
| 0000001 | PRR   | Rejected | C100   | 2016.01 | 2016/01/30 10:31:00 |
| 0000002 | PRR   | Approved | C100   | 2016.01 | 2016/01/30 14:02:00 |
| 0000003 | ARR   | Deferred | C100   | 2016.01 | 2016/01/30 17:00:00 |

#+CAPTION: Data in ACDOCC 
| DOCNR | PLVL | Entity |  Period | LC Amount | LC Key | GC Amount | GC Key | Timestamp           |  PRUUID |
|-------+------+--------+---------+-----------+--------+-----------+--------+---------------------+---------|
| 10001 |      | C100   | 2016.01 |       115 | EUR    |       115 | LC     | 2016/01/30 16:50:00 |         |
| 20001 |   00 | C100   | 2016.01 |       100 | EUR    |       100 | LC     | 2016/01/30 10:30:00 | 0000001 |
| 20002 |   15 | C100   | 2016.01 |       100 | EUR    |       100 | USD    | 2016/01/30 10:31:00 | 0000001 |
| 20003 |   00 | C100   | 2016.01 |         5 | EUR    |         5 | LC     | 2016/01/30 14:01:00 | 0000002 |
| 20004 |   15 | C100   | 2016.01 |         5 | EUR    |         5 | USD    | 2016/01/30 14:02:00 | 0000002 |
| 20005 |   00 | C100   | 2016.01 |        10 | EUR    |        10 | LC     | 2016/01/30 17:00:00 | 0000003 |
| 20006 |   15 | C100   | 2016.01 |        10 | EUR    |        10 | USD    | 2016/01/30 17:00:00 | 0000003 |
| 20007 |   03 | C100   | 2016.02 |        10 | EUR    |        10 | LC     | 2016/01/30 17:01:00 | 0000003 |

*Step 9: Reset*: Resetting is the same with scenario 3. After resetting, it goes back to Step 1.

** Statuses
*** Before period is open
The period is not open, no MonthEnd request is generated. When Data Release Cockpit is open for this period, a gentle message will show in the bottom area which tells the user this period is not open for data submission. The "Submit" button is gray out, however, you can still do flexible upload or run CT for some preparation. 
|                             | <60>                                                         |
| UI Elements                 | State                                                        |
|-----------------------------+--------------------------------------------------------------|
| Package Status              | Empty                                                        |
| Control                     | Empty                                                        |
| Variation                   | Empty                                                        |
| Lock Status                 | Empty                                                        |
| System Status               | Empty                                                        |
| Last Submit Time            | Empty                                                        |
| This Submit Time            | Empty                                                        |
| Submit Button               | Gray for local accountant, hidden for group accountant        |
| Defer,Reject,Approve Button | Hidden for local accountant, gray for group accountant        |
| Reported Data Tab           | Data in ACDOCA/C of current period, including the deferred amount from the previous period |
| Sub-Packages Tab            | Show sub-package list if available without any interaction allowed |
| Control Tab                 | Not Allowed                                                  |
| Comments Tab                | Not Allowed                                                  |
| Attachments Tab             | Not Allowed                                                  |
| Submit History Tab          | Not Allowed                                                  |

BPC has nothing to do now.  
| BPC Statuses            | Open State     |
|-------------------------+----------------|
| Cons. Monitor by Entity | Initial        |
| Control. Monitor        | To_be_Executed |
| Can see the local data? | No             |

*** Period is open
The period is open, MonthEnd request is generated with initial status. If the package is locked, you cannot submit the package. If you only run controls and save the control result, then "This timestamp" will be recorded into the pull request. 
|                             | <60>                                                         |
| UI Elements                 | State                                                        |
|-----------------------------+--------------------------------------------------------------|
| Package Status              | To be Released                                              |
| Control                     | To be Run                                                    |
| Variation                   | Empty                                                        |
| Lock Status                 | Locked/Unlocked                                              |
| System Status               | Empty                                                        |
| Last Submit Time            | Empty                                                        |
| This Submit Time            | Time when the APP is accessed                                |
| Submit Button               | Available for local accountant, hidden for group accountant   |
| Defer,Reject,Approve Button | Hidden for local accountant, gray for group accountant        |
| Reported Data Tab           | Data in ACDOCA/C of current period before this submit time   |
| Sub-Packages Tab            | Show sub-package list if available with any interaction allowed |
| Control Tab                 | There should be no control result save before, but you can run controls. |
| Comments Tab                | Can add comment                                              |
| Attachments Tab             | Can upload attachments                                       |
| Submit History Tab          | Only one pull request with initial status, delta data is shown as the entire data of current period |

BPC has nothing to do now.  
| BPC Statuses            | Open State     |
|-------------------------+----------------|
| Cons. Monitor by Entity | Initial        |
| Control. Monitor        | To_be_Executed |
| Can see the local data? | No             |

*** Package is released
Package will be validated automatically before submitting if "This Submit Time" is different with the timestamp of last control run. If validation is failed, submission is not allowed. 
|                             | <60>                                                         |
| UI Elements                 | State                                                        |
|-----------------------------+--------------------------------------------------------------|
| Package Status              | Released                                                    |
| Control                     | Passed                                                       |
| Variation                   | If there is new data entering after this submit time         |
| Lock Status                 | Unlocked/Locked                                              |
| System Status               | Empty                                                        |
| Last Submit Time            | The last submit time                                         |
| This Submit Time            | Time after you click the submit button                       |
| Submit Button               | If no variation, then click the button will not raise new request |
| Defer,Reject,Approve Button | Hidden for local accountant, available for group accountant   |
| Reported Data Tab           | Data in ACDOCA/C of current period before this submit time   |
| Sub-Packages Tab            | Show sub-package list if available with any interaction allowed |
| Control Tab                 | Show the control result of last run. Saving result is not allowed |
| Comments Tab                | Can add comment                                              |
| Attachments Tab             | Can upload attachments                                       |
| Submit History Tab          | Available                                                    |

Once the package is released, the entity status in BPC's consolidation monitor will be changed to "To_be_Reviewed". And the data actually can be seen by BPC consolidation engine. Clicking "To_be_Reviewed" will open the Data Release Cockpit with the corresponding package. BPC can also run controls in the control monitor, all the possible statuses would be shown.

| BPC Statuses            | State          | Afterward States          |
|-------------------------+----------------+----------------------------|
| Cons. Monitor by Entity | To_be_Reviewed |                            |
| Control Monitor         | To_be_executed  | Successed/Failed/Dismissed |
| Can see the local data? | Yes            |                            |

*** Package is approved
The group accountant approves the package. After approval, she can run consolidation tasks. The system status will show current status of the data in consolidation engine. Whether it is running, failed, or finished successfully.
|                             | <60>                                                         |
| UI Elements                 | State                                                        |
|-----------------------------+--------------------------------------------------------------|
| Package Status              | Approved                                                     |
| Control                     | Passed                                                       |
| Variation                   | If there is new data entering after this submit time         |
| Lock Status                 | Unlocked/Locked                                              |
| System Status               | Empty / Running / Failed / Finished Successfully             |
| Last Submit Time            | The last submit time                                         |
| This Submit Time            | Time when you access this APP                                |
| Submit Button               | If there is variation, then local accountant can click submit to raise an adjustment request. |
| Defer,Reject,Approve Button | Hidden for local accountant, gray for group accountant        |
| Reported Data Tab           | Data in ACDOCA/C of current period before this submit time   |
| Sub-Packages Tab            | Show sub-package list if available. You can view the content of each sub-packages, however, you cannot do any changes on it. |
| Control Tab                 | Show the control result of last run. Saving result is allowed if there is variation. |
| Comments Tab                | Can view comments, or give comments if there is variation    |
| Attachments Tab             | Can download attachments, or upload if there is variation    |
| Submit History Tab          | Available                                                    |

Once the package is approved, the entity status in BPC's consolidation monitor is changed to "To_be_Executed". You then click to run consolidation tasks. Afterward, BPC gives the result of consolidation run, that are Running, Successed, and Failed.
| BPC Statuses            | Open State        | Afterward States        |
|-------------------------+-------------------+--------------------------|
| Cons. Monitor by Entity | To_be_Executed    | Running/Successed/Failed |
| Control Monitor         | Success/Dismissed |                          |
| Can see the local data? | Yes               |                          |

*** Package is rejected
After posting standardized journal entries, she wants to run validation again before approving. However, she thinks the data is not acceptable, so she rejected it with some comments provided to the local accountant. A new request will be created with initial status to allow the local accountant submit again until get approval.
|                             | <60>                                                         |
| UI Elements                 | State                                                        |
|-----------------------------+--------------------------------------------------------------|
| Package Status              | Rejected                                                     |
| Control                     | Passed                                                       |
| Variation                   | If there is new data entering after this submit time         |
| Lock Status                 | Unlocked                                                     |
| System Status               | Empty                                                        |
| Last Submit Time            | The last submit time                                         |
| This Submit Time            | Time when you access this APP                                |
| Submit Button               | If there is variation or any other changes like providing comments, then local accountant can click submit to raise an adjustment request. |
| Defer,Reject,Approve Button | Hidden for local accountant, gray for group accountant        |
| Reported Data Tab           | Data in ACDOCA/C of current period before this submit time   |
| Sub-Packages Tab            | Show sub-package list if available. You can view the content of each sub-packages, however, you cannot do any changes on it. |
| Control Tab                 | Show the control result of last run. Can save control result. |
| Comments Tab                | Can view/reply comments                                      |
| Attachments Tab             | Can download/upload attachments                              |
| Submit History Tab          | Available                                                    |

As the request is rejected, BPC can still not run consolidation on the new released data. The status is changed to the former one, that is either "Initial" or "To_be_Executed". 
| BPC Statuses            | Open State                                |
|-------------------------+-------------------------------------------|
| Cons. Monitor by Entity | Initial/To_be_Executed                    |
| Control Monitor         | To_be_Executed/Successed/Failed/Dismissed |
| Can see the local data? | Initial?No:Yes                            |

*** Package is deferred
When we say package is deferred, we only mean some adjustments are deferred. In other words, a MonthEnd request can not be deferred. Only adjustment requests can be deferred.  
|                             | <60>                                                         |
| UI Elements                 | State                                                        |
|-----------------------------+--------------------------------------------------------------|
| Package Status              | Deferred                                                     |
| Control                     | Passed                                                       |
| Variation                   | If there is new data entering after this submit time         |
| Lock Status                 | Locked / Unlocked                                            |
| System Status               | Empty                                                        |
| Last Submit Time            | The last submit time                                         |
| This Submit Time            | Time when you access this APP                                |
| Submit Button               | If there is variation, then local accountant can click submit to raise an adjustment request. |
| Defer,Reject,Approve Button | Hidden for local accountant, gray for group accountant        |
| Reported Data Tab           | Data in ACDOCA/C of current period before this submit time.  |
| Sub-Packages Tab            | Show sub-package list if available. You can view the content of each sub-packages, however, you cannot do any changes on it. |
| Control Tab                 | Show the control result of last run. Can save new control result if there is variation. |
| Comments Tab                | Can comment if there is variation                            |
| Attachments Tab             | Can upload attachments if there is variation                 |
| Submit History Tab          | Available                                                    |

BPC keeps its current status, but only the deferred amount will be copied to next period. 
| BPC Statuses            | Open State                                |
|-------------------------+-------------------------------------------|
| Cons. Monitor by Entity | To_be_Executed/Running/Successed/Failed   |
| Control Monitor         | To_be_Executed/Successed/Failed/Dismissed |
| Can see the local data? | Yes, but not include the deferred amount  |
 
** 1610 Without Defer
In RTC's first release(1610), data release request will be used as both a notification and timestamp filtering. The status control in the data release request will not be fully appeared. BPC can access the data directly in ACDOCA with timestamp filtering. The timestamp in the data release request which is released by the local accountant reflects the local close time. Before the time, the data is allowed(by local accountants) for consolidation, and after the time, the data should not be counted for consolidation. 

This approach has following restrictions:

1. Once the local accountant raise the data release request, it is approved automatically, and group accountant can only accept it. There is no embedded control on this process, group accountant must notify the local accountant externally if she doesn't want the data. 
2. Delta consolidation is still not possible. Each time the local accountant raise a new data release request, BPC will always do a full re-consolidation based on the new timestamp. 
3. You can not defer amount to next period.
4. If consolidation is in "RUNNING" or "ERROR" status, reporting will produce data inconsistency.

I give following examples to explain detail data flow:

*** Scenario1: Local accountant submits data through flexible uploading 
*Step 1: Upload data but not released*: Data is saved in ACDOCC, a document number is given. The document status in in "Staging". When the user submit the data, he must choose the value of BPC category. The currency key of "CONS_SL" is set to "LC" for easy consumption for BPC. The actual currency key will be saved in HCURK. Currently, there is no data release request created, so BPC won't see the data.

=ACDOCC=  
| DOCNR | Status  | Entity |    Time | Currency | BPC Category | Group  | FLOW  | CONS_SL | PullReq |
|-------+---------+--------+---------+----------+--------------+--------+-------+---------+---------|
| 10001 | Staging | C100   | 2016.01 | LC       | Actual       | G_NONE | INPUT |     100 |         |

*Step 2: Submit the data*: The original document status is changed to "posted". A data release request is created and the data release request number is set in the document lines. Now, BPC can see the data because there is a data release request exists which will be joined in the BPC consolidation view.

=ACDOCC=
| DOCNR | Status | Entity |   FTime | Currency | BPC Category | Group  | FLOW  | Amount | PullReq |
|-------+--------+--------+---------+----------+--------------+--------+-------+--------+---------|
| 10001 | Posted | C100   | 2016.01 | LC       | Actual       | G_NONE | INPUT |    100 | 0000001 |

=RTC_PULL_REQ=
|    UUID | Type | Entity |   FTime | Category | USTATUS  |
|---------+------+--------+---------+----------+----------|
| 0000001 | C    | C100   | 2016.01 | Actual   | APPROVED |

*Step 3: Re-upload a new copy and submit*: The former released document will be kept as it is. A new document is  posted along with the data release requests. Through the consolidation view, BPC will get the data of the latest data release request for each group of Entity, Fiscal Time, and BPC Category. 
=ACDOCC=
| DOCNR | Status | Entity |   FTime | Currency | BPC Category | Group  | FLOW  | Amount | PullReq |
|-------+--------+--------+---------+----------+--------------+--------+-------+--------+---------|
| 10001 | Posted | C100   | 2016.01 | LC       | Actual       | G_NONE | INPUT |    100 | 0000001 |
| 10002 | Posted | C100   | 2016.01 | LC       | Actual       | G_NONE | INPUT |    110 | 0000002 |

=RTC_PULL_REQ=
|    UUID | Type | Entity |   FTime | Category | USTATUS  |
|---------+------+--------+---------+----------+----------|
| 0000001 | C    | C100   | 2016.01 | Actual   | APPROVED |
| 0000002 | C    | C100   | 2016.01 | Actual   | APPROVED |

*** Scenario2: Local accountant submits data in ACDOCA  
If local data is in ACDOCA, then data copy to ACDOCC is unnecessary. Only raise a data release request with current timestamp is OK. The data release request is then used to join with the foundation view to get the filtered data before the recored timestamp. 

=RTC_PULL_REQ=
|    UUID | Type | Entity |   FTime | Category |     CTimestamp | USTATUS  |
|---------+------+--------+---------+----------+----------------+----------|
| 0000001 | A    | C100   | 2016.01 | Actual   | 20160302100020 | APPROVED |

*** Scenario3: Local accountants run currency translation in S/4, data comes from ACDOCA 
Local accountants can run currency translation in S/4 and then do data validations. The translated results will be saved in ACDOCC. BPC cannot see the translated results until he raises a data release request. In this case, BPC only gets data from ACDOCC rather than ACDOCA.

*Step 1: Local close*: Data in ACDOCA:  
| Entity |    Time | Currency | Amount |
|--------+---------+----------+--------|
| C100   | 2016.01 | LC       |    100 |

*Step 2: Run currency translation*: A rollup runs implicitly to create a local aggregated document. Translated results are also posted with each currency a dedicate document.
=ACDOCC=
| DOCNR | Entity |    Time | BPC Category | HSL | HCURK | CONS_SL | CONS_KEY | PullReq |
|-------+--------+---------+--------------+-----+-------+---------+----------+---------|
| 10001 | C100   | 2016.01 | Actual       | 100 | CNY   |     100 | LC       |         |
| 10002 | C100   | 2016.01 | Actual       | 100 | CNY   |      20 | USD      |         |
| 10003 | C100   | 2016.01 | Actual       | 100 | CNY   |      18 | EUR      |         |
 
*Step 3: Submit the data*: Raise a data release request
=ACDOCC=
| DOCNR | Entity |    Time | BPC Category | HSL | HCURK | CONS_SL | CONS_KEY | PullReq |
|-------+--------+---------+--------------+-----+-------+---------+----------+---------|
| 10001 | C100   | 2016.01 | Actual       | 100 | CNY   |     100 | LC       | 0000001 |
| 10002 | C100   | 2016.01 | Actual       | 100 | CNY   |      20 | USD      | 0000001 |
| 10003 | C100   | 2016.01 | Actual       | 100 | CNY   |      18 | EUR      | 0000001 |

=RTC_PULL_REQ=
|    UUID | Type | Entity |   FTime | Category | USTATUS  |
|---------+------+--------+---------+----------+----------|
| 0000001 | C    | C100   | 2016.01 | Actual   | APPROVED |

*Step 3: Re-submit a new set of translated data*: 
=ACDOCC=
| DOCNR | Entity |    Time | BPC Category | HSL | HCURK | CONS_SL | CONS_KEY | PullReq |
|-------+--------+---------+--------------+-----+-------+---------+----------+---------|
| 10001 | C100   | 2016.01 | Actual       | 100 | CNY   |     100 | LC       | 0000001 |
| 10002 | C100   | 2016.01 | Actual       | 100 | CNY   |      20 | USD      | 0000001 |
| 10003 | C100   | 2016.01 | Actual       | 100 | CNY   |      18 | EUR      | 0000001 |
| 10004 | C100   | 2016.01 | Actual       | 100 | CNY   |     200 | LC       | 0000002 |
| 10005 | C100   | 2016.01 | Actual       | 100 | CNY   |      40 | USD      | 0000002 |
| 10006 | C100   | 2016.01 | Actual       | 100 | CNY   |      36 | EUR      | 0000002 |

=RTC_PULL_REQ=
|    UUID | Type | Entity |   FTime | Category | USTATUS  |
|---------+------+--------+---------+----------+----------|
| 0000001 | C    | C100   | 2016.01 | Actual   | APPROVED |
| 0000002 | C    | C100   | 2016.01 | Actual   | APPROVED |

*** Scenario4: Local accountants run currency translation in S/4, data comes from flexible upload 

*Step 1: Upload local data*: Data must be in posted status, or currency translation can not run on it.
=ACDOCC=  
| DOCNR | Status | Entity |    Time | BPC Category | HSL | HCURK | CONS_SL | CONS_KEY | PullReq |
|-------+--------+--------+---------+--------------+-----+-------+---------+----------+---------|
| 10001 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |     100 | LC       |         |

*Step 2: Run currency translation*: Each currency will generate a document.
=ACDOCC=
| DOCNR | Status | Entity |    Time | BPC Category | HSL | HCURK | CONS_SL | CONS_KEY | PullReq |
|-------+--------+--------+---------+--------------+-----+-------+---------+----------+---------|
| 10001 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |     100 | LC       |         |
| 10002 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |      20 | USD      |         |
| 10003 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |      18 | EUR      |         |
 
*Step 3: Submit the data*: Raise a data release request
=ACDOCC=
| DOCNR | Status | Entity |    Time | BPC Category | HSL | HCURK | CONS_SL | CONS_KEY | PullReq |
|-------+--------+--------+---------+--------------+-----+-------+---------+----------+---------|
| 10001 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |     100 | LC       | 0000001 |
| 10002 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |      20 | USD      | 0000001 |
| 10003 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |      18 | EUR      | 0000001 |

=RTC_PULL_REQ=
|    UUID | Type | Entity |   FTime | Category | USTATUS  |
|---------+------+--------+---------+----------+----------|
| 0000001 | C    | C100   | 2016.01 | Actual   | APPROVED |

*Step 4: Re-submit a new set of translated data*: 
=ACDOCC=
| DOCNR | Status | Entity |    Time | BPC Category | HSL | HCURK | CONS_SL | CONS_KEY | PullReq |
|-------+--------+--------+---------+--------------+-----+-------+---------+----------+---------|
| 10001 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |     100 | LC       | 0000001 |
| 10002 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |      20 | USD      | 0000001 |
| 10003 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |      18 | EUR      | 0000001 |
| 10004 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |     200 | LC       | 0000002 |
| 10005 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |      40 | USD      | 0000002 |
| 10006 | Posted | C100   | 2016.01 | Actual       | 100 | CNY   |      36 | EUR      | 0000002 |

=RTC_PULL_REQ=
|    UUID | Type | Entity |   FTime | Category | USTATUS  |
|---------+------+--------+---------+----------+----------|
| 0000001 | C    | C100   | 2016.01 | Actual   | APPROVED |
| 0000002 | C    | C100   | 2016.01 | Actual   | APPROVED |
